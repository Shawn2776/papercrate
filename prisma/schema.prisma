datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum InvoiceStatus {
  DRAFT
  SENT
  PARTIALLY_PAID
  PAID
  OVERDUE
  CANCELLED
  VOID
}

model User {
  id         String   @id @default(cuid())
  clerkId    String   @unique
  email      String   @unique
  name       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deleted    Boolean  @default(false)
  businessId String   @unique
  business   Business @relation(fields: [businessId], references: [id])
}

model Business {
  id           String     @id @default(cuid())
  name         String
  email        String
  phone        String?
  addressLine1 String?
  addressLine2 String?
  city         String?
  state        String?
  country      String?
  postalCode   String?
  website      String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deleted      Boolean    @default(false)
  customers    Customer[]
  users        User[]
  invoices     Invoice[]
  products     Product[]
}

model Invoice {
  id         String        @id @default(cuid())
  number     String
  amount     Decimal       @db.Decimal(10, 2)
  dueDate    DateTime
  businessId String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  deleted    Boolean       @default(false)
  status     InvoiceStatus @default(DRAFT)
  business   Business      @relation(fields: [businessId], references: [id])
}

model Product {
  id          String   @id @default(cuid())
  businessId  String
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  unit        String
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleted     Boolean  @default(false)
  business    Business @relation(fields: [businessId], references: [id])
}

model Customer {
  id         String   @id @default(cuid())
  businessId String
  name       String
  email      String?
  phone      String?
  address    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deleted    Boolean  @default(false)
  business   Business @relation(fields: [businessId], references: [id])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String
  email     String
  action    String
  entity    String
  entityId  String?
  metadata  Json?
  summary   String?
  createdAt DateTime @default(now())
}
