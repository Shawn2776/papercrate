
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model BankDetail
 * 
 */
export type BankDetail = $Result.DefaultSelection<Prisma.$BankDetailPayload>
/**
 * Model Business
 * 
 */
export type Business = $Result.DefaultSelection<Prisma.$BusinessPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model Discount
 * 
 */
export type Discount = $Result.DefaultSelection<Prisma.$DiscountPayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model InvoiceDetail
 * 
 */
export type InvoiceDetail = $Result.DefaultSelection<Prisma.$InvoiceDetailPayload>
/**
 * Model InvoiceSettings
 * 
 */
export type InvoiceSettings = $Result.DefaultSelection<Prisma.$InvoiceSettingsPayload>
/**
 * Model InvoiceVersion
 * 
 */
export type InvoiceVersion = $Result.DefaultSelection<Prisma.$InvoiceVersionPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model PaymentLog
 * 
 */
export type PaymentLog = $Result.DefaultSelection<Prisma.$PaymentLogPayload>
/**
 * Model PaymentMethod
 * 
 */
export type PaymentMethod = $Result.DefaultSelection<Prisma.$PaymentMethodPayload>
/**
 * Model PaymentStatus
 * 
 */
export type PaymentStatus = $Result.DefaultSelection<Prisma.$PaymentStatusPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductIdentifier
 * 
 */
export type ProductIdentifier = $Result.DefaultSelection<Prisma.$ProductIdentifierPayload>
/**
 * Model ProductVariant
 * 
 */
export type ProductVariant = $Result.DefaultSelection<Prisma.$ProductVariantPayload>
/**
 * Model ShippingDetail
 * 
 */
export type ShippingDetail = $Result.DefaultSelection<Prisma.$ShippingDetailPayload>
/**
 * Model TaxRate
 * 
 */
export type TaxRate = $Result.DefaultSelection<Prisma.$TaxRatePayload>
/**
 * Model Tenant
 * 
 */
export type Tenant = $Result.DefaultSelection<Prisma.$TenantPayload>
/**
 * Model TenantMembership
 * 
 */
export type TenantMembership = $Result.DefaultSelection<Prisma.$TenantMembershipPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model ZipCache
 * 
 */
export type ZipCache = $Result.DefaultSelection<Prisma.$ZipCachePayload>
/**
 * Model ZipCity
 * 
 */
export type ZipCity = $Result.DefaultSelection<Prisma.$ZipCityPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const InvoiceStatus: {
  DRAFT: 'DRAFT',
  OPEN: 'OPEN',
  PAID: 'PAID',
  PARTIALLY_PAID: 'PARTIALLY_PAID',
  RETURNED: 'RETURNED',
  REFUNDED: 'REFUNDED',
  PAID_IN_FULL: 'PAID_IN_FULL',
  CANCELLED: 'CANCELLED',
  PENDING: 'PENDING',
  UNPAID: 'UNPAID',
  PARTIALLY_UNPAID: 'PARTIALLY_UNPAID',
  PENDING_PAYMENT: 'PENDING_PAYMENT',
  AWAITING_PAYMENT: 'AWAITING_PAYMENT',
  AWAITING_FULFILLMENT: 'AWAITING_FULFILLMENT',
  AWAITING_SHIPMENT: 'AWAITING_SHIPMENT',
  AWAITING_DELIVERY: 'AWAITING_DELIVERY',
  AWAITING_PICKUP: 'AWAITING_PICKUP',
  AWAITING_CONFIRMATION: 'AWAITING_CONFIRMATION',
  AWAITING_APPROVAL: 'AWAITING_APPROVAL',
  AWAITING_REVIEW: 'AWAITING_REVIEW',
  SENT: 'SENT',
  OVERDUE: 'OVERDUE',
  VOID: 'VOID'
};

export type InvoiceStatus = (typeof InvoiceStatus)[keyof typeof InvoiceStatus]


export const PaymentType: {
  CASH: 'CASH',
  CHECK: 'CHECK',
  CHARGE: 'CHARGE',
  COD: 'COD',
  ON_ACCOUNT: 'ON_ACCOUNT',
  PAID_OUT: 'PAID_OUT',
  RETURNED: 'RETURNED'
};

export type PaymentType = (typeof PaymentType)[keyof typeof PaymentType]


export const Permission: {
  INVITE_USERS: 'INVITE_USERS',
  MANAGE_USERS: 'MANAGE_USERS',
  ASSIGN_ROLES: 'ASSIGN_ROLES',
  ASSIGN_PERMISSIONS: 'ASSIGN_PERMISSIONS',
  VIEW_TENANT_SETTINGS: 'VIEW_TENANT_SETTINGS',
  UPDATE_TENANT_SETTINGS: 'UPDATE_TENANT_SETTINGS',
  CREATE_PRODUCT: 'CREATE_PRODUCT',
  VIEW_PRODUCTS: 'VIEW_PRODUCTS',
  EDIT_PRODUCT: 'EDIT_PRODUCT',
  ARCHIVE_PRODUCT: 'ARCHIVE_PRODUCT',
  DELETE_PRODUCT: 'DELETE_PRODUCT',
  DELETE_PRODUCT_PERMANENTLY: 'DELETE_PRODUCT_PERMANENTLY',
  CREATE_ORDER: 'CREATE_ORDER',
  VIEW_ORDERS: 'VIEW_ORDERS',
  EDIT_ORDER: 'EDIT_ORDER',
  CANCEL_ORDER: 'CANCEL_ORDER',
  DELETE_ORDER: 'DELETE_ORDER',
  DELETE_ORDER_PERMANENTLY: 'DELETE_ORDER_PERMANENTLY',
  CREATE_INVOICE: 'CREATE_INVOICE',
  VIEW_INVOICES: 'VIEW_INVOICES',
  EDIT_INVOICE: 'EDIT_INVOICE',
  DELETE_INVOICE: 'DELETE_INVOICE',
  DELETE_INVOICE_PERMANENTLY: 'DELETE_INVOICE_PERMANENTLY',
  RESTORE_INVOICE: 'RESTORE_INVOICE',
  VIEW_PAYMENTS: 'VIEW_PAYMENTS',
  REFUND_PAYMENT: 'REFUND_PAYMENT',
  EXPORT_DATA: 'EXPORT_DATA',
  MANAGE_BILLING: 'MANAGE_BILLING',
  VIEW_AUDIT_LOGS: 'VIEW_AUDIT_LOGS',
  ACCESS_BETA_FEATURES: 'ACCESS_BETA_FEATURES',
  PLATFORM_ADMIN: 'PLATFORM_ADMIN',
  DELETE_PERMANENTLY: 'DELETE_PERMANENTLY',
  PURGE_ARCHIVED_DATA: 'PURGE_ARCHIVED_DATA'
};

export type Permission = (typeof Permission)[keyof typeof Permission]


export const PlanTier: {
  FREE: 'FREE',
  BASIC: 'BASIC',
  PRO: 'PRO',
  ENTERPRISE: 'ENTERPRISE'
};

export type PlanTier = (typeof PlanTier)[keyof typeof PlanTier]


export const ProductIdentifierType: {
  SKU: 'SKU',
  BARCODE: 'BARCODE',
  QR: 'QR',
  UPC: 'UPC',
  CUSTOM: 'CUSTOM'
};

export type ProductIdentifierType = (typeof ProductIdentifierType)[keyof typeof ProductIdentifierType]


export const Role: {
  SUPER_ADMIN: 'SUPER_ADMIN',
  SUPPORT: 'SUPPORT',
  DEVELOPER: 'DEVELOPER'
};

export type Role = (typeof Role)[keyof typeof Role]


export const TenantRole: {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
  MANAGER: 'MANAGER',
  VIEWER: 'VIEWER',
  CUSTOM: 'CUSTOM'
};

export type TenantRole = (typeof TenantRole)[keyof typeof TenantRole]

}

export type InvoiceStatus = $Enums.InvoiceStatus

export const InvoiceStatus: typeof $Enums.InvoiceStatus

export type PaymentType = $Enums.PaymentType

export const PaymentType: typeof $Enums.PaymentType

export type Permission = $Enums.Permission

export const Permission: typeof $Enums.Permission

export type PlanTier = $Enums.PlanTier

export const PlanTier: typeof $Enums.PlanTier

export type ProductIdentifierType = $Enums.ProductIdentifierType

export const ProductIdentifierType: typeof $Enums.ProductIdentifierType

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type TenantRole = $Enums.TenantRole

export const TenantRole: typeof $Enums.TenantRole

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AuditLogs
 * const auditLogs = await prisma.auditLog.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AuditLogs
   * const auditLogs = await prisma.auditLog.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bankDetail`: Exposes CRUD operations for the **BankDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BankDetails
    * const bankDetails = await prisma.bankDetail.findMany()
    * ```
    */
  get bankDetail(): Prisma.BankDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.business`: Exposes CRUD operations for the **Business** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Businesses
    * const businesses = await prisma.business.findMany()
    * ```
    */
  get business(): Prisma.BusinessDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discount`: Exposes CRUD operations for the **Discount** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discounts
    * const discounts = await prisma.discount.findMany()
    * ```
    */
  get discount(): Prisma.DiscountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoiceDetail`: Exposes CRUD operations for the **InvoiceDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceDetails
    * const invoiceDetails = await prisma.invoiceDetail.findMany()
    * ```
    */
  get invoiceDetail(): Prisma.InvoiceDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoiceSettings`: Exposes CRUD operations for the **InvoiceSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceSettings
    * const invoiceSettings = await prisma.invoiceSettings.findMany()
    * ```
    */
  get invoiceSettings(): Prisma.InvoiceSettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoiceVersion`: Exposes CRUD operations for the **InvoiceVersion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceVersions
    * const invoiceVersions = await prisma.invoiceVersion.findMany()
    * ```
    */
  get invoiceVersion(): Prisma.InvoiceVersionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentLog`: Exposes CRUD operations for the **PaymentLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentLogs
    * const paymentLogs = await prisma.paymentLog.findMany()
    * ```
    */
  get paymentLog(): Prisma.PaymentLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentMethod`: Exposes CRUD operations for the **PaymentMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentMethods
    * const paymentMethods = await prisma.paymentMethod.findMany()
    * ```
    */
  get paymentMethod(): Prisma.PaymentMethodDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentStatus`: Exposes CRUD operations for the **PaymentStatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentStatuses
    * const paymentStatuses = await prisma.paymentStatus.findMany()
    * ```
    */
  get paymentStatus(): Prisma.PaymentStatusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productIdentifier`: Exposes CRUD operations for the **ProductIdentifier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductIdentifiers
    * const productIdentifiers = await prisma.productIdentifier.findMany()
    * ```
    */
  get productIdentifier(): Prisma.ProductIdentifierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productVariant`: Exposes CRUD operations for the **ProductVariant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductVariants
    * const productVariants = await prisma.productVariant.findMany()
    * ```
    */
  get productVariant(): Prisma.ProductVariantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shippingDetail`: Exposes CRUD operations for the **ShippingDetail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingDetails
    * const shippingDetails = await prisma.shippingDetail.findMany()
    * ```
    */
  get shippingDetail(): Prisma.ShippingDetailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.taxRate`: Exposes CRUD operations for the **TaxRate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TaxRates
    * const taxRates = await prisma.taxRate.findMany()
    * ```
    */
  get taxRate(): Prisma.TaxRateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tenant`: Exposes CRUD operations for the **Tenant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tenants
    * const tenants = await prisma.tenant.findMany()
    * ```
    */
  get tenant(): Prisma.TenantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tenantMembership`: Exposes CRUD operations for the **TenantMembership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TenantMemberships
    * const tenantMemberships = await prisma.tenantMembership.findMany()
    * ```
    */
  get tenantMembership(): Prisma.TenantMembershipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.zipCache`: Exposes CRUD operations for the **ZipCache** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ZipCaches
    * const zipCaches = await prisma.zipCache.findMany()
    * ```
    */
  get zipCache(): Prisma.ZipCacheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.zipCity`: Exposes CRUD operations for the **ZipCity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ZipCities
    * const zipCities = await prisma.zipCity.findMany()
    * ```
    */
  get zipCity(): Prisma.ZipCityDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AuditLog: 'AuditLog',
    BankDetail: 'BankDetail',
    Business: 'Business',
    Customer: 'Customer',
    Discount: 'Discount',
    Invoice: 'Invoice',
    InvoiceDetail: 'InvoiceDetail',
    InvoiceSettings: 'InvoiceSettings',
    InvoiceVersion: 'InvoiceVersion',
    Order: 'Order',
    OrderItem: 'OrderItem',
    Payment: 'Payment',
    PaymentLog: 'PaymentLog',
    PaymentMethod: 'PaymentMethod',
    PaymentStatus: 'PaymentStatus',
    Product: 'Product',
    ProductIdentifier: 'ProductIdentifier',
    ProductVariant: 'ProductVariant',
    ShippingDetail: 'ShippingDetail',
    TaxRate: 'TaxRate',
    Tenant: 'Tenant',
    TenantMembership: 'TenantMembership',
    User: 'User',
    ZipCache: 'ZipCache',
    ZipCity: 'ZipCity'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "auditLog" | "bankDetail" | "business" | "customer" | "discount" | "invoice" | "invoiceDetail" | "invoiceSettings" | "invoiceVersion" | "order" | "orderItem" | "payment" | "paymentLog" | "paymentMethod" | "paymentStatus" | "product" | "productIdentifier" | "productVariant" | "shippingDetail" | "taxRate" | "tenant" | "tenantMembership" | "user" | "zipCache" | "zipCity"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AuditLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      BankDetail: {
        payload: Prisma.$BankDetailPayload<ExtArgs>
        fields: Prisma.BankDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BankDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BankDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          findFirst: {
            args: Prisma.BankDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BankDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          findMany: {
            args: Prisma.BankDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>[]
          }
          create: {
            args: Prisma.BankDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          createMany: {
            args: Prisma.BankDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BankDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>[]
          }
          delete: {
            args: Prisma.BankDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          update: {
            args: Prisma.BankDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          deleteMany: {
            args: Prisma.BankDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BankDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BankDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>[]
          }
          upsert: {
            args: Prisma.BankDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BankDetailPayload>
          }
          aggregate: {
            args: Prisma.BankDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBankDetail>
          }
          groupBy: {
            args: Prisma.BankDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<BankDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.BankDetailCountArgs<ExtArgs>
            result: $Utils.Optional<BankDetailCountAggregateOutputType> | number
          }
        }
      }
      Business: {
        payload: Prisma.$BusinessPayload<ExtArgs>
        fields: Prisma.BusinessFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          findFirst: {
            args: Prisma.BusinessFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          findMany: {
            args: Prisma.BusinessFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>[]
          }
          create: {
            args: Prisma.BusinessCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          createMany: {
            args: Prisma.BusinessCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>[]
          }
          delete: {
            args: Prisma.BusinessDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          update: {
            args: Prisma.BusinessUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          deleteMany: {
            args: Prisma.BusinessDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>[]
          }
          upsert: {
            args: Prisma.BusinessUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessPayload>
          }
          aggregate: {
            args: Prisma.BusinessAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusiness>
          }
          groupBy: {
            args: Prisma.BusinessGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      Discount: {
        payload: Prisma.$DiscountPayload<ExtArgs>
        fields: Prisma.DiscountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          findFirst: {
            args: Prisma.DiscountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          findMany: {
            args: Prisma.DiscountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>[]
          }
          create: {
            args: Prisma.DiscountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          createMany: {
            args: Prisma.DiscountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>[]
          }
          delete: {
            args: Prisma.DiscountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          update: {
            args: Prisma.DiscountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          deleteMany: {
            args: Prisma.DiscountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>[]
          }
          upsert: {
            args: Prisma.DiscountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscountPayload>
          }
          aggregate: {
            args: Prisma.DiscountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscount>
          }
          groupBy: {
            args: Prisma.DiscountGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscountGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscountCountArgs<ExtArgs>
            result: $Utils.Optional<DiscountCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvoiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      InvoiceDetail: {
        payload: Prisma.$InvoiceDetailPayload<ExtArgs>
        fields: Prisma.InvoiceDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          findFirst: {
            args: Prisma.InvoiceDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          findMany: {
            args: Prisma.InvoiceDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>[]
          }
          create: {
            args: Prisma.InvoiceDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          createMany: {
            args: Prisma.InvoiceDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>[]
          }
          delete: {
            args: Prisma.InvoiceDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          update: {
            args: Prisma.InvoiceDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvoiceDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>[]
          }
          upsert: {
            args: Prisma.InvoiceDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceDetailPayload>
          }
          aggregate: {
            args: Prisma.InvoiceDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceDetail>
          }
          groupBy: {
            args: Prisma.InvoiceDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceDetailCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceDetailCountAggregateOutputType> | number
          }
        }
      }
      InvoiceSettings: {
        payload: Prisma.$InvoiceSettingsPayload<ExtArgs>
        fields: Prisma.InvoiceSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          findFirst: {
            args: Prisma.InvoiceSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          findMany: {
            args: Prisma.InvoiceSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>[]
          }
          create: {
            args: Prisma.InvoiceSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          createMany: {
            args: Prisma.InvoiceSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>[]
          }
          delete: {
            args: Prisma.InvoiceSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          update: {
            args: Prisma.InvoiceSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvoiceSettingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>[]
          }
          upsert: {
            args: Prisma.InvoiceSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceSettingsPayload>
          }
          aggregate: {
            args: Prisma.InvoiceSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceSettings>
          }
          groupBy: {
            args: Prisma.InvoiceSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceSettingsCountAggregateOutputType> | number
          }
        }
      }
      InvoiceVersion: {
        payload: Prisma.$InvoiceVersionPayload<ExtArgs>
        fields: Prisma.InvoiceVersionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceVersionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceVersionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          findFirst: {
            args: Prisma.InvoiceVersionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceVersionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          findMany: {
            args: Prisma.InvoiceVersionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>[]
          }
          create: {
            args: Prisma.InvoiceVersionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          createMany: {
            args: Prisma.InvoiceVersionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceVersionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>[]
          }
          delete: {
            args: Prisma.InvoiceVersionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          update: {
            args: Prisma.InvoiceVersionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceVersionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceVersionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvoiceVersionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>[]
          }
          upsert: {
            args: Prisma.InvoiceVersionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceVersionPayload>
          }
          aggregate: {
            args: Prisma.InvoiceVersionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceVersion>
          }
          groupBy: {
            args: Prisma.InvoiceVersionGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceVersionGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceVersionCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceVersionCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      PaymentLog: {
        payload: Prisma.$PaymentLogPayload<ExtArgs>
        fields: Prisma.PaymentLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          findFirst: {
            args: Prisma.PaymentLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          findMany: {
            args: Prisma.PaymentLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>[]
          }
          create: {
            args: Prisma.PaymentLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          createMany: {
            args: Prisma.PaymentLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>[]
          }
          delete: {
            args: Prisma.PaymentLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          update: {
            args: Prisma.PaymentLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          deleteMany: {
            args: Prisma.PaymentLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>[]
          }
          upsert: {
            args: Prisma.PaymentLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLogPayload>
          }
          aggregate: {
            args: Prisma.PaymentLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentLog>
          }
          groupBy: {
            args: Prisma.PaymentLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentLogCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentLogCountAggregateOutputType> | number
          }
        }
      }
      PaymentMethod: {
        payload: Prisma.$PaymentMethodPayload<ExtArgs>
        fields: Prisma.PaymentMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findFirst: {
            args: Prisma.PaymentMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          findMany: {
            args: Prisma.PaymentMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          create: {
            args: Prisma.PaymentMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          createMany: {
            args: Prisma.PaymentMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          delete: {
            args: Prisma.PaymentMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          update: {
            args: Prisma.PaymentMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          deleteMany: {
            args: Prisma.PaymentMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentMethodUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>[]
          }
          upsert: {
            args: Prisma.PaymentMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentMethodPayload>
          }
          aggregate: {
            args: Prisma.PaymentMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentMethod>
          }
          groupBy: {
            args: Prisma.PaymentMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentMethodCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentMethodCountAggregateOutputType> | number
          }
        }
      }
      PaymentStatus: {
        payload: Prisma.$PaymentStatusPayload<ExtArgs>
        fields: Prisma.PaymentStatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentStatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentStatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          findFirst: {
            args: Prisma.PaymentStatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentStatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          findMany: {
            args: Prisma.PaymentStatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>[]
          }
          create: {
            args: Prisma.PaymentStatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          createMany: {
            args: Prisma.PaymentStatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentStatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>[]
          }
          delete: {
            args: Prisma.PaymentStatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          update: {
            args: Prisma.PaymentStatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          deleteMany: {
            args: Prisma.PaymentStatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentStatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentStatusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>[]
          }
          upsert: {
            args: Prisma.PaymentStatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentStatusPayload>
          }
          aggregate: {
            args: Prisma.PaymentStatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentStatus>
          }
          groupBy: {
            args: Prisma.PaymentStatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentStatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentStatusCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentStatusCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductIdentifier: {
        payload: Prisma.$ProductIdentifierPayload<ExtArgs>
        fields: Prisma.ProductIdentifierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductIdentifierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductIdentifierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          findFirst: {
            args: Prisma.ProductIdentifierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductIdentifierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          findMany: {
            args: Prisma.ProductIdentifierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>[]
          }
          create: {
            args: Prisma.ProductIdentifierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          createMany: {
            args: Prisma.ProductIdentifierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductIdentifierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>[]
          }
          delete: {
            args: Prisma.ProductIdentifierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          update: {
            args: Prisma.ProductIdentifierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          deleteMany: {
            args: Prisma.ProductIdentifierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductIdentifierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductIdentifierUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>[]
          }
          upsert: {
            args: Prisma.ProductIdentifierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductIdentifierPayload>
          }
          aggregate: {
            args: Prisma.ProductIdentifierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductIdentifier>
          }
          groupBy: {
            args: Prisma.ProductIdentifierGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductIdentifierGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductIdentifierCountArgs<ExtArgs>
            result: $Utils.Optional<ProductIdentifierCountAggregateOutputType> | number
          }
        }
      }
      ProductVariant: {
        payload: Prisma.$ProductVariantPayload<ExtArgs>
        fields: Prisma.ProductVariantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductVariantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductVariantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findFirst: {
            args: Prisma.ProductVariantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductVariantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findMany: {
            args: Prisma.ProductVariantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          create: {
            args: Prisma.ProductVariantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          createMany: {
            args: Prisma.ProductVariantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductVariantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          delete: {
            args: Prisma.ProductVariantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          update: {
            args: Prisma.ProductVariantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          deleteMany: {
            args: Prisma.ProductVariantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductVariantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductVariantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          upsert: {
            args: Prisma.ProductVariantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          aggregate: {
            args: Prisma.ProductVariantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductVariant>
          }
          groupBy: {
            args: Prisma.ProductVariantGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductVariantCountArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantCountAggregateOutputType> | number
          }
        }
      }
      ShippingDetail: {
        payload: Prisma.$ShippingDetailPayload<ExtArgs>
        fields: Prisma.ShippingDetailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShippingDetailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShippingDetailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          findFirst: {
            args: Prisma.ShippingDetailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShippingDetailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          findMany: {
            args: Prisma.ShippingDetailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>[]
          }
          create: {
            args: Prisma.ShippingDetailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          createMany: {
            args: Prisma.ShippingDetailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShippingDetailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>[]
          }
          delete: {
            args: Prisma.ShippingDetailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          update: {
            args: Prisma.ShippingDetailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          deleteMany: {
            args: Prisma.ShippingDetailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShippingDetailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShippingDetailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>[]
          }
          upsert: {
            args: Prisma.ShippingDetailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingDetailPayload>
          }
          aggregate: {
            args: Prisma.ShippingDetailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShippingDetail>
          }
          groupBy: {
            args: Prisma.ShippingDetailGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShippingDetailGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShippingDetailCountArgs<ExtArgs>
            result: $Utils.Optional<ShippingDetailCountAggregateOutputType> | number
          }
        }
      }
      TaxRate: {
        payload: Prisma.$TaxRatePayload<ExtArgs>
        fields: Prisma.TaxRateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TaxRateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TaxRateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          findFirst: {
            args: Prisma.TaxRateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TaxRateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          findMany: {
            args: Prisma.TaxRateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>[]
          }
          create: {
            args: Prisma.TaxRateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          createMany: {
            args: Prisma.TaxRateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TaxRateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>[]
          }
          delete: {
            args: Prisma.TaxRateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          update: {
            args: Prisma.TaxRateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          deleteMany: {
            args: Prisma.TaxRateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TaxRateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TaxRateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>[]
          }
          upsert: {
            args: Prisma.TaxRateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaxRatePayload>
          }
          aggregate: {
            args: Prisma.TaxRateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTaxRate>
          }
          groupBy: {
            args: Prisma.TaxRateGroupByArgs<ExtArgs>
            result: $Utils.Optional<TaxRateGroupByOutputType>[]
          }
          count: {
            args: Prisma.TaxRateCountArgs<ExtArgs>
            result: $Utils.Optional<TaxRateCountAggregateOutputType> | number
          }
        }
      }
      Tenant: {
        payload: Prisma.$TenantPayload<ExtArgs>
        fields: Prisma.TenantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TenantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TenantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          findFirst: {
            args: Prisma.TenantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TenantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          findMany: {
            args: Prisma.TenantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          create: {
            args: Prisma.TenantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          createMany: {
            args: Prisma.TenantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TenantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          delete: {
            args: Prisma.TenantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          update: {
            args: Prisma.TenantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          deleteMany: {
            args: Prisma.TenantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TenantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TenantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>[]
          }
          upsert: {
            args: Prisma.TenantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantPayload>
          }
          aggregate: {
            args: Prisma.TenantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTenant>
          }
          groupBy: {
            args: Prisma.TenantGroupByArgs<ExtArgs>
            result: $Utils.Optional<TenantGroupByOutputType>[]
          }
          count: {
            args: Prisma.TenantCountArgs<ExtArgs>
            result: $Utils.Optional<TenantCountAggregateOutputType> | number
          }
        }
      }
      TenantMembership: {
        payload: Prisma.$TenantMembershipPayload<ExtArgs>
        fields: Prisma.TenantMembershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TenantMembershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TenantMembershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          findFirst: {
            args: Prisma.TenantMembershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TenantMembershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          findMany: {
            args: Prisma.TenantMembershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>[]
          }
          create: {
            args: Prisma.TenantMembershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          createMany: {
            args: Prisma.TenantMembershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TenantMembershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>[]
          }
          delete: {
            args: Prisma.TenantMembershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          update: {
            args: Prisma.TenantMembershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          deleteMany: {
            args: Prisma.TenantMembershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TenantMembershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TenantMembershipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>[]
          }
          upsert: {
            args: Prisma.TenantMembershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TenantMembershipPayload>
          }
          aggregate: {
            args: Prisma.TenantMembershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTenantMembership>
          }
          groupBy: {
            args: Prisma.TenantMembershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<TenantMembershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.TenantMembershipCountArgs<ExtArgs>
            result: $Utils.Optional<TenantMembershipCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      ZipCache: {
        payload: Prisma.$ZipCachePayload<ExtArgs>
        fields: Prisma.ZipCacheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ZipCacheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ZipCacheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          findFirst: {
            args: Prisma.ZipCacheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ZipCacheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          findMany: {
            args: Prisma.ZipCacheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>[]
          }
          create: {
            args: Prisma.ZipCacheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          createMany: {
            args: Prisma.ZipCacheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ZipCacheCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>[]
          }
          delete: {
            args: Prisma.ZipCacheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          update: {
            args: Prisma.ZipCacheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          deleteMany: {
            args: Prisma.ZipCacheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ZipCacheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ZipCacheUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>[]
          }
          upsert: {
            args: Prisma.ZipCacheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCachePayload>
          }
          aggregate: {
            args: Prisma.ZipCacheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateZipCache>
          }
          groupBy: {
            args: Prisma.ZipCacheGroupByArgs<ExtArgs>
            result: $Utils.Optional<ZipCacheGroupByOutputType>[]
          }
          count: {
            args: Prisma.ZipCacheCountArgs<ExtArgs>
            result: $Utils.Optional<ZipCacheCountAggregateOutputType> | number
          }
        }
      }
      ZipCity: {
        payload: Prisma.$ZipCityPayload<ExtArgs>
        fields: Prisma.ZipCityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ZipCityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ZipCityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          findFirst: {
            args: Prisma.ZipCityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ZipCityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          findMany: {
            args: Prisma.ZipCityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>[]
          }
          create: {
            args: Prisma.ZipCityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          createMany: {
            args: Prisma.ZipCityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ZipCityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>[]
          }
          delete: {
            args: Prisma.ZipCityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          update: {
            args: Prisma.ZipCityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          deleteMany: {
            args: Prisma.ZipCityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ZipCityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ZipCityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>[]
          }
          upsert: {
            args: Prisma.ZipCityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ZipCityPayload>
          }
          aggregate: {
            args: Prisma.ZipCityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateZipCity>
          }
          groupBy: {
            args: Prisma.ZipCityGroupByArgs<ExtArgs>
            result: $Utils.Optional<ZipCityGroupByOutputType>[]
          }
          count: {
            args: Prisma.ZipCityCountArgs<ExtArgs>
            result: $Utils.Optional<ZipCityCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    auditLog?: AuditLogOmit
    bankDetail?: BankDetailOmit
    business?: BusinessOmit
    customer?: CustomerOmit
    discount?: DiscountOmit
    invoice?: InvoiceOmit
    invoiceDetail?: InvoiceDetailOmit
    invoiceSettings?: InvoiceSettingsOmit
    invoiceVersion?: InvoiceVersionOmit
    order?: OrderOmit
    orderItem?: OrderItemOmit
    payment?: PaymentOmit
    paymentLog?: PaymentLogOmit
    paymentMethod?: PaymentMethodOmit
    paymentStatus?: PaymentStatusOmit
    product?: ProductOmit
    productIdentifier?: ProductIdentifierOmit
    productVariant?: ProductVariantOmit
    shippingDetail?: ShippingDetailOmit
    taxRate?: TaxRateOmit
    tenant?: TenantOmit
    tenantMembership?: TenantMembershipOmit
    user?: UserOmit
    zipCache?: ZipCacheOmit
    zipCity?: ZipCityOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    Invoice: number
    Order: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | CustomerCountOutputTypeCountInvoiceArgs
    Order?: boolean | CustomerCountOutputTypeCountOrderArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountInvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type DiscountCountOutputType
   */

  export type DiscountCountOutputType = {
    InvoiceDetail: number
  }

  export type DiscountCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InvoiceDetail?: boolean | DiscountCountOutputTypeCountInvoiceDetailArgs
  }

  // Custom InputTypes
  /**
   * DiscountCountOutputType without action
   */
  export type DiscountCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscountCountOutputType
     */
    select?: DiscountCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscountCountOutputType without action
   */
  export type DiscountCountOutputTypeCountInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceDetailWhereInput
  }


  /**
   * Count Type InvoiceCountOutputType
   */

  export type InvoiceCountOutputType = {
    other_Invoice: number
    InvoiceDetail: number
    InvoiceVersion: number
    Payment: number
    ShippingDetail: number
  }

  export type InvoiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    other_Invoice?: boolean | InvoiceCountOutputTypeCountOther_InvoiceArgs
    InvoiceDetail?: boolean | InvoiceCountOutputTypeCountInvoiceDetailArgs
    InvoiceVersion?: boolean | InvoiceCountOutputTypeCountInvoiceVersionArgs
    Payment?: boolean | InvoiceCountOutputTypeCountPaymentArgs
    ShippingDetail?: boolean | InvoiceCountOutputTypeCountShippingDetailArgs
  }

  // Custom InputTypes
  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceCountOutputType
     */
    select?: InvoiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountOther_InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceDetailWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountInvoiceVersionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceVersionWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountPaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountShippingDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingDetailWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    Invoice: number
    OrderItem: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | OrderCountOutputTypeCountInvoiceArgs
    OrderItem?: boolean | OrderCountOutputTypeCountOrderItemArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountInvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    InvoiceDetail: number
    OrderItem: number
    ProductIdentifier: number
    ProductVariant: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InvoiceDetail?: boolean | ProductCountOutputTypeCountInvoiceDetailArgs
    OrderItem?: boolean | ProductCountOutputTypeCountOrderItemArgs
    ProductIdentifier?: boolean | ProductCountOutputTypeCountProductIdentifierArgs
    ProductVariant?: boolean | ProductCountOutputTypeCountProductVariantArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceDetailWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductIdentifierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductIdentifierWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductVariantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
  }


  /**
   * Count Type TaxRateCountOutputType
   */

  export type TaxRateCountOutputType = {
    InvoiceDetail: number
    Tenant: number
  }

  export type TaxRateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InvoiceDetail?: boolean | TaxRateCountOutputTypeCountInvoiceDetailArgs
    Tenant?: boolean | TaxRateCountOutputTypeCountTenantArgs
  }

  // Custom InputTypes
  /**
   * TaxRateCountOutputType without action
   */
  export type TaxRateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRateCountOutputType
     */
    select?: TaxRateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TaxRateCountOutputType without action
   */
  export type TaxRateCountOutputTypeCountInvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceDetailWhereInput
  }

  /**
   * TaxRateCountOutputType without action
   */
  export type TaxRateCountOutputTypeCountTenantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantWhereInput
  }


  /**
   * Count Type TenantCountOutputType
   */

  export type TenantCountOutputType = {
    Business: number
    Customer: number
    Invoice: number
    Order: number
    Product: number
    TenantMembership: number
  }

  export type TenantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Business?: boolean | TenantCountOutputTypeCountBusinessArgs
    Customer?: boolean | TenantCountOutputTypeCountCustomerArgs
    Invoice?: boolean | TenantCountOutputTypeCountInvoiceArgs
    Order?: boolean | TenantCountOutputTypeCountOrderArgs
    Product?: boolean | TenantCountOutputTypeCountProductArgs
    TenantMembership?: boolean | TenantCountOutputTypeCountTenantMembershipArgs
  }

  // Custom InputTypes
  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantCountOutputType
     */
    select?: TenantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountBusinessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountCustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountInvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeCountTenantMembershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantMembershipWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    AuditLog: number
    Business_Business_createdByIdToUser: number
    Business_Business_updatedByIdToUser: number
    Customer_Customer_createdByIdToUser: number
    Customer_Customer_updatedByIdToUser: number
    Discount_Discount_createdByIdToUser: number
    Discount_Discount_updatedByIdToUser: number
    Invoice_Invoice_createdByIdToUser: number
    Invoice_Invoice_soldByUserIdToUser: number
    Invoice_Invoice_updatedByIdToUser: number
    Payment_Payment_createdByIdToUser: number
    Payment_Payment_updatedByIdToUser: number
    Product_Product_createdByIdToUser: number
    Product_Product_updatedByIdToUser: number
    ShippingDetail_ShippingDetail_createdByIdToUser: number
    ShippingDetail_ShippingDetail_updatedByIdToUser: number
    TaxRate_TaxRate_createdByIdToUser: number
    TaxRate_TaxRate_updatedByIdToUser: number
    TenantMembership: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AuditLog?: boolean | UserCountOutputTypeCountAuditLogArgs
    Business_Business_createdByIdToUser?: boolean | UserCountOutputTypeCountBusiness_Business_createdByIdToUserArgs
    Business_Business_updatedByIdToUser?: boolean | UserCountOutputTypeCountBusiness_Business_updatedByIdToUserArgs
    Customer_Customer_createdByIdToUser?: boolean | UserCountOutputTypeCountCustomer_Customer_createdByIdToUserArgs
    Customer_Customer_updatedByIdToUser?: boolean | UserCountOutputTypeCountCustomer_Customer_updatedByIdToUserArgs
    Discount_Discount_createdByIdToUser?: boolean | UserCountOutputTypeCountDiscount_Discount_createdByIdToUserArgs
    Discount_Discount_updatedByIdToUser?: boolean | UserCountOutputTypeCountDiscount_Discount_updatedByIdToUserArgs
    Invoice_Invoice_createdByIdToUser?: boolean | UserCountOutputTypeCountInvoice_Invoice_createdByIdToUserArgs
    Invoice_Invoice_soldByUserIdToUser?: boolean | UserCountOutputTypeCountInvoice_Invoice_soldByUserIdToUserArgs
    Invoice_Invoice_updatedByIdToUser?: boolean | UserCountOutputTypeCountInvoice_Invoice_updatedByIdToUserArgs
    Payment_Payment_createdByIdToUser?: boolean | UserCountOutputTypeCountPayment_Payment_createdByIdToUserArgs
    Payment_Payment_updatedByIdToUser?: boolean | UserCountOutputTypeCountPayment_Payment_updatedByIdToUserArgs
    Product_Product_createdByIdToUser?: boolean | UserCountOutputTypeCountProduct_Product_createdByIdToUserArgs
    Product_Product_updatedByIdToUser?: boolean | UserCountOutputTypeCountProduct_Product_updatedByIdToUserArgs
    ShippingDetail_ShippingDetail_createdByIdToUser?: boolean | UserCountOutputTypeCountShippingDetail_ShippingDetail_createdByIdToUserArgs
    ShippingDetail_ShippingDetail_updatedByIdToUser?: boolean | UserCountOutputTypeCountShippingDetail_ShippingDetail_updatedByIdToUserArgs
    TaxRate_TaxRate_createdByIdToUser?: boolean | UserCountOutputTypeCountTaxRate_TaxRate_createdByIdToUserArgs
    TaxRate_TaxRate_updatedByIdToUser?: boolean | UserCountOutputTypeCountTaxRate_TaxRate_updatedByIdToUserArgs
    TenantMembership?: boolean | UserCountOutputTypeCountTenantMembershipArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBusiness_Business_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBusiness_Business_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomer_Customer_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomer_Customer_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDiscount_Discount_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDiscount_Discount_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvoice_Invoice_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvoice_Invoice_soldByUserIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvoice_Invoice_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPayment_Payment_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPayment_Payment_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProduct_Product_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProduct_Product_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingDetailWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingDetailWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaxRate_TaxRate_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaxRateWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaxRateWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTenantMembershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantMembershipWhereInput
  }


  /**
   * Count Type ZipCacheCountOutputType
   */

  export type ZipCacheCountOutputType = {
    ZipCity: number
  }

  export type ZipCacheCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ZipCity?: boolean | ZipCacheCountOutputTypeCountZipCityArgs
  }

  // Custom InputTypes
  /**
   * ZipCacheCountOutputType without action
   */
  export type ZipCacheCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCacheCountOutputType
     */
    select?: ZipCacheCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ZipCacheCountOutputType without action
   */
  export type ZipCacheCountOutputTypeCountZipCityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ZipCityWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    action: string | null
    userId: string | null
    entityId: string | null
    entityType: string | null
    performedAt: Date | null
    deleted: boolean | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    action: string | null
    userId: string | null
    entityId: string | null
    entityType: string | null
    performedAt: Date | null
    deleted: boolean | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    action: number
    userId: number
    after: number
    before: number
    entityId: number
    entityType: number
    performedAt: number
    payload: number
    deleted: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    action?: true
    userId?: true
    entityId?: true
    entityType?: true
    performedAt?: true
    deleted?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    action?: true
    userId?: true
    entityId?: true
    entityType?: true
    performedAt?: true
    deleted?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    action?: true
    userId?: true
    after?: true
    before?: true
    entityId?: true
    entityType?: true
    performedAt?: true
    payload?: true
    deleted?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    action: string
    userId: string
    after: JsonValue | null
    before: JsonValue | null
    entityId: string
    entityType: string
    performedAt: Date
    payload: JsonValue | null
    deleted: boolean
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    userId?: boolean
    after?: boolean
    before?: boolean
    entityId?: boolean
    entityType?: boolean
    performedAt?: boolean
    payload?: boolean
    deleted?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    userId?: boolean
    after?: boolean
    before?: boolean
    entityId?: boolean
    entityType?: boolean
    performedAt?: boolean
    payload?: boolean
    deleted?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    userId?: boolean
    after?: boolean
    before?: boolean
    entityId?: boolean
    entityType?: boolean
    performedAt?: boolean
    payload?: boolean
    deleted?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectScalar = {
    id?: boolean
    action?: boolean
    userId?: boolean
    after?: boolean
    before?: boolean
    entityId?: boolean
    entityType?: boolean
    performedAt?: boolean
    payload?: boolean
    deleted?: boolean
  }

  export type AuditLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "action" | "userId" | "after" | "before" | "entityId" | "entityType" | "performedAt" | "payload" | "deleted", ExtArgs["result"]["auditLog"]>
  export type AuditLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuditLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuditLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      action: string
      userId: string
      after: Prisma.JsonValue | null
      before: Prisma.JsonValue | null
      entityId: string
      entityType: string
      performedAt: Date
      payload: Prisma.JsonValue | null
      deleted: boolean
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditLogs and returns the data saved in the database.
     * @param {AuditLogCreateManyAndReturnArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs and returns the data updated in the database.
     * @param {AuditLogUpdateManyAndReturnArgs} args - Arguments to update many AuditLogs.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AuditLogUpdateManyAndReturnArgs>(args: SelectSubset<T, AuditLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly userId: FieldRef<"AuditLog", 'String'>
    readonly after: FieldRef<"AuditLog", 'Json'>
    readonly before: FieldRef<"AuditLog", 'Json'>
    readonly entityId: FieldRef<"AuditLog", 'String'>
    readonly entityType: FieldRef<"AuditLog", 'String'>
    readonly performedAt: FieldRef<"AuditLog", 'DateTime'>
    readonly payload: FieldRef<"AuditLog", 'Json'>
    readonly deleted: FieldRef<"AuditLog", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog createManyAndReturn
   */
  export type AuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
    /**
     * Limit how many AuditLogs to update.
     */
    limit?: number
  }

  /**
   * AuditLog updateManyAndReturn
   */
  export type AuditLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
    /**
     * Limit how many AuditLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
    /**
     * Limit how many AuditLogs to delete.
     */
    limit?: number
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
  }


  /**
   * Model BankDetail
   */

  export type AggregateBankDetail = {
    _count: BankDetailCountAggregateOutputType | null
    _avg: BankDetailAvgAggregateOutputType | null
    _sum: BankDetailSumAggregateOutputType | null
    _min: BankDetailMinAggregateOutputType | null
    _max: BankDetailMaxAggregateOutputType | null
  }

  export type BankDetailAvgAggregateOutputType = {
    id: number | null
  }

  export type BankDetailSumAggregateOutputType = {
    id: number | null
  }

  export type BankDetailMinAggregateOutputType = {
    id: number | null
    bankName: string | null
    accountNumber: string | null
    iban: string | null
    bic: string | null
    deleted: boolean | null
  }

  export type BankDetailMaxAggregateOutputType = {
    id: number | null
    bankName: string | null
    accountNumber: string | null
    iban: string | null
    bic: string | null
    deleted: boolean | null
  }

  export type BankDetailCountAggregateOutputType = {
    id: number
    bankName: number
    accountNumber: number
    iban: number
    bic: number
    deleted: number
    _all: number
  }


  export type BankDetailAvgAggregateInputType = {
    id?: true
  }

  export type BankDetailSumAggregateInputType = {
    id?: true
  }

  export type BankDetailMinAggregateInputType = {
    id?: true
    bankName?: true
    accountNumber?: true
    iban?: true
    bic?: true
    deleted?: true
  }

  export type BankDetailMaxAggregateInputType = {
    id?: true
    bankName?: true
    accountNumber?: true
    iban?: true
    bic?: true
    deleted?: true
  }

  export type BankDetailCountAggregateInputType = {
    id?: true
    bankName?: true
    accountNumber?: true
    iban?: true
    bic?: true
    deleted?: true
    _all?: true
  }

  export type BankDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankDetail to aggregate.
     */
    where?: BankDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankDetails to fetch.
     */
    orderBy?: BankDetailOrderByWithRelationInput | BankDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BankDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BankDetails
    **/
    _count?: true | BankDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BankDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BankDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BankDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BankDetailMaxAggregateInputType
  }

  export type GetBankDetailAggregateType<T extends BankDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateBankDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBankDetail[P]>
      : GetScalarType<T[P], AggregateBankDetail[P]>
  }




  export type BankDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BankDetailWhereInput
    orderBy?: BankDetailOrderByWithAggregationInput | BankDetailOrderByWithAggregationInput[]
    by: BankDetailScalarFieldEnum[] | BankDetailScalarFieldEnum
    having?: BankDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BankDetailCountAggregateInputType | true
    _avg?: BankDetailAvgAggregateInputType
    _sum?: BankDetailSumAggregateInputType
    _min?: BankDetailMinAggregateInputType
    _max?: BankDetailMaxAggregateInputType
  }

  export type BankDetailGroupByOutputType = {
    id: number
    bankName: string
    accountNumber: string
    iban: string
    bic: string
    deleted: boolean
    _count: BankDetailCountAggregateOutputType | null
    _avg: BankDetailAvgAggregateOutputType | null
    _sum: BankDetailSumAggregateOutputType | null
    _min: BankDetailMinAggregateOutputType | null
    _max: BankDetailMaxAggregateOutputType | null
  }

  type GetBankDetailGroupByPayload<T extends BankDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BankDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BankDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BankDetailGroupByOutputType[P]>
            : GetScalarType<T[P], BankDetailGroupByOutputType[P]>
        }
      >
    >


  export type BankDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    accountNumber?: boolean
    iban?: boolean
    bic?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["bankDetail"]>

  export type BankDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    accountNumber?: boolean
    iban?: boolean
    bic?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["bankDetail"]>

  export type BankDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bankName?: boolean
    accountNumber?: boolean
    iban?: boolean
    bic?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["bankDetail"]>

  export type BankDetailSelectScalar = {
    id?: boolean
    bankName?: boolean
    accountNumber?: boolean
    iban?: boolean
    bic?: boolean
    deleted?: boolean
  }

  export type BankDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bankName" | "accountNumber" | "iban" | "bic" | "deleted", ExtArgs["result"]["bankDetail"]>

  export type $BankDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BankDetail"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bankName: string
      accountNumber: string
      iban: string
      bic: string
      deleted: boolean
    }, ExtArgs["result"]["bankDetail"]>
    composites: {}
  }

  type BankDetailGetPayload<S extends boolean | null | undefined | BankDetailDefaultArgs> = $Result.GetResult<Prisma.$BankDetailPayload, S>

  type BankDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BankDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BankDetailCountAggregateInputType | true
    }

  export interface BankDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BankDetail'], meta: { name: 'BankDetail' } }
    /**
     * Find zero or one BankDetail that matches the filter.
     * @param {BankDetailFindUniqueArgs} args - Arguments to find a BankDetail
     * @example
     * // Get one BankDetail
     * const bankDetail = await prisma.bankDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BankDetailFindUniqueArgs>(args: SelectSubset<T, BankDetailFindUniqueArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BankDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BankDetailFindUniqueOrThrowArgs} args - Arguments to find a BankDetail
     * @example
     * // Get one BankDetail
     * const bankDetail = await prisma.bankDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BankDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, BankDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailFindFirstArgs} args - Arguments to find a BankDetail
     * @example
     * // Get one BankDetail
     * const bankDetail = await prisma.bankDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BankDetailFindFirstArgs>(args?: SelectSubset<T, BankDetailFindFirstArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BankDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailFindFirstOrThrowArgs} args - Arguments to find a BankDetail
     * @example
     * // Get one BankDetail
     * const bankDetail = await prisma.bankDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BankDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, BankDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BankDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BankDetails
     * const bankDetails = await prisma.bankDetail.findMany()
     * 
     * // Get first 10 BankDetails
     * const bankDetails = await prisma.bankDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bankDetailWithIdOnly = await prisma.bankDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BankDetailFindManyArgs>(args?: SelectSubset<T, BankDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BankDetail.
     * @param {BankDetailCreateArgs} args - Arguments to create a BankDetail.
     * @example
     * // Create one BankDetail
     * const BankDetail = await prisma.bankDetail.create({
     *   data: {
     *     // ... data to create a BankDetail
     *   }
     * })
     * 
     */
    create<T extends BankDetailCreateArgs>(args: SelectSubset<T, BankDetailCreateArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BankDetails.
     * @param {BankDetailCreateManyArgs} args - Arguments to create many BankDetails.
     * @example
     * // Create many BankDetails
     * const bankDetail = await prisma.bankDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BankDetailCreateManyArgs>(args?: SelectSubset<T, BankDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BankDetails and returns the data saved in the database.
     * @param {BankDetailCreateManyAndReturnArgs} args - Arguments to create many BankDetails.
     * @example
     * // Create many BankDetails
     * const bankDetail = await prisma.bankDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BankDetails and only return the `id`
     * const bankDetailWithIdOnly = await prisma.bankDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BankDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, BankDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BankDetail.
     * @param {BankDetailDeleteArgs} args - Arguments to delete one BankDetail.
     * @example
     * // Delete one BankDetail
     * const BankDetail = await prisma.bankDetail.delete({
     *   where: {
     *     // ... filter to delete one BankDetail
     *   }
     * })
     * 
     */
    delete<T extends BankDetailDeleteArgs>(args: SelectSubset<T, BankDetailDeleteArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BankDetail.
     * @param {BankDetailUpdateArgs} args - Arguments to update one BankDetail.
     * @example
     * // Update one BankDetail
     * const bankDetail = await prisma.bankDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BankDetailUpdateArgs>(args: SelectSubset<T, BankDetailUpdateArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BankDetails.
     * @param {BankDetailDeleteManyArgs} args - Arguments to filter BankDetails to delete.
     * @example
     * // Delete a few BankDetails
     * const { count } = await prisma.bankDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BankDetailDeleteManyArgs>(args?: SelectSubset<T, BankDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BankDetails
     * const bankDetail = await prisma.bankDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BankDetailUpdateManyArgs>(args: SelectSubset<T, BankDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BankDetails and returns the data updated in the database.
     * @param {BankDetailUpdateManyAndReturnArgs} args - Arguments to update many BankDetails.
     * @example
     * // Update many BankDetails
     * const bankDetail = await prisma.bankDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BankDetails and only return the `id`
     * const bankDetailWithIdOnly = await prisma.bankDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BankDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, BankDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BankDetail.
     * @param {BankDetailUpsertArgs} args - Arguments to update or create a BankDetail.
     * @example
     * // Update or create a BankDetail
     * const bankDetail = await prisma.bankDetail.upsert({
     *   create: {
     *     // ... data to create a BankDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BankDetail we want to update
     *   }
     * })
     */
    upsert<T extends BankDetailUpsertArgs>(args: SelectSubset<T, BankDetailUpsertArgs<ExtArgs>>): Prisma__BankDetailClient<$Result.GetResult<Prisma.$BankDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BankDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailCountArgs} args - Arguments to filter BankDetails to count.
     * @example
     * // Count the number of BankDetails
     * const count = await prisma.bankDetail.count({
     *   where: {
     *     // ... the filter for the BankDetails we want to count
     *   }
     * })
    **/
    count<T extends BankDetailCountArgs>(
      args?: Subset<T, BankDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BankDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BankDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BankDetailAggregateArgs>(args: Subset<T, BankDetailAggregateArgs>): Prisma.PrismaPromise<GetBankDetailAggregateType<T>>

    /**
     * Group by BankDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BankDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BankDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BankDetailGroupByArgs['orderBy'] }
        : { orderBy?: BankDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BankDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBankDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BankDetail model
   */
  readonly fields: BankDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BankDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BankDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BankDetail model
   */
  interface BankDetailFieldRefs {
    readonly id: FieldRef<"BankDetail", 'Int'>
    readonly bankName: FieldRef<"BankDetail", 'String'>
    readonly accountNumber: FieldRef<"BankDetail", 'String'>
    readonly iban: FieldRef<"BankDetail", 'String'>
    readonly bic: FieldRef<"BankDetail", 'String'>
    readonly deleted: FieldRef<"BankDetail", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * BankDetail findUnique
   */
  export type BankDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter, which BankDetail to fetch.
     */
    where: BankDetailWhereUniqueInput
  }

  /**
   * BankDetail findUniqueOrThrow
   */
  export type BankDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter, which BankDetail to fetch.
     */
    where: BankDetailWhereUniqueInput
  }

  /**
   * BankDetail findFirst
   */
  export type BankDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter, which BankDetail to fetch.
     */
    where?: BankDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankDetails to fetch.
     */
    orderBy?: BankDetailOrderByWithRelationInput | BankDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankDetails.
     */
    cursor?: BankDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankDetails.
     */
    distinct?: BankDetailScalarFieldEnum | BankDetailScalarFieldEnum[]
  }

  /**
   * BankDetail findFirstOrThrow
   */
  export type BankDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter, which BankDetail to fetch.
     */
    where?: BankDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankDetails to fetch.
     */
    orderBy?: BankDetailOrderByWithRelationInput | BankDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BankDetails.
     */
    cursor?: BankDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BankDetails.
     */
    distinct?: BankDetailScalarFieldEnum | BankDetailScalarFieldEnum[]
  }

  /**
   * BankDetail findMany
   */
  export type BankDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter, which BankDetails to fetch.
     */
    where?: BankDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BankDetails to fetch.
     */
    orderBy?: BankDetailOrderByWithRelationInput | BankDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BankDetails.
     */
    cursor?: BankDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BankDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BankDetails.
     */
    skip?: number
    distinct?: BankDetailScalarFieldEnum | BankDetailScalarFieldEnum[]
  }

  /**
   * BankDetail create
   */
  export type BankDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * The data needed to create a BankDetail.
     */
    data: XOR<BankDetailCreateInput, BankDetailUncheckedCreateInput>
  }

  /**
   * BankDetail createMany
   */
  export type BankDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BankDetails.
     */
    data: BankDetailCreateManyInput | BankDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BankDetail createManyAndReturn
   */
  export type BankDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * The data used to create many BankDetails.
     */
    data: BankDetailCreateManyInput | BankDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BankDetail update
   */
  export type BankDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * The data needed to update a BankDetail.
     */
    data: XOR<BankDetailUpdateInput, BankDetailUncheckedUpdateInput>
    /**
     * Choose, which BankDetail to update.
     */
    where: BankDetailWhereUniqueInput
  }

  /**
   * BankDetail updateMany
   */
  export type BankDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BankDetails.
     */
    data: XOR<BankDetailUpdateManyMutationInput, BankDetailUncheckedUpdateManyInput>
    /**
     * Filter which BankDetails to update
     */
    where?: BankDetailWhereInput
    /**
     * Limit how many BankDetails to update.
     */
    limit?: number
  }

  /**
   * BankDetail updateManyAndReturn
   */
  export type BankDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * The data used to update BankDetails.
     */
    data: XOR<BankDetailUpdateManyMutationInput, BankDetailUncheckedUpdateManyInput>
    /**
     * Filter which BankDetails to update
     */
    where?: BankDetailWhereInput
    /**
     * Limit how many BankDetails to update.
     */
    limit?: number
  }

  /**
   * BankDetail upsert
   */
  export type BankDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * The filter to search for the BankDetail to update in case it exists.
     */
    where: BankDetailWhereUniqueInput
    /**
     * In case the BankDetail found by the `where` argument doesn't exist, create a new BankDetail with this data.
     */
    create: XOR<BankDetailCreateInput, BankDetailUncheckedCreateInput>
    /**
     * In case the BankDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BankDetailUpdateInput, BankDetailUncheckedUpdateInput>
  }

  /**
   * BankDetail delete
   */
  export type BankDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
    /**
     * Filter which BankDetail to delete.
     */
    where: BankDetailWhereUniqueInput
  }

  /**
   * BankDetail deleteMany
   */
  export type BankDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BankDetails to delete
     */
    where?: BankDetailWhereInput
    /**
     * Limit how many BankDetails to delete.
     */
    limit?: number
  }

  /**
   * BankDetail without action
   */
  export type BankDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BankDetail
     */
    select?: BankDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BankDetail
     */
    omit?: BankDetailOmit<ExtArgs> | null
  }


  /**
   * Model Business
   */

  export type AggregateBusiness = {
    _count: BusinessCountAggregateOutputType | null
    _min: BusinessMinAggregateOutputType | null
    _max: BusinessMaxAggregateOutputType | null
  }

  export type BusinessMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: string | null
    createdById: string | null
    updatedById: string | null
    businessType: string | null
    businessCategory: string | null
    businessSubcategory: string | null
    legalBusinessName: string | null
    doingBusinessAs: string | null
    ein: string | null
    businessState: string | null
    onlineStatus: string | null
    onlineLink: string | null
    businessEmail: string | null
    addressLine1: string | null
    addressLine2: string | null
    zip: string | null
    city: string | null
    isManualEntry: boolean | null
    deleted: boolean | null
  }

  export type BusinessMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    tenantId: string | null
    createdById: string | null
    updatedById: string | null
    businessType: string | null
    businessCategory: string | null
    businessSubcategory: string | null
    legalBusinessName: string | null
    doingBusinessAs: string | null
    ein: string | null
    businessState: string | null
    onlineStatus: string | null
    onlineLink: string | null
    businessEmail: string | null
    addressLine1: string | null
    addressLine2: string | null
    zip: string | null
    city: string | null
    isManualEntry: boolean | null
    deleted: boolean | null
  }

  export type BusinessCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    tenantId: number
    createdById: number
    updatedById: number
    businessType: number
    businessCategory: number
    businessSubcategory: number
    legalBusinessName: number
    doingBusinessAs: number
    ein: number
    businessState: number
    onlineStatus: number
    onlineLink: number
    businessEmail: number
    addressLine1: number
    addressLine2: number
    zip: number
    city: number
    isManualEntry: number
    deleted: number
    _all: number
  }


  export type BusinessMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    businessType?: true
    businessCategory?: true
    businessSubcategory?: true
    legalBusinessName?: true
    doingBusinessAs?: true
    ein?: true
    businessState?: true
    onlineStatus?: true
    onlineLink?: true
    businessEmail?: true
    addressLine1?: true
    addressLine2?: true
    zip?: true
    city?: true
    isManualEntry?: true
    deleted?: true
  }

  export type BusinessMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    businessType?: true
    businessCategory?: true
    businessSubcategory?: true
    legalBusinessName?: true
    doingBusinessAs?: true
    ein?: true
    businessState?: true
    onlineStatus?: true
    onlineLink?: true
    businessEmail?: true
    addressLine1?: true
    addressLine2?: true
    zip?: true
    city?: true
    isManualEntry?: true
    deleted?: true
  }

  export type BusinessCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    businessType?: true
    businessCategory?: true
    businessSubcategory?: true
    legalBusinessName?: true
    doingBusinessAs?: true
    ein?: true
    businessState?: true
    onlineStatus?: true
    onlineLink?: true
    businessEmail?: true
    addressLine1?: true
    addressLine2?: true
    zip?: true
    city?: true
    isManualEntry?: true
    deleted?: true
    _all?: true
  }

  export type BusinessAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Business to aggregate.
     */
    where?: BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Businesses to fetch.
     */
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Businesses
    **/
    _count?: true | BusinessCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessMaxAggregateInputType
  }

  export type GetBusinessAggregateType<T extends BusinessAggregateArgs> = {
        [P in keyof T & keyof AggregateBusiness]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusiness[P]>
      : GetScalarType<T[P], AggregateBusiness[P]>
  }




  export type BusinessGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessWhereInput
    orderBy?: BusinessOrderByWithAggregationInput | BusinessOrderByWithAggregationInput[]
    by: BusinessScalarFieldEnum[] | BusinessScalarFieldEnum
    having?: BusinessScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessCountAggregateInputType | true
    _min?: BusinessMinAggregateInputType
    _max?: BusinessMaxAggregateInputType
  }

  export type BusinessGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    tenantId: string
    createdById: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink: string | null
    businessEmail: string | null
    addressLine1: string
    addressLine2: string | null
    zip: string
    city: string
    isManualEntry: boolean
    deleted: boolean
    _count: BusinessCountAggregateOutputType | null
    _min: BusinessMinAggregateOutputType | null
    _max: BusinessMaxAggregateOutputType | null
  }

  type GetBusinessGroupByPayload<T extends BusinessGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessGroupByOutputType[P]>
        }
      >
    >


  export type BusinessSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    businessType?: boolean
    businessCategory?: boolean
    businessSubcategory?: boolean
    legalBusinessName?: boolean
    doingBusinessAs?: boolean
    ein?: boolean
    businessState?: boolean
    onlineStatus?: boolean
    onlineLink?: boolean
    businessEmail?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    zip?: boolean
    city?: boolean
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business"]>

  export type BusinessSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    businessType?: boolean
    businessCategory?: boolean
    businessSubcategory?: boolean
    legalBusinessName?: boolean
    doingBusinessAs?: boolean
    ein?: boolean
    businessState?: boolean
    onlineStatus?: boolean
    onlineLink?: boolean
    businessEmail?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    zip?: boolean
    city?: boolean
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business"]>

  export type BusinessSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    businessType?: boolean
    businessCategory?: boolean
    businessSubcategory?: boolean
    legalBusinessName?: boolean
    doingBusinessAs?: boolean
    ein?: boolean
    businessState?: boolean
    onlineStatus?: boolean
    onlineLink?: boolean
    businessEmail?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    zip?: boolean
    city?: boolean
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["business"]>

  export type BusinessSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    businessType?: boolean
    businessCategory?: boolean
    businessSubcategory?: boolean
    legalBusinessName?: boolean
    doingBusinessAs?: boolean
    ein?: boolean
    businessState?: boolean
    onlineStatus?: boolean
    onlineLink?: boolean
    businessEmail?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    zip?: boolean
    city?: boolean
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "tenantId" | "createdById" | "updatedById" | "businessType" | "businessCategory" | "businessSubcategory" | "legalBusinessName" | "doingBusinessAs" | "ein" | "businessState" | "onlineStatus" | "onlineLink" | "businessEmail" | "addressLine1" | "addressLine2" | "zip" | "city" | "isManualEntry" | "deleted", ExtArgs["result"]["business"]>
  export type BusinessInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BusinessIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BusinessIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Business_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Business_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BusinessPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Business"
    objects: {
      User_Business_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Tenant: Prisma.$TenantPayload<ExtArgs>
      User_Business_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      tenantId: string
      createdById: string
      updatedById: string
      businessType: string
      businessCategory: string
      businessSubcategory: string
      legalBusinessName: string
      doingBusinessAs: string | null
      ein: string
      businessState: string
      onlineStatus: string
      onlineLink: string | null
      businessEmail: string | null
      addressLine1: string
      addressLine2: string | null
      zip: string
      city: string
      isManualEntry: boolean
      deleted: boolean
    }, ExtArgs["result"]["business"]>
    composites: {}
  }

  type BusinessGetPayload<S extends boolean | null | undefined | BusinessDefaultArgs> = $Result.GetResult<Prisma.$BusinessPayload, S>

  type BusinessCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessCountAggregateInputType | true
    }

  export interface BusinessDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Business'], meta: { name: 'Business' } }
    /**
     * Find zero or one Business that matches the filter.
     * @param {BusinessFindUniqueArgs} args - Arguments to find a Business
     * @example
     * // Get one Business
     * const business = await prisma.business.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessFindUniqueArgs>(args: SelectSubset<T, BusinessFindUniqueArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Business that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessFindUniqueOrThrowArgs} args - Arguments to find a Business
     * @example
     * // Get one Business
     * const business = await prisma.business.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessFindFirstArgs} args - Arguments to find a Business
     * @example
     * // Get one Business
     * const business = await prisma.business.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessFindFirstArgs>(args?: SelectSubset<T, BusinessFindFirstArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Business that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessFindFirstOrThrowArgs} args - Arguments to find a Business
     * @example
     * // Get one Business
     * const business = await prisma.business.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Businesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Businesses
     * const businesses = await prisma.business.findMany()
     * 
     * // Get first 10 Businesses
     * const businesses = await prisma.business.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessWithIdOnly = await prisma.business.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessFindManyArgs>(args?: SelectSubset<T, BusinessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Business.
     * @param {BusinessCreateArgs} args - Arguments to create a Business.
     * @example
     * // Create one Business
     * const Business = await prisma.business.create({
     *   data: {
     *     // ... data to create a Business
     *   }
     * })
     * 
     */
    create<T extends BusinessCreateArgs>(args: SelectSubset<T, BusinessCreateArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Businesses.
     * @param {BusinessCreateManyArgs} args - Arguments to create many Businesses.
     * @example
     * // Create many Businesses
     * const business = await prisma.business.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessCreateManyArgs>(args?: SelectSubset<T, BusinessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Businesses and returns the data saved in the database.
     * @param {BusinessCreateManyAndReturnArgs} args - Arguments to create many Businesses.
     * @example
     * // Create many Businesses
     * const business = await prisma.business.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Businesses and only return the `id`
     * const businessWithIdOnly = await prisma.business.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Business.
     * @param {BusinessDeleteArgs} args - Arguments to delete one Business.
     * @example
     * // Delete one Business
     * const Business = await prisma.business.delete({
     *   where: {
     *     // ... filter to delete one Business
     *   }
     * })
     * 
     */
    delete<T extends BusinessDeleteArgs>(args: SelectSubset<T, BusinessDeleteArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Business.
     * @param {BusinessUpdateArgs} args - Arguments to update one Business.
     * @example
     * // Update one Business
     * const business = await prisma.business.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessUpdateArgs>(args: SelectSubset<T, BusinessUpdateArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Businesses.
     * @param {BusinessDeleteManyArgs} args - Arguments to filter Businesses to delete.
     * @example
     * // Delete a few Businesses
     * const { count } = await prisma.business.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessDeleteManyArgs>(args?: SelectSubset<T, BusinessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Businesses
     * const business = await prisma.business.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessUpdateManyArgs>(args: SelectSubset<T, BusinessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Businesses and returns the data updated in the database.
     * @param {BusinessUpdateManyAndReturnArgs} args - Arguments to update many Businesses.
     * @example
     * // Update many Businesses
     * const business = await prisma.business.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Businesses and only return the `id`
     * const businessWithIdOnly = await prisma.business.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Business.
     * @param {BusinessUpsertArgs} args - Arguments to update or create a Business.
     * @example
     * // Update or create a Business
     * const business = await prisma.business.upsert({
     *   create: {
     *     // ... data to create a Business
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Business we want to update
     *   }
     * })
     */
    upsert<T extends BusinessUpsertArgs>(args: SelectSubset<T, BusinessUpsertArgs<ExtArgs>>): Prisma__BusinessClient<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Businesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessCountArgs} args - Arguments to filter Businesses to count.
     * @example
     * // Count the number of Businesses
     * const count = await prisma.business.count({
     *   where: {
     *     // ... the filter for the Businesses we want to count
     *   }
     * })
    **/
    count<T extends BusinessCountArgs>(
      args?: Subset<T, BusinessCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Business.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessAggregateArgs>(args: Subset<T, BusinessAggregateArgs>): Prisma.PrismaPromise<GetBusinessAggregateType<T>>

    /**
     * Group by Business.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessGroupByArgs['orderBy'] }
        : { orderBy?: BusinessGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Business model
   */
  readonly fields: BusinessFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Business.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Business_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Business_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Business model
   */
  interface BusinessFieldRefs {
    readonly id: FieldRef<"Business", 'String'>
    readonly createdAt: FieldRef<"Business", 'DateTime'>
    readonly updatedAt: FieldRef<"Business", 'DateTime'>
    readonly tenantId: FieldRef<"Business", 'String'>
    readonly createdById: FieldRef<"Business", 'String'>
    readonly updatedById: FieldRef<"Business", 'String'>
    readonly businessType: FieldRef<"Business", 'String'>
    readonly businessCategory: FieldRef<"Business", 'String'>
    readonly businessSubcategory: FieldRef<"Business", 'String'>
    readonly legalBusinessName: FieldRef<"Business", 'String'>
    readonly doingBusinessAs: FieldRef<"Business", 'String'>
    readonly ein: FieldRef<"Business", 'String'>
    readonly businessState: FieldRef<"Business", 'String'>
    readonly onlineStatus: FieldRef<"Business", 'String'>
    readonly onlineLink: FieldRef<"Business", 'String'>
    readonly businessEmail: FieldRef<"Business", 'String'>
    readonly addressLine1: FieldRef<"Business", 'String'>
    readonly addressLine2: FieldRef<"Business", 'String'>
    readonly zip: FieldRef<"Business", 'String'>
    readonly city: FieldRef<"Business", 'String'>
    readonly isManualEntry: FieldRef<"Business", 'Boolean'>
    readonly deleted: FieldRef<"Business", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Business findUnique
   */
  export type BusinessFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter, which Business to fetch.
     */
    where: BusinessWhereUniqueInput
  }

  /**
   * Business findUniqueOrThrow
   */
  export type BusinessFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter, which Business to fetch.
     */
    where: BusinessWhereUniqueInput
  }

  /**
   * Business findFirst
   */
  export type BusinessFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter, which Business to fetch.
     */
    where?: BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Businesses to fetch.
     */
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Businesses.
     */
    cursor?: BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Businesses.
     */
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * Business findFirstOrThrow
   */
  export type BusinessFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter, which Business to fetch.
     */
    where?: BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Businesses to fetch.
     */
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Businesses.
     */
    cursor?: BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Businesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Businesses.
     */
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * Business findMany
   */
  export type BusinessFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter, which Businesses to fetch.
     */
    where?: BusinessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Businesses to fetch.
     */
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Businesses.
     */
    cursor?: BusinessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Businesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Businesses.
     */
    skip?: number
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * Business create
   */
  export type BusinessCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * The data needed to create a Business.
     */
    data: XOR<BusinessCreateInput, BusinessUncheckedCreateInput>
  }

  /**
   * Business createMany
   */
  export type BusinessCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Businesses.
     */
    data: BusinessCreateManyInput | BusinessCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Business createManyAndReturn
   */
  export type BusinessCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * The data used to create many Businesses.
     */
    data: BusinessCreateManyInput | BusinessCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Business update
   */
  export type BusinessUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * The data needed to update a Business.
     */
    data: XOR<BusinessUpdateInput, BusinessUncheckedUpdateInput>
    /**
     * Choose, which Business to update.
     */
    where: BusinessWhereUniqueInput
  }

  /**
   * Business updateMany
   */
  export type BusinessUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Businesses.
     */
    data: XOR<BusinessUpdateManyMutationInput, BusinessUncheckedUpdateManyInput>
    /**
     * Filter which Businesses to update
     */
    where?: BusinessWhereInput
    /**
     * Limit how many Businesses to update.
     */
    limit?: number
  }

  /**
   * Business updateManyAndReturn
   */
  export type BusinessUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * The data used to update Businesses.
     */
    data: XOR<BusinessUpdateManyMutationInput, BusinessUncheckedUpdateManyInput>
    /**
     * Filter which Businesses to update
     */
    where?: BusinessWhereInput
    /**
     * Limit how many Businesses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Business upsert
   */
  export type BusinessUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * The filter to search for the Business to update in case it exists.
     */
    where: BusinessWhereUniqueInput
    /**
     * In case the Business found by the `where` argument doesn't exist, create a new Business with this data.
     */
    create: XOR<BusinessCreateInput, BusinessUncheckedCreateInput>
    /**
     * In case the Business was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessUpdateInput, BusinessUncheckedUpdateInput>
  }

  /**
   * Business delete
   */
  export type BusinessDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    /**
     * Filter which Business to delete.
     */
    where: BusinessWhereUniqueInput
  }

  /**
   * Business deleteMany
   */
  export type BusinessDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Businesses to delete
     */
    where?: BusinessWhereInput
    /**
     * Limit how many Businesses to delete.
     */
    limit?: number
  }

  /**
   * Business without action
   */
  export type BusinessDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerAvgAggregateOutputType = {
    id: number | null
  }

  export type CustomerSumAggregateOutputType = {
    id: number | null
  }

  export type CustomerMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    tenantId: string | null
    deleted: boolean | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    phone: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    tenantId: string | null
    deleted: boolean | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    address: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    tenantId: number
    deleted: number
    _all: number
  }


  export type CustomerAvgAggregateInputType = {
    id?: true
  }

  export type CustomerSumAggregateInputType = {
    id?: true
  }

  export type CustomerMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    tenantId?: true
    deleted?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    tenantId?: true
    deleted?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    tenantId?: true
    deleted?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _avg?: CustomerAvgAggregateInputType
    _sum?: CustomerSumAggregateInputType
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: number
    name: string
    email: string
    phone: string
    address: string
    createdAt: Date
    updatedAt: Date
    createdById: string
    updatedById: string
    tenantId: string
    deleted: boolean
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    tenantId?: boolean
    deleted?: boolean
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | Customer$InvoiceArgs<ExtArgs>
    Order?: boolean | Customer$OrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    tenantId?: boolean
    deleted?: boolean
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    tenantId?: boolean
    deleted?: boolean
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    tenantId?: boolean
    deleted?: boolean
  }

  export type CustomerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "phone" | "address" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "tenantId" | "deleted", ExtArgs["result"]["customer"]>
  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | Customer$InvoiceArgs<ExtArgs>
    Order?: boolean | Customer$OrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Customer_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Customer_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      User_Customer_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Tenant: Prisma.$TenantPayload<ExtArgs>
      User_Customer_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
      Invoice: Prisma.$InvoicePayload<ExtArgs>[]
      Order: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      phone: string
      address: string
      createdAt: Date
      updatedAt: Date
      createdById: string
      updatedById: string
      tenantId: string
      deleted: boolean
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomerCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers and returns the data updated in the database.
     * @param {CustomerUpdateManyAndReturnArgs} args - Arguments to update many Customers.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Customer_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Customer_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Invoice<T extends Customer$InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, Customer$InvoiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Order<T extends Customer$OrderArgs<ExtArgs> = {}>(args?: Subset<T, Customer$OrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'Int'>
    readonly name: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly phone: FieldRef<"Customer", 'String'>
    readonly address: FieldRef<"Customer", 'String'>
    readonly createdAt: FieldRef<"Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"Customer", 'DateTime'>
    readonly createdById: FieldRef<"Customer", 'String'>
    readonly updatedById: FieldRef<"Customer", 'String'>
    readonly tenantId: FieldRef<"Customer", 'String'>
    readonly deleted: FieldRef<"Customer", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer createManyAndReturn
   */
  export type CustomerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer updateManyAndReturn
   */
  export type CustomerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to delete.
     */
    limit?: number
  }

  /**
   * Customer.Invoice
   */
  export type Customer$InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Customer.Order
   */
  export type Customer$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model Discount
   */

  export type AggregateDiscount = {
    _count: DiscountCountAggregateOutputType | null
    _avg: DiscountAvgAggregateOutputType | null
    _sum: DiscountSumAggregateOutputType | null
    _min: DiscountMinAggregateOutputType | null
    _max: DiscountMaxAggregateOutputType | null
  }

  export type DiscountAvgAggregateOutputType = {
    id: number | null
    discountValue: Decimal | null
  }

  export type DiscountSumAggregateOutputType = {
    id: number | null
    discountValue: Decimal | null
  }

  export type DiscountMinAggregateOutputType = {
    id: number | null
    name: string | null
    discountValue: Decimal | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type DiscountMaxAggregateOutputType = {
    id: number | null
    name: string | null
    discountValue: Decimal | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type DiscountCountAggregateOutputType = {
    id: number
    name: number
    discountValue: number
    createdById: number
    updatedById: number
    deleted: number
    _all: number
  }


  export type DiscountAvgAggregateInputType = {
    id?: true
    discountValue?: true
  }

  export type DiscountSumAggregateInputType = {
    id?: true
    discountValue?: true
  }

  export type DiscountMinAggregateInputType = {
    id?: true
    name?: true
    discountValue?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type DiscountMaxAggregateInputType = {
    id?: true
    name?: true
    discountValue?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type DiscountCountAggregateInputType = {
    id?: true
    name?: true
    discountValue?: true
    createdById?: true
    updatedById?: true
    deleted?: true
    _all?: true
  }

  export type DiscountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discount to aggregate.
     */
    where?: DiscountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Discounts
    **/
    _count?: true | DiscountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscountMaxAggregateInputType
  }

  export type GetDiscountAggregateType<T extends DiscountAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscount[P]>
      : GetScalarType<T[P], AggregateDiscount[P]>
  }




  export type DiscountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscountWhereInput
    orderBy?: DiscountOrderByWithAggregationInput | DiscountOrderByWithAggregationInput[]
    by: DiscountScalarFieldEnum[] | DiscountScalarFieldEnum
    having?: DiscountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscountCountAggregateInputType | true
    _avg?: DiscountAvgAggregateInputType
    _sum?: DiscountSumAggregateInputType
    _min?: DiscountMinAggregateInputType
    _max?: DiscountMaxAggregateInputType
  }

  export type DiscountGroupByOutputType = {
    id: number
    name: string
    discountValue: Decimal
    createdById: string
    updatedById: string
    deleted: boolean
    _count: DiscountCountAggregateOutputType | null
    _avg: DiscountAvgAggregateOutputType | null
    _sum: DiscountSumAggregateOutputType | null
    _min: DiscountMinAggregateOutputType | null
    _max: DiscountMaxAggregateOutputType | null
  }

  type GetDiscountGroupByPayload<T extends DiscountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscountGroupByOutputType[P]>
            : GetScalarType<T[P], DiscountGroupByOutputType[P]>
        }
      >
    >


  export type DiscountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discountValue?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    InvoiceDetail?: boolean | Discount$InvoiceDetailArgs<ExtArgs>
    _count?: boolean | DiscountCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discount"]>

  export type DiscountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discountValue?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discount"]>

  export type DiscountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    discountValue?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discount"]>

  export type DiscountSelectScalar = {
    id?: boolean
    name?: boolean
    discountValue?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
  }

  export type DiscountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "discountValue" | "createdById" | "updatedById" | "deleted", ExtArgs["result"]["discount"]>
  export type DiscountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    InvoiceDetail?: boolean | Discount$InvoiceDetailArgs<ExtArgs>
    _count?: boolean | DiscountCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DiscountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Discount_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_Discount_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DiscountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Discount"
    objects: {
      User_Discount_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      User_Discount_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
      InvoiceDetail: Prisma.$InvoiceDetailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      discountValue: Prisma.Decimal
      createdById: string
      updatedById: string
      deleted: boolean
    }, ExtArgs["result"]["discount"]>
    composites: {}
  }

  type DiscountGetPayload<S extends boolean | null | undefined | DiscountDefaultArgs> = $Result.GetResult<Prisma.$DiscountPayload, S>

  type DiscountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscountCountAggregateInputType | true
    }

  export interface DiscountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Discount'], meta: { name: 'Discount' } }
    /**
     * Find zero or one Discount that matches the filter.
     * @param {DiscountFindUniqueArgs} args - Arguments to find a Discount
     * @example
     * // Get one Discount
     * const discount = await prisma.discount.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscountFindUniqueArgs>(args: SelectSubset<T, DiscountFindUniqueArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Discount that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscountFindUniqueOrThrowArgs} args - Arguments to find a Discount
     * @example
     * // Get one Discount
     * const discount = await prisma.discount.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscountFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Discount that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountFindFirstArgs} args - Arguments to find a Discount
     * @example
     * // Get one Discount
     * const discount = await prisma.discount.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscountFindFirstArgs>(args?: SelectSubset<T, DiscountFindFirstArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Discount that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountFindFirstOrThrowArgs} args - Arguments to find a Discount
     * @example
     * // Get one Discount
     * const discount = await prisma.discount.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscountFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscountFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Discounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discounts
     * const discounts = await prisma.discount.findMany()
     * 
     * // Get first 10 Discounts
     * const discounts = await prisma.discount.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discountWithIdOnly = await prisma.discount.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscountFindManyArgs>(args?: SelectSubset<T, DiscountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Discount.
     * @param {DiscountCreateArgs} args - Arguments to create a Discount.
     * @example
     * // Create one Discount
     * const Discount = await prisma.discount.create({
     *   data: {
     *     // ... data to create a Discount
     *   }
     * })
     * 
     */
    create<T extends DiscountCreateArgs>(args: SelectSubset<T, DiscountCreateArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Discounts.
     * @param {DiscountCreateManyArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discount = await prisma.discount.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscountCreateManyArgs>(args?: SelectSubset<T, DiscountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discounts and returns the data saved in the database.
     * @param {DiscountCreateManyAndReturnArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discount = await prisma.discount.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discounts and only return the `id`
     * const discountWithIdOnly = await prisma.discount.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscountCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Discount.
     * @param {DiscountDeleteArgs} args - Arguments to delete one Discount.
     * @example
     * // Delete one Discount
     * const Discount = await prisma.discount.delete({
     *   where: {
     *     // ... filter to delete one Discount
     *   }
     * })
     * 
     */
    delete<T extends DiscountDeleteArgs>(args: SelectSubset<T, DiscountDeleteArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Discount.
     * @param {DiscountUpdateArgs} args - Arguments to update one Discount.
     * @example
     * // Update one Discount
     * const discount = await prisma.discount.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscountUpdateArgs>(args: SelectSubset<T, DiscountUpdateArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Discounts.
     * @param {DiscountDeleteManyArgs} args - Arguments to filter Discounts to delete.
     * @example
     * // Delete a few Discounts
     * const { count } = await prisma.discount.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscountDeleteManyArgs>(args?: SelectSubset<T, DiscountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discounts
     * const discount = await prisma.discount.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscountUpdateManyArgs>(args: SelectSubset<T, DiscountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discounts and returns the data updated in the database.
     * @param {DiscountUpdateManyAndReturnArgs} args - Arguments to update many Discounts.
     * @example
     * // Update many Discounts
     * const discount = await prisma.discount.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Discounts and only return the `id`
     * const discountWithIdOnly = await prisma.discount.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscountUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Discount.
     * @param {DiscountUpsertArgs} args - Arguments to update or create a Discount.
     * @example
     * // Update or create a Discount
     * const discount = await prisma.discount.upsert({
     *   create: {
     *     // ... data to create a Discount
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discount we want to update
     *   }
     * })
     */
    upsert<T extends DiscountUpsertArgs>(args: SelectSubset<T, DiscountUpsertArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountCountArgs} args - Arguments to filter Discounts to count.
     * @example
     * // Count the number of Discounts
     * const count = await prisma.discount.count({
     *   where: {
     *     // ... the filter for the Discounts we want to count
     *   }
     * })
    **/
    count<T extends DiscountCountArgs>(
      args?: Subset<T, DiscountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscountAggregateArgs>(args: Subset<T, DiscountAggregateArgs>): Prisma.PrismaPromise<GetDiscountAggregateType<T>>

    /**
     * Group by Discount.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscountGroupByArgs['orderBy'] }
        : { orderBy?: DiscountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Discount model
   */
  readonly fields: DiscountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Discount.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Discount_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Discount_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    InvoiceDetail<T extends Discount$InvoiceDetailArgs<ExtArgs> = {}>(args?: Subset<T, Discount$InvoiceDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Discount model
   */
  interface DiscountFieldRefs {
    readonly id: FieldRef<"Discount", 'Int'>
    readonly name: FieldRef<"Discount", 'String'>
    readonly discountValue: FieldRef<"Discount", 'Decimal'>
    readonly createdById: FieldRef<"Discount", 'String'>
    readonly updatedById: FieldRef<"Discount", 'String'>
    readonly deleted: FieldRef<"Discount", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Discount findUnique
   */
  export type DiscountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter, which Discount to fetch.
     */
    where: DiscountWhereUniqueInput
  }

  /**
   * Discount findUniqueOrThrow
   */
  export type DiscountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter, which Discount to fetch.
     */
    where: DiscountWhereUniqueInput
  }

  /**
   * Discount findFirst
   */
  export type DiscountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter, which Discount to fetch.
     */
    where?: DiscountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discounts.
     */
    cursor?: DiscountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discounts.
     */
    distinct?: DiscountScalarFieldEnum | DiscountScalarFieldEnum[]
  }

  /**
   * Discount findFirstOrThrow
   */
  export type DiscountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter, which Discount to fetch.
     */
    where?: DiscountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Discounts.
     */
    cursor?: DiscountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Discounts.
     */
    distinct?: DiscountScalarFieldEnum | DiscountScalarFieldEnum[]
  }

  /**
   * Discount findMany
   */
  export type DiscountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter, which Discounts to fetch.
     */
    where?: DiscountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Discounts to fetch.
     */
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Discounts.
     */
    cursor?: DiscountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Discounts.
     */
    skip?: number
    distinct?: DiscountScalarFieldEnum | DiscountScalarFieldEnum[]
  }

  /**
   * Discount create
   */
  export type DiscountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * The data needed to create a Discount.
     */
    data: XOR<DiscountCreateInput, DiscountUncheckedCreateInput>
  }

  /**
   * Discount createMany
   */
  export type DiscountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Discounts.
     */
    data: DiscountCreateManyInput | DiscountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Discount createManyAndReturn
   */
  export type DiscountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * The data used to create many Discounts.
     */
    data: DiscountCreateManyInput | DiscountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Discount update
   */
  export type DiscountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * The data needed to update a Discount.
     */
    data: XOR<DiscountUpdateInput, DiscountUncheckedUpdateInput>
    /**
     * Choose, which Discount to update.
     */
    where: DiscountWhereUniqueInput
  }

  /**
   * Discount updateMany
   */
  export type DiscountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Discounts.
     */
    data: XOR<DiscountUpdateManyMutationInput, DiscountUncheckedUpdateManyInput>
    /**
     * Filter which Discounts to update
     */
    where?: DiscountWhereInput
    /**
     * Limit how many Discounts to update.
     */
    limit?: number
  }

  /**
   * Discount updateManyAndReturn
   */
  export type DiscountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * The data used to update Discounts.
     */
    data: XOR<DiscountUpdateManyMutationInput, DiscountUncheckedUpdateManyInput>
    /**
     * Filter which Discounts to update
     */
    where?: DiscountWhereInput
    /**
     * Limit how many Discounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Discount upsert
   */
  export type DiscountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * The filter to search for the Discount to update in case it exists.
     */
    where: DiscountWhereUniqueInput
    /**
     * In case the Discount found by the `where` argument doesn't exist, create a new Discount with this data.
     */
    create: XOR<DiscountCreateInput, DiscountUncheckedCreateInput>
    /**
     * In case the Discount was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscountUpdateInput, DiscountUncheckedUpdateInput>
  }

  /**
   * Discount delete
   */
  export type DiscountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    /**
     * Filter which Discount to delete.
     */
    where: DiscountWhereUniqueInput
  }

  /**
   * Discount deleteMany
   */
  export type DiscountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Discounts to delete
     */
    where?: DiscountWhereInput
    /**
     * Limit how many Discounts to delete.
     */
    limit?: number
  }

  /**
   * Discount.InvoiceDetail
   */
  export type Discount$InvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    where?: InvoiceDetailWhereInput
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    cursor?: InvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * Discount without action
   */
  export type DiscountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceAvgAggregateOutputType = {
    amount: Decimal | null
    customerId: number | null
  }

  export type InvoiceSumAggregateOutputType = {
    amount: Decimal | null
    customerId: number | null
  }

  export type InvoiceMinAggregateOutputType = {
    id: string | null
    number: string | null
    amount: Decimal | null
    status: $Enums.InvoiceStatus | null
    paymentType: $Enums.PaymentType | null
    orderId: string | null
    parentInvoiceId: string | null
    customerId: number | null
    tenantId: string | null
    createdById: string | null
    updatedById: string | null
    soldByUserId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    taxExempt: boolean | null
    taxExemptId: string | null
  }

  export type InvoiceMaxAggregateOutputType = {
    id: string | null
    number: string | null
    amount: Decimal | null
    status: $Enums.InvoiceStatus | null
    paymentType: $Enums.PaymentType | null
    orderId: string | null
    parentInvoiceId: string | null
    customerId: number | null
    tenantId: string | null
    createdById: string | null
    updatedById: string | null
    soldByUserId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    taxExempt: boolean | null
    taxExemptId: string | null
  }

  export type InvoiceCountAggregateOutputType = {
    id: number
    number: number
    amount: number
    status: number
    paymentType: number
    orderId: number
    parentInvoiceId: number
    customerId: number
    tenantId: number
    createdById: number
    updatedById: number
    soldByUserId: number
    createdAt: number
    updatedAt: number
    deleted: number
    taxExempt: number
    taxExemptId: number
    _all: number
  }


  export type InvoiceAvgAggregateInputType = {
    amount?: true
    customerId?: true
  }

  export type InvoiceSumAggregateInputType = {
    amount?: true
    customerId?: true
  }

  export type InvoiceMinAggregateInputType = {
    id?: true
    number?: true
    amount?: true
    status?: true
    paymentType?: true
    orderId?: true
    parentInvoiceId?: true
    customerId?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    soldByUserId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    taxExempt?: true
    taxExemptId?: true
  }

  export type InvoiceMaxAggregateInputType = {
    id?: true
    number?: true
    amount?: true
    status?: true
    paymentType?: true
    orderId?: true
    parentInvoiceId?: true
    customerId?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    soldByUserId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    taxExempt?: true
    taxExemptId?: true
  }

  export type InvoiceCountAggregateInputType = {
    id?: true
    number?: true
    amount?: true
    status?: true
    paymentType?: true
    orderId?: true
    parentInvoiceId?: true
    customerId?: true
    tenantId?: true
    createdById?: true
    updatedById?: true
    soldByUserId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    taxExempt?: true
    taxExemptId?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _avg?: InvoiceAvgAggregateInputType
    _sum?: InvoiceSumAggregateInputType
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    id: string
    number: string | null
    amount: Decimal
    status: $Enums.InvoiceStatus
    paymentType: $Enums.PaymentType | null
    orderId: string | null
    parentInvoiceId: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId: string | null
    createdAt: Date
    updatedAt: Date
    deleted: boolean
    taxExempt: boolean
    taxExemptId: string | null
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    number?: boolean
    amount?: boolean
    status?: boolean
    paymentType?: boolean
    orderId?: boolean
    parentInvoiceId?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    soldByUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: boolean
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    other_Invoice?: boolean | Invoice$other_InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    InvoiceDetail?: boolean | Invoice$InvoiceDetailArgs<ExtArgs>
    InvoiceVersion?: boolean | Invoice$InvoiceVersionArgs<ExtArgs>
    Payment?: boolean | Invoice$PaymentArgs<ExtArgs>
    ShippingDetail?: boolean | Invoice$ShippingDetailArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    number?: boolean
    amount?: boolean
    status?: boolean
    paymentType?: boolean
    orderId?: boolean
    parentInvoiceId?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    soldByUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: boolean
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    number?: boolean
    amount?: boolean
    status?: boolean
    paymentType?: boolean
    orderId?: boolean
    parentInvoiceId?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    soldByUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: boolean
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectScalar = {
    id?: boolean
    number?: boolean
    amount?: boolean
    status?: boolean
    paymentType?: boolean
    orderId?: boolean
    parentInvoiceId?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    soldByUserId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: boolean
  }

  export type InvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "number" | "amount" | "status" | "paymentType" | "orderId" | "parentInvoiceId" | "customerId" | "tenantId" | "createdById" | "updatedById" | "soldByUserId" | "createdAt" | "updatedAt" | "deleted" | "taxExempt" | "taxExemptId", ExtArgs["result"]["invoice"]>
  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    other_Invoice?: boolean | Invoice$other_InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    InvoiceDetail?: boolean | Invoice$InvoiceDetailArgs<ExtArgs>
    InvoiceVersion?: boolean | Invoice$InvoiceVersionArgs<ExtArgs>
    Payment?: boolean | Invoice$PaymentArgs<ExtArgs>
    ShippingDetail?: boolean | Invoice$ShippingDetailArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InvoiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Invoice_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    Order?: boolean | Invoice$OrderArgs<ExtArgs>
    Invoice?: boolean | Invoice$InvoiceArgs<ExtArgs>
    User_Invoice_soldByUserIdToUser?: boolean | Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Invoice_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      User_Invoice_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Customer: Prisma.$CustomerPayload<ExtArgs>
      Order: Prisma.$OrderPayload<ExtArgs> | null
      Invoice: Prisma.$InvoicePayload<ExtArgs> | null
      other_Invoice: Prisma.$InvoicePayload<ExtArgs>[]
      User_Invoice_soldByUserIdToUser: Prisma.$UserPayload<ExtArgs> | null
      Tenant: Prisma.$TenantPayload<ExtArgs>
      User_Invoice_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
      InvoiceDetail: Prisma.$InvoiceDetailPayload<ExtArgs>[]
      InvoiceVersion: Prisma.$InvoiceVersionPayload<ExtArgs>[]
      Payment: Prisma.$PaymentPayload<ExtArgs>[]
      ShippingDetail: Prisma.$ShippingDetailPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      number: string | null
      amount: Prisma.Decimal
      status: $Enums.InvoiceStatus
      paymentType: $Enums.PaymentType | null
      orderId: string | null
      parentInvoiceId: string | null
      customerId: number
      tenantId: string
      createdById: string
      updatedById: string
      soldByUserId: string | null
      createdAt: Date
      updatedAt: Date
      deleted: boolean
      taxExempt: boolean
      taxExemptId: string | null
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceWithIdOnly = await prisma.invoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invoices and returns the data saved in the database.
     * @param {InvoiceCreateManyAndReturnArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices and returns the data updated in the database.
     * @param {InvoiceUpdateManyAndReturnArgs} args - Arguments to update many Invoices.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvoiceUpdateManyAndReturnArgs>(args: SelectSubset<T, InvoiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Invoice_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Order<T extends Invoice$OrderArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$OrderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Invoice<T extends Invoice$InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$InvoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_Invoice<T extends Invoice$other_InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$other_InvoiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_Invoice_soldByUserIdToUser<T extends Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Invoice_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    InvoiceDetail<T extends Invoice$InvoiceDetailArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$InvoiceDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InvoiceVersion<T extends Invoice$InvoiceVersionArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$InvoiceVersionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Payment<T extends Invoice$PaymentArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$PaymentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ShippingDetail<T extends Invoice$ShippingDetailArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$ShippingDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */
  interface InvoiceFieldRefs {
    readonly id: FieldRef<"Invoice", 'String'>
    readonly number: FieldRef<"Invoice", 'String'>
    readonly amount: FieldRef<"Invoice", 'Decimal'>
    readonly status: FieldRef<"Invoice", 'InvoiceStatus'>
    readonly paymentType: FieldRef<"Invoice", 'PaymentType'>
    readonly orderId: FieldRef<"Invoice", 'String'>
    readonly parentInvoiceId: FieldRef<"Invoice", 'String'>
    readonly customerId: FieldRef<"Invoice", 'Int'>
    readonly tenantId: FieldRef<"Invoice", 'String'>
    readonly createdById: FieldRef<"Invoice", 'String'>
    readonly updatedById: FieldRef<"Invoice", 'String'>
    readonly soldByUserId: FieldRef<"Invoice", 'String'>
    readonly createdAt: FieldRef<"Invoice", 'DateTime'>
    readonly updatedAt: FieldRef<"Invoice", 'DateTime'>
    readonly deleted: FieldRef<"Invoice", 'Boolean'>
    readonly taxExempt: FieldRef<"Invoice", 'Boolean'>
    readonly taxExemptId: FieldRef<"Invoice", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invoice createManyAndReturn
   */
  export type InvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to update.
     */
    limit?: number
  }

  /**
   * Invoice updateManyAndReturn
   */
  export type InvoiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to delete.
     */
    limit?: number
  }

  /**
   * Invoice.Order
   */
  export type Invoice$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Invoice.Invoice
   */
  export type Invoice$InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * Invoice.other_Invoice
   */
  export type Invoice$other_InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice.User_Invoice_soldByUserIdToUser
   */
  export type Invoice$User_Invoice_soldByUserIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Invoice.InvoiceDetail
   */
  export type Invoice$InvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    where?: InvoiceDetailWhereInput
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    cursor?: InvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * Invoice.InvoiceVersion
   */
  export type Invoice$InvoiceVersionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    where?: InvoiceVersionWhereInput
    orderBy?: InvoiceVersionOrderByWithRelationInput | InvoiceVersionOrderByWithRelationInput[]
    cursor?: InvoiceVersionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceVersionScalarFieldEnum | InvoiceVersionScalarFieldEnum[]
  }

  /**
   * Invoice.Payment
   */
  export type Invoice$PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Invoice.ShippingDetail
   */
  export type Invoice$ShippingDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    where?: ShippingDetailWhereInput
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    cursor?: ShippingDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceDetail
   */

  export type AggregateInvoiceDetail = {
    _count: InvoiceDetailCountAggregateOutputType | null
    _avg: InvoiceDetailAvgAggregateOutputType | null
    _sum: InvoiceDetailSumAggregateOutputType | null
    _min: InvoiceDetailMinAggregateOutputType | null
    _max: InvoiceDetailMaxAggregateOutputType | null
  }

  export type InvoiceDetailAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    quantity: number | null
    taxId: number | null
    discountId: number | null
    lineTotal: Decimal | null
  }

  export type InvoiceDetailSumAggregateOutputType = {
    id: number | null
    productId: number | null
    quantity: number | null
    taxId: number | null
    discountId: number | null
    lineTotal: Decimal | null
  }

  export type InvoiceDetailMinAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    productId: number | null
    quantity: number | null
    taxId: number | null
    discountId: number | null
    lineTotal: Decimal | null
  }

  export type InvoiceDetailMaxAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    productId: number | null
    quantity: number | null
    taxId: number | null
    discountId: number | null
    lineTotal: Decimal | null
  }

  export type InvoiceDetailCountAggregateOutputType = {
    id: number
    invoiceId: number
    productId: number
    quantity: number
    taxId: number
    discountId: number
    lineTotal: number
    _all: number
  }


  export type InvoiceDetailAvgAggregateInputType = {
    id?: true
    productId?: true
    quantity?: true
    taxId?: true
    discountId?: true
    lineTotal?: true
  }

  export type InvoiceDetailSumAggregateInputType = {
    id?: true
    productId?: true
    quantity?: true
    taxId?: true
    discountId?: true
    lineTotal?: true
  }

  export type InvoiceDetailMinAggregateInputType = {
    id?: true
    invoiceId?: true
    productId?: true
    quantity?: true
    taxId?: true
    discountId?: true
    lineTotal?: true
  }

  export type InvoiceDetailMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    productId?: true
    quantity?: true
    taxId?: true
    discountId?: true
    lineTotal?: true
  }

  export type InvoiceDetailCountAggregateInputType = {
    id?: true
    invoiceId?: true
    productId?: true
    quantity?: true
    taxId?: true
    discountId?: true
    lineTotal?: true
    _all?: true
  }

  export type InvoiceDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceDetail to aggregate.
     */
    where?: InvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceDetails to fetch.
     */
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceDetails
    **/
    _count?: true | InvoiceDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceDetailMaxAggregateInputType
  }

  export type GetInvoiceDetailAggregateType<T extends InvoiceDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceDetail[P]>
      : GetScalarType<T[P], AggregateInvoiceDetail[P]>
  }




  export type InvoiceDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceDetailWhereInput
    orderBy?: InvoiceDetailOrderByWithAggregationInput | InvoiceDetailOrderByWithAggregationInput[]
    by: InvoiceDetailScalarFieldEnum[] | InvoiceDetailScalarFieldEnum
    having?: InvoiceDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceDetailCountAggregateInputType | true
    _avg?: InvoiceDetailAvgAggregateInputType
    _sum?: InvoiceDetailSumAggregateInputType
    _min?: InvoiceDetailMinAggregateInputType
    _max?: InvoiceDetailMaxAggregateInputType
  }

  export type InvoiceDetailGroupByOutputType = {
    id: number
    invoiceId: string
    productId: number
    quantity: number
    taxId: number | null
    discountId: number | null
    lineTotal: Decimal
    _count: InvoiceDetailCountAggregateOutputType | null
    _avg: InvoiceDetailAvgAggregateOutputType | null
    _sum: InvoiceDetailSumAggregateOutputType | null
    _min: InvoiceDetailMinAggregateOutputType | null
    _max: InvoiceDetailMaxAggregateOutputType | null
  }

  type GetInvoiceDetailGroupByPayload<T extends InvoiceDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceDetailGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceDetailGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    productId?: boolean
    quantity?: boolean
    taxId?: boolean
    discountId?: boolean
    lineTotal?: boolean
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceDetail"]>

  export type InvoiceDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    productId?: boolean
    quantity?: boolean
    taxId?: boolean
    discountId?: boolean
    lineTotal?: boolean
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceDetail"]>

  export type InvoiceDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    productId?: boolean
    quantity?: boolean
    taxId?: boolean
    discountId?: boolean
    lineTotal?: boolean
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceDetail"]>

  export type InvoiceDetailSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    productId?: boolean
    quantity?: boolean
    taxId?: boolean
    discountId?: boolean
    lineTotal?: boolean
  }

  export type InvoiceDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceId" | "productId" | "quantity" | "taxId" | "discountId" | "lineTotal", ExtArgs["result"]["invoiceDetail"]>
  export type InvoiceDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }
  export type InvoiceDetailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }
  export type InvoiceDetailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Discount?: boolean | InvoiceDetail$DiscountArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    TaxRate?: boolean | InvoiceDetail$TaxRateArgs<ExtArgs>
  }

  export type $InvoiceDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceDetail"
    objects: {
      Discount: Prisma.$DiscountPayload<ExtArgs> | null
      Invoice: Prisma.$InvoicePayload<ExtArgs>
      Product: Prisma.$ProductPayload<ExtArgs>
      TaxRate: Prisma.$TaxRatePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceId: string
      productId: number
      quantity: number
      taxId: number | null
      discountId: number | null
      lineTotal: Prisma.Decimal
    }, ExtArgs["result"]["invoiceDetail"]>
    composites: {}
  }

  type InvoiceDetailGetPayload<S extends boolean | null | undefined | InvoiceDetailDefaultArgs> = $Result.GetResult<Prisma.$InvoiceDetailPayload, S>

  type InvoiceDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceDetailCountAggregateInputType | true
    }

  export interface InvoiceDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceDetail'], meta: { name: 'InvoiceDetail' } }
    /**
     * Find zero or one InvoiceDetail that matches the filter.
     * @param {InvoiceDetailFindUniqueArgs} args - Arguments to find a InvoiceDetail
     * @example
     * // Get one InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceDetailFindUniqueArgs>(args: SelectSubset<T, InvoiceDetailFindUniqueArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InvoiceDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceDetailFindUniqueOrThrowArgs} args - Arguments to find a InvoiceDetail
     * @example
     * // Get one InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailFindFirstArgs} args - Arguments to find a InvoiceDetail
     * @example
     * // Get one InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceDetailFindFirstArgs>(args?: SelectSubset<T, InvoiceDetailFindFirstArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailFindFirstOrThrowArgs} args - Arguments to find a InvoiceDetail
     * @example
     * // Get one InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InvoiceDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceDetails
     * const invoiceDetails = await prisma.invoiceDetail.findMany()
     * 
     * // Get first 10 InvoiceDetails
     * const invoiceDetails = await prisma.invoiceDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceDetailWithIdOnly = await prisma.invoiceDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceDetailFindManyArgs>(args?: SelectSubset<T, InvoiceDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InvoiceDetail.
     * @param {InvoiceDetailCreateArgs} args - Arguments to create a InvoiceDetail.
     * @example
     * // Create one InvoiceDetail
     * const InvoiceDetail = await prisma.invoiceDetail.create({
     *   data: {
     *     // ... data to create a InvoiceDetail
     *   }
     * })
     * 
     */
    create<T extends InvoiceDetailCreateArgs>(args: SelectSubset<T, InvoiceDetailCreateArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InvoiceDetails.
     * @param {InvoiceDetailCreateManyArgs} args - Arguments to create many InvoiceDetails.
     * @example
     * // Create many InvoiceDetails
     * const invoiceDetail = await prisma.invoiceDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceDetailCreateManyArgs>(args?: SelectSubset<T, InvoiceDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvoiceDetails and returns the data saved in the database.
     * @param {InvoiceDetailCreateManyAndReturnArgs} args - Arguments to create many InvoiceDetails.
     * @example
     * // Create many InvoiceDetails
     * const invoiceDetail = await prisma.invoiceDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvoiceDetails and only return the `id`
     * const invoiceDetailWithIdOnly = await prisma.invoiceDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InvoiceDetail.
     * @param {InvoiceDetailDeleteArgs} args - Arguments to delete one InvoiceDetail.
     * @example
     * // Delete one InvoiceDetail
     * const InvoiceDetail = await prisma.invoiceDetail.delete({
     *   where: {
     *     // ... filter to delete one InvoiceDetail
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDetailDeleteArgs>(args: SelectSubset<T, InvoiceDetailDeleteArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InvoiceDetail.
     * @param {InvoiceDetailUpdateArgs} args - Arguments to update one InvoiceDetail.
     * @example
     * // Update one InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceDetailUpdateArgs>(args: SelectSubset<T, InvoiceDetailUpdateArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InvoiceDetails.
     * @param {InvoiceDetailDeleteManyArgs} args - Arguments to filter InvoiceDetails to delete.
     * @example
     * // Delete a few InvoiceDetails
     * const { count } = await prisma.invoiceDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDetailDeleteManyArgs>(args?: SelectSubset<T, InvoiceDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceDetails
     * const invoiceDetail = await prisma.invoiceDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceDetailUpdateManyArgs>(args: SelectSubset<T, InvoiceDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceDetails and returns the data updated in the database.
     * @param {InvoiceDetailUpdateManyAndReturnArgs} args - Arguments to update many InvoiceDetails.
     * @example
     * // Update many InvoiceDetails
     * const invoiceDetail = await prisma.invoiceDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InvoiceDetails and only return the `id`
     * const invoiceDetailWithIdOnly = await prisma.invoiceDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvoiceDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, InvoiceDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InvoiceDetail.
     * @param {InvoiceDetailUpsertArgs} args - Arguments to update or create a InvoiceDetail.
     * @example
     * // Update or create a InvoiceDetail
     * const invoiceDetail = await prisma.invoiceDetail.upsert({
     *   create: {
     *     // ... data to create a InvoiceDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceDetail we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceDetailUpsertArgs>(args: SelectSubset<T, InvoiceDetailUpsertArgs<ExtArgs>>): Prisma__InvoiceDetailClient<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InvoiceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailCountArgs} args - Arguments to filter InvoiceDetails to count.
     * @example
     * // Count the number of InvoiceDetails
     * const count = await prisma.invoiceDetail.count({
     *   where: {
     *     // ... the filter for the InvoiceDetails we want to count
     *   }
     * })
    **/
    count<T extends InvoiceDetailCountArgs>(
      args?: Subset<T, InvoiceDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceDetailAggregateArgs>(args: Subset<T, InvoiceDetailAggregateArgs>): Prisma.PrismaPromise<GetInvoiceDetailAggregateType<T>>

    /**
     * Group by InvoiceDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceDetailGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceDetail model
   */
  readonly fields: InvoiceDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Discount<T extends InvoiceDetail$DiscountArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDetail$DiscountArgs<ExtArgs>>): Prisma__DiscountClient<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    TaxRate<T extends InvoiceDetail$TaxRateArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDetail$TaxRateArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceDetail model
   */
  interface InvoiceDetailFieldRefs {
    readonly id: FieldRef<"InvoiceDetail", 'Int'>
    readonly invoiceId: FieldRef<"InvoiceDetail", 'String'>
    readonly productId: FieldRef<"InvoiceDetail", 'Int'>
    readonly quantity: FieldRef<"InvoiceDetail", 'Int'>
    readonly taxId: FieldRef<"InvoiceDetail", 'Int'>
    readonly discountId: FieldRef<"InvoiceDetail", 'Int'>
    readonly lineTotal: FieldRef<"InvoiceDetail", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceDetail findUnique
   */
  export type InvoiceDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceDetail to fetch.
     */
    where: InvoiceDetailWhereUniqueInput
  }

  /**
   * InvoiceDetail findUniqueOrThrow
   */
  export type InvoiceDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceDetail to fetch.
     */
    where: InvoiceDetailWhereUniqueInput
  }

  /**
   * InvoiceDetail findFirst
   */
  export type InvoiceDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceDetail to fetch.
     */
    where?: InvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceDetails to fetch.
     */
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceDetails.
     */
    cursor?: InvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceDetails.
     */
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * InvoiceDetail findFirstOrThrow
   */
  export type InvoiceDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceDetail to fetch.
     */
    where?: InvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceDetails to fetch.
     */
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceDetails.
     */
    cursor?: InvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceDetails.
     */
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * InvoiceDetail findMany
   */
  export type InvoiceDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceDetails to fetch.
     */
    where?: InvoiceDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceDetails to fetch.
     */
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceDetails.
     */
    cursor?: InvoiceDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceDetails.
     */
    skip?: number
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * InvoiceDetail create
   */
  export type InvoiceDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceDetail.
     */
    data: XOR<InvoiceDetailCreateInput, InvoiceDetailUncheckedCreateInput>
  }

  /**
   * InvoiceDetail createMany
   */
  export type InvoiceDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceDetails.
     */
    data: InvoiceDetailCreateManyInput | InvoiceDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InvoiceDetail createManyAndReturn
   */
  export type InvoiceDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * The data used to create many InvoiceDetails.
     */
    data: InvoiceDetailCreateManyInput | InvoiceDetailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceDetail update
   */
  export type InvoiceDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceDetail.
     */
    data: XOR<InvoiceDetailUpdateInput, InvoiceDetailUncheckedUpdateInput>
    /**
     * Choose, which InvoiceDetail to update.
     */
    where: InvoiceDetailWhereUniqueInput
  }

  /**
   * InvoiceDetail updateMany
   */
  export type InvoiceDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceDetails.
     */
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceDetails to update
     */
    where?: InvoiceDetailWhereInput
    /**
     * Limit how many InvoiceDetails to update.
     */
    limit?: number
  }

  /**
   * InvoiceDetail updateManyAndReturn
   */
  export type InvoiceDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * The data used to update InvoiceDetails.
     */
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceDetails to update
     */
    where?: InvoiceDetailWhereInput
    /**
     * Limit how many InvoiceDetails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceDetail upsert
   */
  export type InvoiceDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceDetail to update in case it exists.
     */
    where: InvoiceDetailWhereUniqueInput
    /**
     * In case the InvoiceDetail found by the `where` argument doesn't exist, create a new InvoiceDetail with this data.
     */
    create: XOR<InvoiceDetailCreateInput, InvoiceDetailUncheckedCreateInput>
    /**
     * In case the InvoiceDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceDetailUpdateInput, InvoiceDetailUncheckedUpdateInput>
  }

  /**
   * InvoiceDetail delete
   */
  export type InvoiceDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    /**
     * Filter which InvoiceDetail to delete.
     */
    where: InvoiceDetailWhereUniqueInput
  }

  /**
   * InvoiceDetail deleteMany
   */
  export type InvoiceDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceDetails to delete
     */
    where?: InvoiceDetailWhereInput
    /**
     * Limit how many InvoiceDetails to delete.
     */
    limit?: number
  }

  /**
   * InvoiceDetail.Discount
   */
  export type InvoiceDetail$DiscountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    where?: DiscountWhereInput
  }

  /**
   * InvoiceDetail.TaxRate
   */
  export type InvoiceDetail$TaxRateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    where?: TaxRateWhereInput
  }

  /**
   * InvoiceDetail without action
   */
  export type InvoiceDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceSettings
   */

  export type AggregateInvoiceSettings = {
    _count: InvoiceSettingsCountAggregateOutputType | null
    _min: InvoiceSettingsMinAggregateOutputType | null
    _max: InvoiceSettingsMaxAggregateOutputType | null
  }

  export type InvoiceSettingsMinAggregateOutputType = {
    id: string | null
    tenantId: string | null
    layout: string | null
    primaryColor: string | null
    includeCustomerInfo: boolean | null
    includePaymentTerms: boolean | null
    includeDueDate: boolean | null
    includeNotes: boolean | null
    deleted: boolean | null
  }

  export type InvoiceSettingsMaxAggregateOutputType = {
    id: string | null
    tenantId: string | null
    layout: string | null
    primaryColor: string | null
    includeCustomerInfo: boolean | null
    includePaymentTerms: boolean | null
    includeDueDate: boolean | null
    includeNotes: boolean | null
    deleted: boolean | null
  }

  export type InvoiceSettingsCountAggregateOutputType = {
    id: number
    tenantId: number
    layout: number
    primaryColor: number
    includeCustomerInfo: number
    includePaymentTerms: number
    includeDueDate: number
    includeNotes: number
    deleted: number
    _all: number
  }


  export type InvoiceSettingsMinAggregateInputType = {
    id?: true
    tenantId?: true
    layout?: true
    primaryColor?: true
    includeCustomerInfo?: true
    includePaymentTerms?: true
    includeDueDate?: true
    includeNotes?: true
    deleted?: true
  }

  export type InvoiceSettingsMaxAggregateInputType = {
    id?: true
    tenantId?: true
    layout?: true
    primaryColor?: true
    includeCustomerInfo?: true
    includePaymentTerms?: true
    includeDueDate?: true
    includeNotes?: true
    deleted?: true
  }

  export type InvoiceSettingsCountAggregateInputType = {
    id?: true
    tenantId?: true
    layout?: true
    primaryColor?: true
    includeCustomerInfo?: true
    includePaymentTerms?: true
    includeDueDate?: true
    includeNotes?: true
    deleted?: true
    _all?: true
  }

  export type InvoiceSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceSettings to aggregate.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceSettings
    **/
    _count?: true | InvoiceSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceSettingsMaxAggregateInputType
  }

  export type GetInvoiceSettingsAggregateType<T extends InvoiceSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceSettings[P]>
      : GetScalarType<T[P], AggregateInvoiceSettings[P]>
  }




  export type InvoiceSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceSettingsWhereInput
    orderBy?: InvoiceSettingsOrderByWithAggregationInput | InvoiceSettingsOrderByWithAggregationInput[]
    by: InvoiceSettingsScalarFieldEnum[] | InvoiceSettingsScalarFieldEnum
    having?: InvoiceSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceSettingsCountAggregateInputType | true
    _min?: InvoiceSettingsMinAggregateInputType
    _max?: InvoiceSettingsMaxAggregateInputType
  }

  export type InvoiceSettingsGroupByOutputType = {
    id: string
    tenantId: string
    layout: string
    primaryColor: string
    includeCustomerInfo: boolean
    includePaymentTerms: boolean
    includeDueDate: boolean
    includeNotes: boolean
    deleted: boolean
    _count: InvoiceSettingsCountAggregateOutputType | null
    _min: InvoiceSettingsMinAggregateOutputType | null
    _max: InvoiceSettingsMaxAggregateOutputType | null
  }

  type GetInvoiceSettingsGroupByPayload<T extends InvoiceSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceSettingsGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    layout?: boolean
    primaryColor?: boolean
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceSettings"]>

  export type InvoiceSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    layout?: boolean
    primaryColor?: boolean
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceSettings"]>

  export type InvoiceSettingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    layout?: boolean
    primaryColor?: boolean
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceSettings"]>

  export type InvoiceSettingsSelectScalar = {
    id?: boolean
    tenantId?: boolean
    layout?: boolean
    primaryColor?: boolean
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
  }

  export type InvoiceSettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tenantId" | "layout" | "primaryColor" | "includeCustomerInfo" | "includePaymentTerms" | "includeDueDate" | "includeNotes" | "deleted", ExtArgs["result"]["invoiceSettings"]>
  export type InvoiceSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type InvoiceSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type InvoiceSettingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $InvoiceSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceSettings"
    objects: {
      Tenant: Prisma.$TenantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tenantId: string
      layout: string
      primaryColor: string
      includeCustomerInfo: boolean
      includePaymentTerms: boolean
      includeDueDate: boolean
      includeNotes: boolean
      deleted: boolean
    }, ExtArgs["result"]["invoiceSettings"]>
    composites: {}
  }

  type InvoiceSettingsGetPayload<S extends boolean | null | undefined | InvoiceSettingsDefaultArgs> = $Result.GetResult<Prisma.$InvoiceSettingsPayload, S>

  type InvoiceSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceSettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceSettingsCountAggregateInputType | true
    }

  export interface InvoiceSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceSettings'], meta: { name: 'InvoiceSettings' } }
    /**
     * Find zero or one InvoiceSettings that matches the filter.
     * @param {InvoiceSettingsFindUniqueArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceSettingsFindUniqueArgs>(args: SelectSubset<T, InvoiceSettingsFindUniqueArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InvoiceSettings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceSettingsFindUniqueOrThrowArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindFirstArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceSettingsFindFirstArgs>(args?: SelectSubset<T, InvoiceSettingsFindFirstArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindFirstOrThrowArgs} args - Arguments to find a InvoiceSettings
     * @example
     * // Get one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InvoiceSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findMany()
     * 
     * // Get first 10 InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceSettingsWithIdOnly = await prisma.invoiceSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceSettingsFindManyArgs>(args?: SelectSubset<T, InvoiceSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InvoiceSettings.
     * @param {InvoiceSettingsCreateArgs} args - Arguments to create a InvoiceSettings.
     * @example
     * // Create one InvoiceSettings
     * const InvoiceSettings = await prisma.invoiceSettings.create({
     *   data: {
     *     // ... data to create a InvoiceSettings
     *   }
     * })
     * 
     */
    create<T extends InvoiceSettingsCreateArgs>(args: SelectSubset<T, InvoiceSettingsCreateArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InvoiceSettings.
     * @param {InvoiceSettingsCreateManyArgs} args - Arguments to create many InvoiceSettings.
     * @example
     * // Create many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceSettingsCreateManyArgs>(args?: SelectSubset<T, InvoiceSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvoiceSettings and returns the data saved in the database.
     * @param {InvoiceSettingsCreateManyAndReturnArgs} args - Arguments to create many InvoiceSettings.
     * @example
     * // Create many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvoiceSettings and only return the `id`
     * const invoiceSettingsWithIdOnly = await prisma.invoiceSettings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InvoiceSettings.
     * @param {InvoiceSettingsDeleteArgs} args - Arguments to delete one InvoiceSettings.
     * @example
     * // Delete one InvoiceSettings
     * const InvoiceSettings = await prisma.invoiceSettings.delete({
     *   where: {
     *     // ... filter to delete one InvoiceSettings
     *   }
     * })
     * 
     */
    delete<T extends InvoiceSettingsDeleteArgs>(args: SelectSubset<T, InvoiceSettingsDeleteArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InvoiceSettings.
     * @param {InvoiceSettingsUpdateArgs} args - Arguments to update one InvoiceSettings.
     * @example
     * // Update one InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceSettingsUpdateArgs>(args: SelectSubset<T, InvoiceSettingsUpdateArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InvoiceSettings.
     * @param {InvoiceSettingsDeleteManyArgs} args - Arguments to filter InvoiceSettings to delete.
     * @example
     * // Delete a few InvoiceSettings
     * const { count } = await prisma.invoiceSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceSettingsDeleteManyArgs>(args?: SelectSubset<T, InvoiceSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceSettingsUpdateManyArgs>(args: SelectSubset<T, InvoiceSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceSettings and returns the data updated in the database.
     * @param {InvoiceSettingsUpdateManyAndReturnArgs} args - Arguments to update many InvoiceSettings.
     * @example
     * // Update many InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InvoiceSettings and only return the `id`
     * const invoiceSettingsWithIdOnly = await prisma.invoiceSettings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvoiceSettingsUpdateManyAndReturnArgs>(args: SelectSubset<T, InvoiceSettingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InvoiceSettings.
     * @param {InvoiceSettingsUpsertArgs} args - Arguments to update or create a InvoiceSettings.
     * @example
     * // Update or create a InvoiceSettings
     * const invoiceSettings = await prisma.invoiceSettings.upsert({
     *   create: {
     *     // ... data to create a InvoiceSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceSettings we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceSettingsUpsertArgs>(args: SelectSubset<T, InvoiceSettingsUpsertArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsCountArgs} args - Arguments to filter InvoiceSettings to count.
     * @example
     * // Count the number of InvoiceSettings
     * const count = await prisma.invoiceSettings.count({
     *   where: {
     *     // ... the filter for the InvoiceSettings we want to count
     *   }
     * })
    **/
    count<T extends InvoiceSettingsCountArgs>(
      args?: Subset<T, InvoiceSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceSettingsAggregateArgs>(args: Subset<T, InvoiceSettingsAggregateArgs>): Prisma.PrismaPromise<GetInvoiceSettingsAggregateType<T>>

    /**
     * Group by InvoiceSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceSettingsGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceSettings model
   */
  readonly fields: InvoiceSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceSettings model
   */
  interface InvoiceSettingsFieldRefs {
    readonly id: FieldRef<"InvoiceSettings", 'String'>
    readonly tenantId: FieldRef<"InvoiceSettings", 'String'>
    readonly layout: FieldRef<"InvoiceSettings", 'String'>
    readonly primaryColor: FieldRef<"InvoiceSettings", 'String'>
    readonly includeCustomerInfo: FieldRef<"InvoiceSettings", 'Boolean'>
    readonly includePaymentTerms: FieldRef<"InvoiceSettings", 'Boolean'>
    readonly includeDueDate: FieldRef<"InvoiceSettings", 'Boolean'>
    readonly includeNotes: FieldRef<"InvoiceSettings", 'Boolean'>
    readonly deleted: FieldRef<"InvoiceSettings", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceSettings findUnique
   */
  export type InvoiceSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings findUniqueOrThrow
   */
  export type InvoiceSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings findFirst
   */
  export type InvoiceSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceSettings.
     */
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings findFirstOrThrow
   */
  export type InvoiceSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceSettings.
     */
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings findMany
   */
  export type InvoiceSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceSettings to fetch.
     */
    where?: InvoiceSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceSettings to fetch.
     */
    orderBy?: InvoiceSettingsOrderByWithRelationInput | InvoiceSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceSettings.
     */
    cursor?: InvoiceSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceSettings.
     */
    skip?: number
    distinct?: InvoiceSettingsScalarFieldEnum | InvoiceSettingsScalarFieldEnum[]
  }

  /**
   * InvoiceSettings create
   */
  export type InvoiceSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceSettings.
     */
    data: XOR<InvoiceSettingsCreateInput, InvoiceSettingsUncheckedCreateInput>
  }

  /**
   * InvoiceSettings createMany
   */
  export type InvoiceSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceSettings.
     */
    data: InvoiceSettingsCreateManyInput | InvoiceSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InvoiceSettings createManyAndReturn
   */
  export type InvoiceSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * The data used to create many InvoiceSettings.
     */
    data: InvoiceSettingsCreateManyInput | InvoiceSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceSettings update
   */
  export type InvoiceSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceSettings.
     */
    data: XOR<InvoiceSettingsUpdateInput, InvoiceSettingsUncheckedUpdateInput>
    /**
     * Choose, which InvoiceSettings to update.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings updateMany
   */
  export type InvoiceSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceSettings.
     */
    data: XOR<InvoiceSettingsUpdateManyMutationInput, InvoiceSettingsUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceSettings to update
     */
    where?: InvoiceSettingsWhereInput
    /**
     * Limit how many InvoiceSettings to update.
     */
    limit?: number
  }

  /**
   * InvoiceSettings updateManyAndReturn
   */
  export type InvoiceSettingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * The data used to update InvoiceSettings.
     */
    data: XOR<InvoiceSettingsUpdateManyMutationInput, InvoiceSettingsUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceSettings to update
     */
    where?: InvoiceSettingsWhereInput
    /**
     * Limit how many InvoiceSettings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceSettings upsert
   */
  export type InvoiceSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceSettings to update in case it exists.
     */
    where: InvoiceSettingsWhereUniqueInput
    /**
     * In case the InvoiceSettings found by the `where` argument doesn't exist, create a new InvoiceSettings with this data.
     */
    create: XOR<InvoiceSettingsCreateInput, InvoiceSettingsUncheckedCreateInput>
    /**
     * In case the InvoiceSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceSettingsUpdateInput, InvoiceSettingsUncheckedUpdateInput>
  }

  /**
   * InvoiceSettings delete
   */
  export type InvoiceSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    /**
     * Filter which InvoiceSettings to delete.
     */
    where: InvoiceSettingsWhereUniqueInput
  }

  /**
   * InvoiceSettings deleteMany
   */
  export type InvoiceSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceSettings to delete
     */
    where?: InvoiceSettingsWhereInput
    /**
     * Limit how many InvoiceSettings to delete.
     */
    limit?: number
  }

  /**
   * InvoiceSettings without action
   */
  export type InvoiceSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceVersion
   */

  export type AggregateInvoiceVersion = {
    _count: InvoiceVersionCountAggregateOutputType | null
    _avg: InvoiceVersionAvgAggregateOutputType | null
    _sum: InvoiceVersionSumAggregateOutputType | null
    _min: InvoiceVersionMinAggregateOutputType | null
    _max: InvoiceVersionMaxAggregateOutputType | null
  }

  export type InvoiceVersionAvgAggregateOutputType = {
    id: number | null
  }

  export type InvoiceVersionSumAggregateOutputType = {
    id: number | null
  }

  export type InvoiceVersionMinAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    number: string | null
    modifiedAt: Date | null
    modifiedBy: string | null
  }

  export type InvoiceVersionMaxAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    number: string | null
    modifiedAt: Date | null
    modifiedBy: string | null
  }

  export type InvoiceVersionCountAggregateOutputType = {
    id: number
    invoiceId: number
    number: number
    data: number
    modifiedAt: number
    modifiedBy: number
    _all: number
  }


  export type InvoiceVersionAvgAggregateInputType = {
    id?: true
  }

  export type InvoiceVersionSumAggregateInputType = {
    id?: true
  }

  export type InvoiceVersionMinAggregateInputType = {
    id?: true
    invoiceId?: true
    number?: true
    modifiedAt?: true
    modifiedBy?: true
  }

  export type InvoiceVersionMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    number?: true
    modifiedAt?: true
    modifiedBy?: true
  }

  export type InvoiceVersionCountAggregateInputType = {
    id?: true
    invoiceId?: true
    number?: true
    data?: true
    modifiedAt?: true
    modifiedBy?: true
    _all?: true
  }

  export type InvoiceVersionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceVersion to aggregate.
     */
    where?: InvoiceVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceVersions to fetch.
     */
    orderBy?: InvoiceVersionOrderByWithRelationInput | InvoiceVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceVersions
    **/
    _count?: true | InvoiceVersionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceVersionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceVersionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceVersionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceVersionMaxAggregateInputType
  }

  export type GetInvoiceVersionAggregateType<T extends InvoiceVersionAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceVersion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceVersion[P]>
      : GetScalarType<T[P], AggregateInvoiceVersion[P]>
  }




  export type InvoiceVersionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceVersionWhereInput
    orderBy?: InvoiceVersionOrderByWithAggregationInput | InvoiceVersionOrderByWithAggregationInput[]
    by: InvoiceVersionScalarFieldEnum[] | InvoiceVersionScalarFieldEnum
    having?: InvoiceVersionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceVersionCountAggregateInputType | true
    _avg?: InvoiceVersionAvgAggregateInputType
    _sum?: InvoiceVersionSumAggregateInputType
    _min?: InvoiceVersionMinAggregateInputType
    _max?: InvoiceVersionMaxAggregateInputType
  }

  export type InvoiceVersionGroupByOutputType = {
    id: number
    invoiceId: string
    number: string
    data: JsonValue
    modifiedAt: Date
    modifiedBy: string
    _count: InvoiceVersionCountAggregateOutputType | null
    _avg: InvoiceVersionAvgAggregateOutputType | null
    _sum: InvoiceVersionSumAggregateOutputType | null
    _min: InvoiceVersionMinAggregateOutputType | null
    _max: InvoiceVersionMaxAggregateOutputType | null
  }

  type GetInvoiceVersionGroupByPayload<T extends InvoiceVersionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceVersionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceVersionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceVersionGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceVersionGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceVersionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    number?: boolean
    data?: boolean
    modifiedAt?: boolean
    modifiedBy?: boolean
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceVersion"]>

  export type InvoiceVersionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    number?: boolean
    data?: boolean
    modifiedAt?: boolean
    modifiedBy?: boolean
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceVersion"]>

  export type InvoiceVersionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    number?: boolean
    data?: boolean
    modifiedAt?: boolean
    modifiedBy?: boolean
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceVersion"]>

  export type InvoiceVersionSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    number?: boolean
    data?: boolean
    modifiedAt?: boolean
    modifiedBy?: boolean
  }

  export type InvoiceVersionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceId" | "number" | "data" | "modifiedAt" | "modifiedBy", ExtArgs["result"]["invoiceVersion"]>
  export type InvoiceVersionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }
  export type InvoiceVersionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }
  export type InvoiceVersionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
  }

  export type $InvoiceVersionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceVersion"
    objects: {
      Invoice: Prisma.$InvoicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceId: string
      number: string
      data: Prisma.JsonValue
      modifiedAt: Date
      modifiedBy: string
    }, ExtArgs["result"]["invoiceVersion"]>
    composites: {}
  }

  type InvoiceVersionGetPayload<S extends boolean | null | undefined | InvoiceVersionDefaultArgs> = $Result.GetResult<Prisma.$InvoiceVersionPayload, S>

  type InvoiceVersionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceVersionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceVersionCountAggregateInputType | true
    }

  export interface InvoiceVersionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceVersion'], meta: { name: 'InvoiceVersion' } }
    /**
     * Find zero or one InvoiceVersion that matches the filter.
     * @param {InvoiceVersionFindUniqueArgs} args - Arguments to find a InvoiceVersion
     * @example
     * // Get one InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceVersionFindUniqueArgs>(args: SelectSubset<T, InvoiceVersionFindUniqueArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InvoiceVersion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceVersionFindUniqueOrThrowArgs} args - Arguments to find a InvoiceVersion
     * @example
     * // Get one InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceVersionFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceVersion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionFindFirstArgs} args - Arguments to find a InvoiceVersion
     * @example
     * // Get one InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceVersionFindFirstArgs>(args?: SelectSubset<T, InvoiceVersionFindFirstArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceVersion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionFindFirstOrThrowArgs} args - Arguments to find a InvoiceVersion
     * @example
     * // Get one InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceVersionFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InvoiceVersions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceVersions
     * const invoiceVersions = await prisma.invoiceVersion.findMany()
     * 
     * // Get first 10 InvoiceVersions
     * const invoiceVersions = await prisma.invoiceVersion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceVersionWithIdOnly = await prisma.invoiceVersion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceVersionFindManyArgs>(args?: SelectSubset<T, InvoiceVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InvoiceVersion.
     * @param {InvoiceVersionCreateArgs} args - Arguments to create a InvoiceVersion.
     * @example
     * // Create one InvoiceVersion
     * const InvoiceVersion = await prisma.invoiceVersion.create({
     *   data: {
     *     // ... data to create a InvoiceVersion
     *   }
     * })
     * 
     */
    create<T extends InvoiceVersionCreateArgs>(args: SelectSubset<T, InvoiceVersionCreateArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InvoiceVersions.
     * @param {InvoiceVersionCreateManyArgs} args - Arguments to create many InvoiceVersions.
     * @example
     * // Create many InvoiceVersions
     * const invoiceVersion = await prisma.invoiceVersion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceVersionCreateManyArgs>(args?: SelectSubset<T, InvoiceVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InvoiceVersions and returns the data saved in the database.
     * @param {InvoiceVersionCreateManyAndReturnArgs} args - Arguments to create many InvoiceVersions.
     * @example
     * // Create many InvoiceVersions
     * const invoiceVersion = await prisma.invoiceVersion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InvoiceVersions and only return the `id`
     * const invoiceVersionWithIdOnly = await prisma.invoiceVersion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceVersionCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InvoiceVersion.
     * @param {InvoiceVersionDeleteArgs} args - Arguments to delete one InvoiceVersion.
     * @example
     * // Delete one InvoiceVersion
     * const InvoiceVersion = await prisma.invoiceVersion.delete({
     *   where: {
     *     // ... filter to delete one InvoiceVersion
     *   }
     * })
     * 
     */
    delete<T extends InvoiceVersionDeleteArgs>(args: SelectSubset<T, InvoiceVersionDeleteArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InvoiceVersion.
     * @param {InvoiceVersionUpdateArgs} args - Arguments to update one InvoiceVersion.
     * @example
     * // Update one InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceVersionUpdateArgs>(args: SelectSubset<T, InvoiceVersionUpdateArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InvoiceVersions.
     * @param {InvoiceVersionDeleteManyArgs} args - Arguments to filter InvoiceVersions to delete.
     * @example
     * // Delete a few InvoiceVersions
     * const { count } = await prisma.invoiceVersion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceVersionDeleteManyArgs>(args?: SelectSubset<T, InvoiceVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceVersions
     * const invoiceVersion = await prisma.invoiceVersion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceVersionUpdateManyArgs>(args: SelectSubset<T, InvoiceVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceVersions and returns the data updated in the database.
     * @param {InvoiceVersionUpdateManyAndReturnArgs} args - Arguments to update many InvoiceVersions.
     * @example
     * // Update many InvoiceVersions
     * const invoiceVersion = await prisma.invoiceVersion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InvoiceVersions and only return the `id`
     * const invoiceVersionWithIdOnly = await prisma.invoiceVersion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvoiceVersionUpdateManyAndReturnArgs>(args: SelectSubset<T, InvoiceVersionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InvoiceVersion.
     * @param {InvoiceVersionUpsertArgs} args - Arguments to update or create a InvoiceVersion.
     * @example
     * // Update or create a InvoiceVersion
     * const invoiceVersion = await prisma.invoiceVersion.upsert({
     *   create: {
     *     // ... data to create a InvoiceVersion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceVersion we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceVersionUpsertArgs>(args: SelectSubset<T, InvoiceVersionUpsertArgs<ExtArgs>>): Prisma__InvoiceVersionClient<$Result.GetResult<Prisma.$InvoiceVersionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InvoiceVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionCountArgs} args - Arguments to filter InvoiceVersions to count.
     * @example
     * // Count the number of InvoiceVersions
     * const count = await prisma.invoiceVersion.count({
     *   where: {
     *     // ... the filter for the InvoiceVersions we want to count
     *   }
     * })
    **/
    count<T extends InvoiceVersionCountArgs>(
      args?: Subset<T, InvoiceVersionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceVersionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceVersionAggregateArgs>(args: Subset<T, InvoiceVersionAggregateArgs>): Prisma.PrismaPromise<GetInvoiceVersionAggregateType<T>>

    /**
     * Group by InvoiceVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceVersionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceVersionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceVersionGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceVersionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceVersion model
   */
  readonly fields: InvoiceVersionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceVersion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceVersionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceVersion model
   */
  interface InvoiceVersionFieldRefs {
    readonly id: FieldRef<"InvoiceVersion", 'Int'>
    readonly invoiceId: FieldRef<"InvoiceVersion", 'String'>
    readonly number: FieldRef<"InvoiceVersion", 'String'>
    readonly data: FieldRef<"InvoiceVersion", 'Json'>
    readonly modifiedAt: FieldRef<"InvoiceVersion", 'DateTime'>
    readonly modifiedBy: FieldRef<"InvoiceVersion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceVersion findUnique
   */
  export type InvoiceVersionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceVersion to fetch.
     */
    where: InvoiceVersionWhereUniqueInput
  }

  /**
   * InvoiceVersion findUniqueOrThrow
   */
  export type InvoiceVersionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceVersion to fetch.
     */
    where: InvoiceVersionWhereUniqueInput
  }

  /**
   * InvoiceVersion findFirst
   */
  export type InvoiceVersionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceVersion to fetch.
     */
    where?: InvoiceVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceVersions to fetch.
     */
    orderBy?: InvoiceVersionOrderByWithRelationInput | InvoiceVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceVersions.
     */
    cursor?: InvoiceVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceVersions.
     */
    distinct?: InvoiceVersionScalarFieldEnum | InvoiceVersionScalarFieldEnum[]
  }

  /**
   * InvoiceVersion findFirstOrThrow
   */
  export type InvoiceVersionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceVersion to fetch.
     */
    where?: InvoiceVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceVersions to fetch.
     */
    orderBy?: InvoiceVersionOrderByWithRelationInput | InvoiceVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceVersions.
     */
    cursor?: InvoiceVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceVersions.
     */
    distinct?: InvoiceVersionScalarFieldEnum | InvoiceVersionScalarFieldEnum[]
  }

  /**
   * InvoiceVersion findMany
   */
  export type InvoiceVersionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceVersions to fetch.
     */
    where?: InvoiceVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceVersions to fetch.
     */
    orderBy?: InvoiceVersionOrderByWithRelationInput | InvoiceVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceVersions.
     */
    cursor?: InvoiceVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceVersions.
     */
    skip?: number
    distinct?: InvoiceVersionScalarFieldEnum | InvoiceVersionScalarFieldEnum[]
  }

  /**
   * InvoiceVersion create
   */
  export type InvoiceVersionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceVersion.
     */
    data: XOR<InvoiceVersionCreateInput, InvoiceVersionUncheckedCreateInput>
  }

  /**
   * InvoiceVersion createMany
   */
  export type InvoiceVersionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceVersions.
     */
    data: InvoiceVersionCreateManyInput | InvoiceVersionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InvoiceVersion createManyAndReturn
   */
  export type InvoiceVersionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * The data used to create many InvoiceVersions.
     */
    data: InvoiceVersionCreateManyInput | InvoiceVersionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceVersion update
   */
  export type InvoiceVersionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceVersion.
     */
    data: XOR<InvoiceVersionUpdateInput, InvoiceVersionUncheckedUpdateInput>
    /**
     * Choose, which InvoiceVersion to update.
     */
    where: InvoiceVersionWhereUniqueInput
  }

  /**
   * InvoiceVersion updateMany
   */
  export type InvoiceVersionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceVersions.
     */
    data: XOR<InvoiceVersionUpdateManyMutationInput, InvoiceVersionUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceVersions to update
     */
    where?: InvoiceVersionWhereInput
    /**
     * Limit how many InvoiceVersions to update.
     */
    limit?: number
  }

  /**
   * InvoiceVersion updateManyAndReturn
   */
  export type InvoiceVersionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * The data used to update InvoiceVersions.
     */
    data: XOR<InvoiceVersionUpdateManyMutationInput, InvoiceVersionUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceVersions to update
     */
    where?: InvoiceVersionWhereInput
    /**
     * Limit how many InvoiceVersions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InvoiceVersion upsert
   */
  export type InvoiceVersionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceVersion to update in case it exists.
     */
    where: InvoiceVersionWhereUniqueInput
    /**
     * In case the InvoiceVersion found by the `where` argument doesn't exist, create a new InvoiceVersion with this data.
     */
    create: XOR<InvoiceVersionCreateInput, InvoiceVersionUncheckedCreateInput>
    /**
     * In case the InvoiceVersion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceVersionUpdateInput, InvoiceVersionUncheckedUpdateInput>
  }

  /**
   * InvoiceVersion delete
   */
  export type InvoiceVersionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
    /**
     * Filter which InvoiceVersion to delete.
     */
    where: InvoiceVersionWhereUniqueInput
  }

  /**
   * InvoiceVersion deleteMany
   */
  export type InvoiceVersionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceVersions to delete
     */
    where?: InvoiceVersionWhereInput
    /**
     * Limit how many InvoiceVersions to delete.
     */
    limit?: number
  }

  /**
   * InvoiceVersion without action
   */
  export type InvoiceVersionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceVersion
     */
    select?: InvoiceVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceVersion
     */
    omit?: InvoiceVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceVersionInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    customerId: number | null
  }

  export type OrderSumAggregateOutputType = {
    customerId: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: number | null
    tenantId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    customerId: number | null
    tenantId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    customerId: number
    tenantId: number
    createdAt: number
    updatedAt: number
    deleted: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    customerId?: true
  }

  export type OrderSumAggregateInputType = {
    customerId?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    tenantId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    tenantId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    customerId?: true
    tenantId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderNumber: string
    customerId: number | null
    tenantId: string
    createdAt: Date
    updatedAt: Date
    deleted: boolean
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    Invoice?: boolean | Order$InvoiceArgs<ExtArgs>
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    OrderItem?: boolean | Order$OrderItemArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    customerId?: boolean
    tenantId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderNumber" | "customerId" | "tenantId" | "createdAt" | "updatedAt" | "deleted", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Invoice?: boolean | Order$InvoiceArgs<ExtArgs>
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    OrderItem?: boolean | Order$OrderItemArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | Order$CustomerArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      Invoice: Prisma.$InvoicePayload<ExtArgs>[]
      Customer: Prisma.$CustomerPayload<ExtArgs> | null
      Tenant: Prisma.$TenantPayload<ExtArgs>
      OrderItem: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      customerId: number | null
      tenantId: string
      createdAt: Date
      updatedAt: Date
      deleted: boolean
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Invoice<T extends Order$InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, Order$InvoiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Customer<T extends Order$CustomerArgs<ExtArgs> = {}>(args?: Subset<T, Order$CustomerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    OrderItem<T extends Order$OrderItemArgs<ExtArgs> = {}>(args?: Subset<T, Order$OrderItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly customerId: FieldRef<"Order", 'Int'>
    readonly tenantId: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly deleted: FieldRef<"Order", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.Invoice
   */
  export type Order$InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Order.Customer
   */
  export type Order$CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Order.OrderItem
   */
  export type Order$OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemSumAggregateOutputType = {
    id: number | null
    productId: number | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: number | null
    orderId: string | null
    productId: number | null
    sku: string | null
    name: string | null
    description: string | null
    variant: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    imageUrl: string | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: number | null
    orderId: string | null
    productId: number | null
    sku: string | null
    name: string | null
    description: string | null
    variant: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    imageUrl: string | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    sku: number
    name: number
    description: number
    variant: number
    quantity: number
    unitPrice: number
    totalPrice: number
    imageUrl: number
    specs: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    id?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemSumAggregateInputType = {
    id?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    sku?: true
    name?: true
    description?: true
    variant?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    imageUrl?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    sku?: true
    name?: true
    description?: true
    variant?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    imageUrl?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    sku?: true
    name?: true
    description?: true
    variant?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    imageUrl?: true
    specs?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: number
    orderId: string
    productId: number
    sku: string
    name: string
    description: string | null
    variant: string | null
    quantity: number
    unitPrice: Decimal
    totalPrice: Decimal
    imageUrl: string | null
    specs: JsonValue | null
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    variant?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    imageUrl?: boolean
    specs?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    variant?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    imageUrl?: boolean
    specs?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    variant?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    imageUrl?: boolean
    specs?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    sku?: boolean
    name?: boolean
    description?: boolean
    variant?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    imageUrl?: boolean
    specs?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productId" | "sku" | "name" | "description" | "variant" | "quantity" | "unitPrice" | "totalPrice" | "imageUrl" | "specs", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      Order: Prisma.$OrderPayload<ExtArgs>
      Product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orderId: string
      productId: number
      sku: string
      name: string
      description: string | null
      variant: string | null
      quantity: number
      unitPrice: Prisma.Decimal
      totalPrice: Prisma.Decimal
      imageUrl: string | null
      specs: Prisma.JsonValue | null
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems and returns the data updated in the database.
     * @param {OrderItemUpdateManyAndReturnArgs} args - Arguments to update many OrderItems.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'Int'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'Int'>
    readonly sku: FieldRef<"OrderItem", 'String'>
    readonly name: FieldRef<"OrderItem", 'String'>
    readonly description: FieldRef<"OrderItem", 'String'>
    readonly variant: FieldRef<"OrderItem", 'String'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly totalPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly imageUrl: FieldRef<"OrderItem", 'String'>
    readonly specs: FieldRef<"OrderItem", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem updateManyAndReturn
   */
  export type OrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    id: number | null
    amount: Decimal | null
  }

  export type PaymentSumAggregateOutputType = {
    id: number | null
    amount: Decimal | null
  }

  export type PaymentMinAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    amount: Decimal | null
    date: Date | null
    method: string | null
    status: string | null
    reference: string | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    amount: Decimal | null
    date: Date | null
    method: string | null
    status: string | null
    reference: string | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    invoiceId: number
    amount: number
    date: number
    method: number
    status: number
    reference: number
    createdById: number
    updatedById: number
    deleted: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    id?: true
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    id?: true
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    invoiceId?: true
    amount?: true
    date?: true
    method?: true
    status?: true
    reference?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    amount?: true
    date?: true
    method?: true
    status?: true
    reference?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    invoiceId?: true
    amount?: true
    date?: true
    method?: true
    status?: true
    reference?: true
    createdById?: true
    updatedById?: true
    deleted?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: number
    invoiceId: string
    amount: Decimal
    date: Date
    method: string
    status: string
    reference: string | null
    createdById: string
    updatedById: string
    deleted: boolean
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    status?: boolean
    reference?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    status?: boolean
    reference?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    status?: boolean
    reference?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    status?: boolean
    reference?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceId" | "amount" | "date" | "method" | "status" | "reference" | "createdById" | "updatedById" | "deleted", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Payment_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_Payment_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      User_Payment_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Invoice: Prisma.$InvoicePayload<ExtArgs>
      User_Payment_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceId: string
      amount: Prisma.Decimal
      date: Date
      method: string
      status: string
      reference: string | null
      createdById: string
      updatedById: string
      deleted: boolean
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Payment_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Payment_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'Int'>
    readonly invoiceId: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Decimal'>
    readonly date: FieldRef<"Payment", 'DateTime'>
    readonly method: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'String'>
    readonly reference: FieldRef<"Payment", 'String'>
    readonly createdById: FieldRef<"Payment", 'String'>
    readonly updatedById: FieldRef<"Payment", 'String'>
    readonly deleted: FieldRef<"Payment", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model PaymentLog
   */

  export type AggregatePaymentLog = {
    _count: PaymentLogCountAggregateOutputType | null
    _avg: PaymentLogAvgAggregateOutputType | null
    _sum: PaymentLogSumAggregateOutputType | null
    _min: PaymentLogMinAggregateOutputType | null
    _max: PaymentLogMaxAggregateOutputType | null
  }

  export type PaymentLogAvgAggregateOutputType = {
    id: number | null
  }

  export type PaymentLogSumAggregateOutputType = {
    id: number | null
  }

  export type PaymentLogMinAggregateOutputType = {
    id: number | null
    timestamp: Date | null
    logMessage: string | null
  }

  export type PaymentLogMaxAggregateOutputType = {
    id: number | null
    timestamp: Date | null
    logMessage: string | null
  }

  export type PaymentLogCountAggregateOutputType = {
    id: number
    timestamp: number
    logMessage: number
    _all: number
  }


  export type PaymentLogAvgAggregateInputType = {
    id?: true
  }

  export type PaymentLogSumAggregateInputType = {
    id?: true
  }

  export type PaymentLogMinAggregateInputType = {
    id?: true
    timestamp?: true
    logMessage?: true
  }

  export type PaymentLogMaxAggregateInputType = {
    id?: true
    timestamp?: true
    logMessage?: true
  }

  export type PaymentLogCountAggregateInputType = {
    id?: true
    timestamp?: true
    logMessage?: true
    _all?: true
  }

  export type PaymentLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentLog to aggregate.
     */
    where?: PaymentLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLogs to fetch.
     */
    orderBy?: PaymentLogOrderByWithRelationInput | PaymentLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentLogs
    **/
    _count?: true | PaymentLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentLogMaxAggregateInputType
  }

  export type GetPaymentLogAggregateType<T extends PaymentLogAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentLog[P]>
      : GetScalarType<T[P], AggregatePaymentLog[P]>
  }




  export type PaymentLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLogWhereInput
    orderBy?: PaymentLogOrderByWithAggregationInput | PaymentLogOrderByWithAggregationInput[]
    by: PaymentLogScalarFieldEnum[] | PaymentLogScalarFieldEnum
    having?: PaymentLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentLogCountAggregateInputType | true
    _avg?: PaymentLogAvgAggregateInputType
    _sum?: PaymentLogSumAggregateInputType
    _min?: PaymentLogMinAggregateInputType
    _max?: PaymentLogMaxAggregateInputType
  }

  export type PaymentLogGroupByOutputType = {
    id: number
    timestamp: Date
    logMessage: string
    _count: PaymentLogCountAggregateOutputType | null
    _avg: PaymentLogAvgAggregateOutputType | null
    _sum: PaymentLogSumAggregateOutputType | null
    _min: PaymentLogMinAggregateOutputType | null
    _max: PaymentLogMaxAggregateOutputType | null
  }

  type GetPaymentLogGroupByPayload<T extends PaymentLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentLogGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentLogGroupByOutputType[P]>
        }
      >
    >


  export type PaymentLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    logMessage?: boolean
  }, ExtArgs["result"]["paymentLog"]>

  export type PaymentLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    logMessage?: boolean
  }, ExtArgs["result"]["paymentLog"]>

  export type PaymentLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    logMessage?: boolean
  }, ExtArgs["result"]["paymentLog"]>

  export type PaymentLogSelectScalar = {
    id?: boolean
    timestamp?: boolean
    logMessage?: boolean
  }

  export type PaymentLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "timestamp" | "logMessage", ExtArgs["result"]["paymentLog"]>

  export type $PaymentLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      timestamp: Date
      logMessage: string
    }, ExtArgs["result"]["paymentLog"]>
    composites: {}
  }

  type PaymentLogGetPayload<S extends boolean | null | undefined | PaymentLogDefaultArgs> = $Result.GetResult<Prisma.$PaymentLogPayload, S>

  type PaymentLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentLogCountAggregateInputType | true
    }

  export interface PaymentLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentLog'], meta: { name: 'PaymentLog' } }
    /**
     * Find zero or one PaymentLog that matches the filter.
     * @param {PaymentLogFindUniqueArgs} args - Arguments to find a PaymentLog
     * @example
     * // Get one PaymentLog
     * const paymentLog = await prisma.paymentLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentLogFindUniqueArgs>(args: SelectSubset<T, PaymentLogFindUniqueArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentLogFindUniqueOrThrowArgs} args - Arguments to find a PaymentLog
     * @example
     * // Get one PaymentLog
     * const paymentLog = await prisma.paymentLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentLogFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogFindFirstArgs} args - Arguments to find a PaymentLog
     * @example
     * // Get one PaymentLog
     * const paymentLog = await prisma.paymentLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentLogFindFirstArgs>(args?: SelectSubset<T, PaymentLogFindFirstArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogFindFirstOrThrowArgs} args - Arguments to find a PaymentLog
     * @example
     * // Get one PaymentLog
     * const paymentLog = await prisma.paymentLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentLogFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentLogs
     * const paymentLogs = await prisma.paymentLog.findMany()
     * 
     * // Get first 10 PaymentLogs
     * const paymentLogs = await prisma.paymentLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentLogWithIdOnly = await prisma.paymentLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentLogFindManyArgs>(args?: SelectSubset<T, PaymentLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentLog.
     * @param {PaymentLogCreateArgs} args - Arguments to create a PaymentLog.
     * @example
     * // Create one PaymentLog
     * const PaymentLog = await prisma.paymentLog.create({
     *   data: {
     *     // ... data to create a PaymentLog
     *   }
     * })
     * 
     */
    create<T extends PaymentLogCreateArgs>(args: SelectSubset<T, PaymentLogCreateArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentLogs.
     * @param {PaymentLogCreateManyArgs} args - Arguments to create many PaymentLogs.
     * @example
     * // Create many PaymentLogs
     * const paymentLog = await prisma.paymentLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentLogCreateManyArgs>(args?: SelectSubset<T, PaymentLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentLogs and returns the data saved in the database.
     * @param {PaymentLogCreateManyAndReturnArgs} args - Arguments to create many PaymentLogs.
     * @example
     * // Create many PaymentLogs
     * const paymentLog = await prisma.paymentLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentLogs and only return the `id`
     * const paymentLogWithIdOnly = await prisma.paymentLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentLogCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentLog.
     * @param {PaymentLogDeleteArgs} args - Arguments to delete one PaymentLog.
     * @example
     * // Delete one PaymentLog
     * const PaymentLog = await prisma.paymentLog.delete({
     *   where: {
     *     // ... filter to delete one PaymentLog
     *   }
     * })
     * 
     */
    delete<T extends PaymentLogDeleteArgs>(args: SelectSubset<T, PaymentLogDeleteArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentLog.
     * @param {PaymentLogUpdateArgs} args - Arguments to update one PaymentLog.
     * @example
     * // Update one PaymentLog
     * const paymentLog = await prisma.paymentLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentLogUpdateArgs>(args: SelectSubset<T, PaymentLogUpdateArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentLogs.
     * @param {PaymentLogDeleteManyArgs} args - Arguments to filter PaymentLogs to delete.
     * @example
     * // Delete a few PaymentLogs
     * const { count } = await prisma.paymentLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentLogDeleteManyArgs>(args?: SelectSubset<T, PaymentLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentLogs
     * const paymentLog = await prisma.paymentLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentLogUpdateManyArgs>(args: SelectSubset<T, PaymentLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentLogs and returns the data updated in the database.
     * @param {PaymentLogUpdateManyAndReturnArgs} args - Arguments to update many PaymentLogs.
     * @example
     * // Update many PaymentLogs
     * const paymentLog = await prisma.paymentLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentLogs and only return the `id`
     * const paymentLogWithIdOnly = await prisma.paymentLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentLogUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentLog.
     * @param {PaymentLogUpsertArgs} args - Arguments to update or create a PaymentLog.
     * @example
     * // Update or create a PaymentLog
     * const paymentLog = await prisma.paymentLog.upsert({
     *   create: {
     *     // ... data to create a PaymentLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentLog we want to update
     *   }
     * })
     */
    upsert<T extends PaymentLogUpsertArgs>(args: SelectSubset<T, PaymentLogUpsertArgs<ExtArgs>>): Prisma__PaymentLogClient<$Result.GetResult<Prisma.$PaymentLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogCountArgs} args - Arguments to filter PaymentLogs to count.
     * @example
     * // Count the number of PaymentLogs
     * const count = await prisma.paymentLog.count({
     *   where: {
     *     // ... the filter for the PaymentLogs we want to count
     *   }
     * })
    **/
    count<T extends PaymentLogCountArgs>(
      args?: Subset<T, PaymentLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentLogAggregateArgs>(args: Subset<T, PaymentLogAggregateArgs>): Prisma.PrismaPromise<GetPaymentLogAggregateType<T>>

    /**
     * Group by PaymentLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentLogGroupByArgs['orderBy'] }
        : { orderBy?: PaymentLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentLog model
   */
  readonly fields: PaymentLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentLog model
   */
  interface PaymentLogFieldRefs {
    readonly id: FieldRef<"PaymentLog", 'Int'>
    readonly timestamp: FieldRef<"PaymentLog", 'DateTime'>
    readonly logMessage: FieldRef<"PaymentLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PaymentLog findUnique
   */
  export type PaymentLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter, which PaymentLog to fetch.
     */
    where: PaymentLogWhereUniqueInput
  }

  /**
   * PaymentLog findUniqueOrThrow
   */
  export type PaymentLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter, which PaymentLog to fetch.
     */
    where: PaymentLogWhereUniqueInput
  }

  /**
   * PaymentLog findFirst
   */
  export type PaymentLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter, which PaymentLog to fetch.
     */
    where?: PaymentLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLogs to fetch.
     */
    orderBy?: PaymentLogOrderByWithRelationInput | PaymentLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentLogs.
     */
    cursor?: PaymentLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentLogs.
     */
    distinct?: PaymentLogScalarFieldEnum | PaymentLogScalarFieldEnum[]
  }

  /**
   * PaymentLog findFirstOrThrow
   */
  export type PaymentLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter, which PaymentLog to fetch.
     */
    where?: PaymentLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLogs to fetch.
     */
    orderBy?: PaymentLogOrderByWithRelationInput | PaymentLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentLogs.
     */
    cursor?: PaymentLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentLogs.
     */
    distinct?: PaymentLogScalarFieldEnum | PaymentLogScalarFieldEnum[]
  }

  /**
   * PaymentLog findMany
   */
  export type PaymentLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter, which PaymentLogs to fetch.
     */
    where?: PaymentLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLogs to fetch.
     */
    orderBy?: PaymentLogOrderByWithRelationInput | PaymentLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentLogs.
     */
    cursor?: PaymentLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLogs.
     */
    skip?: number
    distinct?: PaymentLogScalarFieldEnum | PaymentLogScalarFieldEnum[]
  }

  /**
   * PaymentLog create
   */
  export type PaymentLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentLog.
     */
    data: XOR<PaymentLogCreateInput, PaymentLogUncheckedCreateInput>
  }

  /**
   * PaymentLog createMany
   */
  export type PaymentLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentLogs.
     */
    data: PaymentLogCreateManyInput | PaymentLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentLog createManyAndReturn
   */
  export type PaymentLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentLogs.
     */
    data: PaymentLogCreateManyInput | PaymentLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentLog update
   */
  export type PaymentLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentLog.
     */
    data: XOR<PaymentLogUpdateInput, PaymentLogUncheckedUpdateInput>
    /**
     * Choose, which PaymentLog to update.
     */
    where: PaymentLogWhereUniqueInput
  }

  /**
   * PaymentLog updateMany
   */
  export type PaymentLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentLogs.
     */
    data: XOR<PaymentLogUpdateManyMutationInput, PaymentLogUncheckedUpdateManyInput>
    /**
     * Filter which PaymentLogs to update
     */
    where?: PaymentLogWhereInput
    /**
     * Limit how many PaymentLogs to update.
     */
    limit?: number
  }

  /**
   * PaymentLog updateManyAndReturn
   */
  export type PaymentLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * The data used to update PaymentLogs.
     */
    data: XOR<PaymentLogUpdateManyMutationInput, PaymentLogUncheckedUpdateManyInput>
    /**
     * Filter which PaymentLogs to update
     */
    where?: PaymentLogWhereInput
    /**
     * Limit how many PaymentLogs to update.
     */
    limit?: number
  }

  /**
   * PaymentLog upsert
   */
  export type PaymentLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentLog to update in case it exists.
     */
    where: PaymentLogWhereUniqueInput
    /**
     * In case the PaymentLog found by the `where` argument doesn't exist, create a new PaymentLog with this data.
     */
    create: XOR<PaymentLogCreateInput, PaymentLogUncheckedCreateInput>
    /**
     * In case the PaymentLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentLogUpdateInput, PaymentLogUncheckedUpdateInput>
  }

  /**
   * PaymentLog delete
   */
  export type PaymentLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
    /**
     * Filter which PaymentLog to delete.
     */
    where: PaymentLogWhereUniqueInput
  }

  /**
   * PaymentLog deleteMany
   */
  export type PaymentLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentLogs to delete
     */
    where?: PaymentLogWhereInput
    /**
     * Limit how many PaymentLogs to delete.
     */
    limit?: number
  }

  /**
   * PaymentLog without action
   */
  export type PaymentLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLog
     */
    select?: PaymentLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentLog
     */
    omit?: PaymentLogOmit<ExtArgs> | null
  }


  /**
   * Model PaymentMethod
   */

  export type AggregatePaymentMethod = {
    _count: PaymentMethodCountAggregateOutputType | null
    _avg: PaymentMethodAvgAggregateOutputType | null
    _sum: PaymentMethodSumAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  export type PaymentMethodAvgAggregateOutputType = {
    id: number | null
  }

  export type PaymentMethodSumAggregateOutputType = {
    id: number | null
  }

  export type PaymentMethodMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    deleted: boolean | null
  }

  export type PaymentMethodMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    deleted: boolean | null
  }

  export type PaymentMethodCountAggregateOutputType = {
    id: number
    name: number
    description: number
    deleted: number
    _all: number
  }


  export type PaymentMethodAvgAggregateInputType = {
    id?: true
  }

  export type PaymentMethodSumAggregateInputType = {
    id?: true
  }

  export type PaymentMethodMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
  }

  export type PaymentMethodMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
  }

  export type PaymentMethodCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
    _all?: true
  }

  export type PaymentMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethod to aggregate.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentMethods
    **/
    _count?: true | PaymentMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentMethodAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentMethodSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type GetPaymentMethodAggregateType<T extends PaymentMethodAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentMethod[P]>
      : GetScalarType<T[P], AggregatePaymentMethod[P]>
  }




  export type PaymentMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentMethodWhereInput
    orderBy?: PaymentMethodOrderByWithAggregationInput | PaymentMethodOrderByWithAggregationInput[]
    by: PaymentMethodScalarFieldEnum[] | PaymentMethodScalarFieldEnum
    having?: PaymentMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentMethodCountAggregateInputType | true
    _avg?: PaymentMethodAvgAggregateInputType
    _sum?: PaymentMethodSumAggregateInputType
    _min?: PaymentMethodMinAggregateInputType
    _max?: PaymentMethodMaxAggregateInputType
  }

  export type PaymentMethodGroupByOutputType = {
    id: number
    name: string
    description: string | null
    deleted: boolean
    _count: PaymentMethodCountAggregateOutputType | null
    _avg: PaymentMethodAvgAggregateOutputType | null
    _sum: PaymentMethodSumAggregateOutputType | null
    _min: PaymentMethodMinAggregateOutputType | null
    _max: PaymentMethodMaxAggregateOutputType | null
  }

  type GetPaymentMethodGroupByPayload<T extends PaymentMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentMethodGroupByOutputType[P]>
        }
      >
    >


  export type PaymentMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentMethod"]>

  export type PaymentMethodSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }

  export type PaymentMethodOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "deleted", ExtArgs["result"]["paymentMethod"]>

  export type $PaymentMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentMethod"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      deleted: boolean
    }, ExtArgs["result"]["paymentMethod"]>
    composites: {}
  }

  type PaymentMethodGetPayload<S extends boolean | null | undefined | PaymentMethodDefaultArgs> = $Result.GetResult<Prisma.$PaymentMethodPayload, S>

  type PaymentMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentMethodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentMethodCountAggregateInputType | true
    }

  export interface PaymentMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentMethod'], meta: { name: 'PaymentMethod' } }
    /**
     * Find zero or one PaymentMethod that matches the filter.
     * @param {PaymentMethodFindUniqueArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentMethodFindUniqueArgs>(args: SelectSubset<T, PaymentMethodFindUniqueArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentMethod that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentMethodFindUniqueOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentMethodFindFirstArgs>(args?: SelectSubset<T, PaymentMethodFindFirstArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindFirstOrThrowArgs} args - Arguments to find a PaymentMethod
     * @example
     * // Get one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany()
     * 
     * // Get first 10 PaymentMethods
     * const paymentMethods = await prisma.paymentMethod.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentMethodFindManyArgs>(args?: SelectSubset<T, PaymentMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentMethod.
     * @param {PaymentMethodCreateArgs} args - Arguments to create a PaymentMethod.
     * @example
     * // Create one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.create({
     *   data: {
     *     // ... data to create a PaymentMethod
     *   }
     * })
     * 
     */
    create<T extends PaymentMethodCreateArgs>(args: SelectSubset<T, PaymentMethodCreateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentMethods.
     * @param {PaymentMethodCreateManyArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentMethodCreateManyArgs>(args?: SelectSubset<T, PaymentMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentMethods and returns the data saved in the database.
     * @param {PaymentMethodCreateManyAndReturnArgs} args - Arguments to create many PaymentMethods.
     * @example
     * // Create many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentMethod.
     * @param {PaymentMethodDeleteArgs} args - Arguments to delete one PaymentMethod.
     * @example
     * // Delete one PaymentMethod
     * const PaymentMethod = await prisma.paymentMethod.delete({
     *   where: {
     *     // ... filter to delete one PaymentMethod
     *   }
     * })
     * 
     */
    delete<T extends PaymentMethodDeleteArgs>(args: SelectSubset<T, PaymentMethodDeleteArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentMethod.
     * @param {PaymentMethodUpdateArgs} args - Arguments to update one PaymentMethod.
     * @example
     * // Update one PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentMethodUpdateArgs>(args: SelectSubset<T, PaymentMethodUpdateArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentMethods.
     * @param {PaymentMethodDeleteManyArgs} args - Arguments to filter PaymentMethods to delete.
     * @example
     * // Delete a few PaymentMethods
     * const { count } = await prisma.paymentMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentMethodDeleteManyArgs>(args?: SelectSubset<T, PaymentMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentMethodUpdateManyArgs>(args: SelectSubset<T, PaymentMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentMethods and returns the data updated in the database.
     * @param {PaymentMethodUpdateManyAndReturnArgs} args - Arguments to update many PaymentMethods.
     * @example
     * // Update many PaymentMethods
     * const paymentMethod = await prisma.paymentMethod.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentMethods and only return the `id`
     * const paymentMethodWithIdOnly = await prisma.paymentMethod.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentMethodUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentMethodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentMethod.
     * @param {PaymentMethodUpsertArgs} args - Arguments to update or create a PaymentMethod.
     * @example
     * // Update or create a PaymentMethod
     * const paymentMethod = await prisma.paymentMethod.upsert({
     *   create: {
     *     // ... data to create a PaymentMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentMethod we want to update
     *   }
     * })
     */
    upsert<T extends PaymentMethodUpsertArgs>(args: SelectSubset<T, PaymentMethodUpsertArgs<ExtArgs>>): Prisma__PaymentMethodClient<$Result.GetResult<Prisma.$PaymentMethodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodCountArgs} args - Arguments to filter PaymentMethods to count.
     * @example
     * // Count the number of PaymentMethods
     * const count = await prisma.paymentMethod.count({
     *   where: {
     *     // ... the filter for the PaymentMethods we want to count
     *   }
     * })
    **/
    count<T extends PaymentMethodCountArgs>(
      args?: Subset<T, PaymentMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentMethodAggregateArgs>(args: Subset<T, PaymentMethodAggregateArgs>): Prisma.PrismaPromise<GetPaymentMethodAggregateType<T>>

    /**
     * Group by PaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentMethodGroupByArgs['orderBy'] }
        : { orderBy?: PaymentMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentMethod model
   */
  readonly fields: PaymentMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentMethod model
   */
  interface PaymentMethodFieldRefs {
    readonly id: FieldRef<"PaymentMethod", 'Int'>
    readonly name: FieldRef<"PaymentMethod", 'String'>
    readonly description: FieldRef<"PaymentMethod", 'String'>
    readonly deleted: FieldRef<"PaymentMethod", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PaymentMethod findUnique
   */
  export type PaymentMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findUniqueOrThrow
   */
  export type PaymentMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod findFirst
   */
  export type PaymentMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findFirstOrThrow
   */
  export type PaymentMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter, which PaymentMethod to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentMethods.
     */
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod findMany
   */
  export type PaymentMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter, which PaymentMethods to fetch.
     */
    where?: PaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentMethods to fetch.
     */
    orderBy?: PaymentMethodOrderByWithRelationInput | PaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentMethods.
     */
    cursor?: PaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentMethods.
     */
    skip?: number
    distinct?: PaymentMethodScalarFieldEnum | PaymentMethodScalarFieldEnum[]
  }

  /**
   * PaymentMethod create
   */
  export type PaymentMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentMethod.
     */
    data: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
  }

  /**
   * PaymentMethod createMany
   */
  export type PaymentMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentMethod createManyAndReturn
   */
  export type PaymentMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentMethods.
     */
    data: PaymentMethodCreateManyInput | PaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentMethod update
   */
  export type PaymentMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentMethod.
     */
    data: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
    /**
     * Choose, which PaymentMethod to update.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod updateMany
   */
  export type PaymentMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
  }

  /**
   * PaymentMethod updateManyAndReturn
   */
  export type PaymentMethodUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The data used to update PaymentMethods.
     */
    data: XOR<PaymentMethodUpdateManyMutationInput, PaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which PaymentMethods to update
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to update.
     */
    limit?: number
  }

  /**
   * PaymentMethod upsert
   */
  export type PaymentMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentMethod to update in case it exists.
     */
    where: PaymentMethodWhereUniqueInput
    /**
     * In case the PaymentMethod found by the `where` argument doesn't exist, create a new PaymentMethod with this data.
     */
    create: XOR<PaymentMethodCreateInput, PaymentMethodUncheckedCreateInput>
    /**
     * In case the PaymentMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentMethodUpdateInput, PaymentMethodUncheckedUpdateInput>
  }

  /**
   * PaymentMethod delete
   */
  export type PaymentMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
    /**
     * Filter which PaymentMethod to delete.
     */
    where: PaymentMethodWhereUniqueInput
  }

  /**
   * PaymentMethod deleteMany
   */
  export type PaymentMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentMethods to delete
     */
    where?: PaymentMethodWhereInput
    /**
     * Limit how many PaymentMethods to delete.
     */
    limit?: number
  }

  /**
   * PaymentMethod without action
   */
  export type PaymentMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentMethod
     */
    select?: PaymentMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentMethod
     */
    omit?: PaymentMethodOmit<ExtArgs> | null
  }


  /**
   * Model PaymentStatus
   */

  export type AggregatePaymentStatus = {
    _count: PaymentStatusCountAggregateOutputType | null
    _avg: PaymentStatusAvgAggregateOutputType | null
    _sum: PaymentStatusSumAggregateOutputType | null
    _min: PaymentStatusMinAggregateOutputType | null
    _max: PaymentStatusMaxAggregateOutputType | null
  }

  export type PaymentStatusAvgAggregateOutputType = {
    id: number | null
  }

  export type PaymentStatusSumAggregateOutputType = {
    id: number | null
  }

  export type PaymentStatusMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    deleted: boolean | null
  }

  export type PaymentStatusMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    deleted: boolean | null
  }

  export type PaymentStatusCountAggregateOutputType = {
    id: number
    name: number
    description: number
    deleted: number
    _all: number
  }


  export type PaymentStatusAvgAggregateInputType = {
    id?: true
  }

  export type PaymentStatusSumAggregateInputType = {
    id?: true
  }

  export type PaymentStatusMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
  }

  export type PaymentStatusMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
  }

  export type PaymentStatusCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    deleted?: true
    _all?: true
  }

  export type PaymentStatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentStatus to aggregate.
     */
    where?: PaymentStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentStatuses to fetch.
     */
    orderBy?: PaymentStatusOrderByWithRelationInput | PaymentStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentStatuses
    **/
    _count?: true | PaymentStatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentStatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentStatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentStatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentStatusMaxAggregateInputType
  }

  export type GetPaymentStatusAggregateType<T extends PaymentStatusAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentStatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentStatus[P]>
      : GetScalarType<T[P], AggregatePaymentStatus[P]>
  }




  export type PaymentStatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentStatusWhereInput
    orderBy?: PaymentStatusOrderByWithAggregationInput | PaymentStatusOrderByWithAggregationInput[]
    by: PaymentStatusScalarFieldEnum[] | PaymentStatusScalarFieldEnum
    having?: PaymentStatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentStatusCountAggregateInputType | true
    _avg?: PaymentStatusAvgAggregateInputType
    _sum?: PaymentStatusSumAggregateInputType
    _min?: PaymentStatusMinAggregateInputType
    _max?: PaymentStatusMaxAggregateInputType
  }

  export type PaymentStatusGroupByOutputType = {
    id: number
    name: string
    description: string | null
    deleted: boolean
    _count: PaymentStatusCountAggregateOutputType | null
    _avg: PaymentStatusAvgAggregateOutputType | null
    _sum: PaymentStatusSumAggregateOutputType | null
    _min: PaymentStatusMinAggregateOutputType | null
    _max: PaymentStatusMaxAggregateOutputType | null
  }

  type GetPaymentStatusGroupByPayload<T extends PaymentStatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentStatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentStatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentStatusGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentStatusGroupByOutputType[P]>
        }
      >
    >


  export type PaymentStatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentStatus"]>

  export type PaymentStatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentStatus"]>

  export type PaymentStatusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["paymentStatus"]>

  export type PaymentStatusSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    deleted?: boolean
  }

  export type PaymentStatusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "deleted", ExtArgs["result"]["paymentStatus"]>

  export type $PaymentStatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentStatus"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      deleted: boolean
    }, ExtArgs["result"]["paymentStatus"]>
    composites: {}
  }

  type PaymentStatusGetPayload<S extends boolean | null | undefined | PaymentStatusDefaultArgs> = $Result.GetResult<Prisma.$PaymentStatusPayload, S>

  type PaymentStatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentStatusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentStatusCountAggregateInputType | true
    }

  export interface PaymentStatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentStatus'], meta: { name: 'PaymentStatus' } }
    /**
     * Find zero or one PaymentStatus that matches the filter.
     * @param {PaymentStatusFindUniqueArgs} args - Arguments to find a PaymentStatus
     * @example
     * // Get one PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentStatusFindUniqueArgs>(args: SelectSubset<T, PaymentStatusFindUniqueArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentStatus that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentStatusFindUniqueOrThrowArgs} args - Arguments to find a PaymentStatus
     * @example
     * // Get one PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentStatusFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentStatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentStatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusFindFirstArgs} args - Arguments to find a PaymentStatus
     * @example
     * // Get one PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentStatusFindFirstArgs>(args?: SelectSubset<T, PaymentStatusFindFirstArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentStatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusFindFirstOrThrowArgs} args - Arguments to find a PaymentStatus
     * @example
     * // Get one PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentStatusFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentStatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentStatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentStatuses
     * const paymentStatuses = await prisma.paymentStatus.findMany()
     * 
     * // Get first 10 PaymentStatuses
     * const paymentStatuses = await prisma.paymentStatus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentStatusWithIdOnly = await prisma.paymentStatus.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentStatusFindManyArgs>(args?: SelectSubset<T, PaymentStatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentStatus.
     * @param {PaymentStatusCreateArgs} args - Arguments to create a PaymentStatus.
     * @example
     * // Create one PaymentStatus
     * const PaymentStatus = await prisma.paymentStatus.create({
     *   data: {
     *     // ... data to create a PaymentStatus
     *   }
     * })
     * 
     */
    create<T extends PaymentStatusCreateArgs>(args: SelectSubset<T, PaymentStatusCreateArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentStatuses.
     * @param {PaymentStatusCreateManyArgs} args - Arguments to create many PaymentStatuses.
     * @example
     * // Create many PaymentStatuses
     * const paymentStatus = await prisma.paymentStatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentStatusCreateManyArgs>(args?: SelectSubset<T, PaymentStatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentStatuses and returns the data saved in the database.
     * @param {PaymentStatusCreateManyAndReturnArgs} args - Arguments to create many PaymentStatuses.
     * @example
     * // Create many PaymentStatuses
     * const paymentStatus = await prisma.paymentStatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentStatuses and only return the `id`
     * const paymentStatusWithIdOnly = await prisma.paymentStatus.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentStatusCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentStatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentStatus.
     * @param {PaymentStatusDeleteArgs} args - Arguments to delete one PaymentStatus.
     * @example
     * // Delete one PaymentStatus
     * const PaymentStatus = await prisma.paymentStatus.delete({
     *   where: {
     *     // ... filter to delete one PaymentStatus
     *   }
     * })
     * 
     */
    delete<T extends PaymentStatusDeleteArgs>(args: SelectSubset<T, PaymentStatusDeleteArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentStatus.
     * @param {PaymentStatusUpdateArgs} args - Arguments to update one PaymentStatus.
     * @example
     * // Update one PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentStatusUpdateArgs>(args: SelectSubset<T, PaymentStatusUpdateArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentStatuses.
     * @param {PaymentStatusDeleteManyArgs} args - Arguments to filter PaymentStatuses to delete.
     * @example
     * // Delete a few PaymentStatuses
     * const { count } = await prisma.paymentStatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentStatusDeleteManyArgs>(args?: SelectSubset<T, PaymentStatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentStatuses
     * const paymentStatus = await prisma.paymentStatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentStatusUpdateManyArgs>(args: SelectSubset<T, PaymentStatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentStatuses and returns the data updated in the database.
     * @param {PaymentStatusUpdateManyAndReturnArgs} args - Arguments to update many PaymentStatuses.
     * @example
     * // Update many PaymentStatuses
     * const paymentStatus = await prisma.paymentStatus.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentStatuses and only return the `id`
     * const paymentStatusWithIdOnly = await prisma.paymentStatus.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentStatusUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentStatusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentStatus.
     * @param {PaymentStatusUpsertArgs} args - Arguments to update or create a PaymentStatus.
     * @example
     * // Update or create a PaymentStatus
     * const paymentStatus = await prisma.paymentStatus.upsert({
     *   create: {
     *     // ... data to create a PaymentStatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentStatus we want to update
     *   }
     * })
     */
    upsert<T extends PaymentStatusUpsertArgs>(args: SelectSubset<T, PaymentStatusUpsertArgs<ExtArgs>>): Prisma__PaymentStatusClient<$Result.GetResult<Prisma.$PaymentStatusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusCountArgs} args - Arguments to filter PaymentStatuses to count.
     * @example
     * // Count the number of PaymentStatuses
     * const count = await prisma.paymentStatus.count({
     *   where: {
     *     // ... the filter for the PaymentStatuses we want to count
     *   }
     * })
    **/
    count<T extends PaymentStatusCountArgs>(
      args?: Subset<T, PaymentStatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentStatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentStatusAggregateArgs>(args: Subset<T, PaymentStatusAggregateArgs>): Prisma.PrismaPromise<GetPaymentStatusAggregateType<T>>

    /**
     * Group by PaymentStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentStatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentStatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentStatusGroupByArgs['orderBy'] }
        : { orderBy?: PaymentStatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentStatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentStatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentStatus model
   */
  readonly fields: PaymentStatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentStatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentStatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentStatus model
   */
  interface PaymentStatusFieldRefs {
    readonly id: FieldRef<"PaymentStatus", 'Int'>
    readonly name: FieldRef<"PaymentStatus", 'String'>
    readonly description: FieldRef<"PaymentStatus", 'String'>
    readonly deleted: FieldRef<"PaymentStatus", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PaymentStatus findUnique
   */
  export type PaymentStatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter, which PaymentStatus to fetch.
     */
    where: PaymentStatusWhereUniqueInput
  }

  /**
   * PaymentStatus findUniqueOrThrow
   */
  export type PaymentStatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter, which PaymentStatus to fetch.
     */
    where: PaymentStatusWhereUniqueInput
  }

  /**
   * PaymentStatus findFirst
   */
  export type PaymentStatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter, which PaymentStatus to fetch.
     */
    where?: PaymentStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentStatuses to fetch.
     */
    orderBy?: PaymentStatusOrderByWithRelationInput | PaymentStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentStatuses.
     */
    cursor?: PaymentStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentStatuses.
     */
    distinct?: PaymentStatusScalarFieldEnum | PaymentStatusScalarFieldEnum[]
  }

  /**
   * PaymentStatus findFirstOrThrow
   */
  export type PaymentStatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter, which PaymentStatus to fetch.
     */
    where?: PaymentStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentStatuses to fetch.
     */
    orderBy?: PaymentStatusOrderByWithRelationInput | PaymentStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentStatuses.
     */
    cursor?: PaymentStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentStatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentStatuses.
     */
    distinct?: PaymentStatusScalarFieldEnum | PaymentStatusScalarFieldEnum[]
  }

  /**
   * PaymentStatus findMany
   */
  export type PaymentStatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter, which PaymentStatuses to fetch.
     */
    where?: PaymentStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentStatuses to fetch.
     */
    orderBy?: PaymentStatusOrderByWithRelationInput | PaymentStatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentStatuses.
     */
    cursor?: PaymentStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentStatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentStatuses.
     */
    skip?: number
    distinct?: PaymentStatusScalarFieldEnum | PaymentStatusScalarFieldEnum[]
  }

  /**
   * PaymentStatus create
   */
  export type PaymentStatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentStatus.
     */
    data: XOR<PaymentStatusCreateInput, PaymentStatusUncheckedCreateInput>
  }

  /**
   * PaymentStatus createMany
   */
  export type PaymentStatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentStatuses.
     */
    data: PaymentStatusCreateManyInput | PaymentStatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentStatus createManyAndReturn
   */
  export type PaymentStatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentStatuses.
     */
    data: PaymentStatusCreateManyInput | PaymentStatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentStatus update
   */
  export type PaymentStatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentStatus.
     */
    data: XOR<PaymentStatusUpdateInput, PaymentStatusUncheckedUpdateInput>
    /**
     * Choose, which PaymentStatus to update.
     */
    where: PaymentStatusWhereUniqueInput
  }

  /**
   * PaymentStatus updateMany
   */
  export type PaymentStatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentStatuses.
     */
    data: XOR<PaymentStatusUpdateManyMutationInput, PaymentStatusUncheckedUpdateManyInput>
    /**
     * Filter which PaymentStatuses to update
     */
    where?: PaymentStatusWhereInput
    /**
     * Limit how many PaymentStatuses to update.
     */
    limit?: number
  }

  /**
   * PaymentStatus updateManyAndReturn
   */
  export type PaymentStatusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * The data used to update PaymentStatuses.
     */
    data: XOR<PaymentStatusUpdateManyMutationInput, PaymentStatusUncheckedUpdateManyInput>
    /**
     * Filter which PaymentStatuses to update
     */
    where?: PaymentStatusWhereInput
    /**
     * Limit how many PaymentStatuses to update.
     */
    limit?: number
  }

  /**
   * PaymentStatus upsert
   */
  export type PaymentStatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentStatus to update in case it exists.
     */
    where: PaymentStatusWhereUniqueInput
    /**
     * In case the PaymentStatus found by the `where` argument doesn't exist, create a new PaymentStatus with this data.
     */
    create: XOR<PaymentStatusCreateInput, PaymentStatusUncheckedCreateInput>
    /**
     * In case the PaymentStatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentStatusUpdateInput, PaymentStatusUncheckedUpdateInput>
  }

  /**
   * PaymentStatus delete
   */
  export type PaymentStatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
    /**
     * Filter which PaymentStatus to delete.
     */
    where: PaymentStatusWhereUniqueInput
  }

  /**
   * PaymentStatus deleteMany
   */
  export type PaymentStatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentStatuses to delete
     */
    where?: PaymentStatusWhereInput
    /**
     * Limit how many PaymentStatuses to delete.
     */
    limit?: number
  }

  /**
   * PaymentStatus without action
   */
  export type PaymentStatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentStatus
     */
    select?: PaymentStatusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentStatus
     */
    omit?: PaymentStatusOmit<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    id: number | null
    price: Decimal | null
    stockAlertAt: number | null
    stockQuantity: number | null
  }

  export type ProductSumAggregateOutputType = {
    id: number | null
    price: Decimal | null
    stockAlertAt: number | null
    stockQuantity: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: number | null
    name: string | null
    price: Decimal | null
    imageUrl: string | null
    variant: string | null
    sku: string | null
    barcode: string | null
    qrCodeUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    description: string | null
    tenantId: string | null
    archivedAt: Date | null
    category: string | null
    isActive: boolean | null
    metaDesc: string | null
    metaTitle: string | null
    primaryIdentifierType: $Enums.ProductIdentifierType | null
    primaryIdentifierValue: string | null
    stockAlertAt: number | null
    stockQuantity: number | null
    unit: string | null
    visibility: string | null
    slug: string | null
    deleted: boolean | null
  }

  export type ProductMaxAggregateOutputType = {
    id: number | null
    name: string | null
    price: Decimal | null
    imageUrl: string | null
    variant: string | null
    sku: string | null
    barcode: string | null
    qrCodeUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdById: string | null
    updatedById: string | null
    description: string | null
    tenantId: string | null
    archivedAt: Date | null
    category: string | null
    isActive: boolean | null
    metaDesc: string | null
    metaTitle: string | null
    primaryIdentifierType: $Enums.ProductIdentifierType | null
    primaryIdentifierValue: string | null
    stockAlertAt: number | null
    stockQuantity: number | null
    unit: string | null
    visibility: string | null
    slug: string | null
    deleted: boolean | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    price: number
    imageUrl: number
    variant: number
    sku: number
    barcode: number
    qrCodeUrl: number
    createdAt: number
    updatedAt: number
    createdById: number
    updatedById: number
    description: number
    tenantId: number
    archivedAt: number
    category: number
    isActive: number
    metaDesc: number
    metaTitle: number
    metadata: number
    primaryIdentifierType: number
    primaryIdentifierValue: number
    stockAlertAt: number
    stockQuantity: number
    tags: number
    unit: number
    visibility: number
    slug: number
    deleted: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    id?: true
    price?: true
    stockAlertAt?: true
    stockQuantity?: true
  }

  export type ProductSumAggregateInputType = {
    id?: true
    price?: true
    stockAlertAt?: true
    stockQuantity?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    price?: true
    imageUrl?: true
    variant?: true
    sku?: true
    barcode?: true
    qrCodeUrl?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    description?: true
    tenantId?: true
    archivedAt?: true
    category?: true
    isActive?: true
    metaDesc?: true
    metaTitle?: true
    primaryIdentifierType?: true
    primaryIdentifierValue?: true
    stockAlertAt?: true
    stockQuantity?: true
    unit?: true
    visibility?: true
    slug?: true
    deleted?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    price?: true
    imageUrl?: true
    variant?: true
    sku?: true
    barcode?: true
    qrCodeUrl?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    description?: true
    tenantId?: true
    archivedAt?: true
    category?: true
    isActive?: true
    metaDesc?: true
    metaTitle?: true
    primaryIdentifierType?: true
    primaryIdentifierValue?: true
    stockAlertAt?: true
    stockQuantity?: true
    unit?: true
    visibility?: true
    slug?: true
    deleted?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    price?: true
    imageUrl?: true
    variant?: true
    sku?: true
    barcode?: true
    qrCodeUrl?: true
    createdAt?: true
    updatedAt?: true
    createdById?: true
    updatedById?: true
    description?: true
    tenantId?: true
    archivedAt?: true
    category?: true
    isActive?: true
    metaDesc?: true
    metaTitle?: true
    metadata?: true
    primaryIdentifierType?: true
    primaryIdentifierValue?: true
    stockAlertAt?: true
    stockQuantity?: true
    tags?: true
    unit?: true
    visibility?: true
    slug?: true
    deleted?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: number
    name: string
    price: Decimal
    imageUrl: string | null
    variant: string | null
    sku: string | null
    barcode: string | null
    qrCodeUrl: string | null
    createdAt: Date
    updatedAt: Date
    createdById: string
    updatedById: string
    description: string | null
    tenantId: string
    archivedAt: Date | null
    category: string | null
    isActive: boolean
    metaDesc: string | null
    metaTitle: string | null
    metadata: JsonValue | null
    primaryIdentifierType: $Enums.ProductIdentifierType | null
    primaryIdentifierValue: string | null
    stockAlertAt: number | null
    stockQuantity: number
    tags: string[]
    unit: string | null
    visibility: string
    slug: string | null
    deleted: boolean
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    imageUrl?: boolean
    variant?: boolean
    sku?: boolean
    barcode?: boolean
    qrCodeUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    description?: boolean
    tenantId?: boolean
    archivedAt?: boolean
    category?: boolean
    isActive?: boolean
    metaDesc?: boolean
    metaTitle?: boolean
    metadata?: boolean
    primaryIdentifierType?: boolean
    primaryIdentifierValue?: boolean
    stockAlertAt?: boolean
    stockQuantity?: boolean
    tags?: boolean
    unit?: boolean
    visibility?: boolean
    slug?: boolean
    deleted?: boolean
    InvoiceDetail?: boolean | Product$InvoiceDetailArgs<ExtArgs>
    OrderItem?: boolean | Product$OrderItemArgs<ExtArgs>
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    ProductIdentifier?: boolean | Product$ProductIdentifierArgs<ExtArgs>
    ProductVariant?: boolean | Product$ProductVariantArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    imageUrl?: boolean
    variant?: boolean
    sku?: boolean
    barcode?: boolean
    qrCodeUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    description?: boolean
    tenantId?: boolean
    archivedAt?: boolean
    category?: boolean
    isActive?: boolean
    metaDesc?: boolean
    metaTitle?: boolean
    metadata?: boolean
    primaryIdentifierType?: boolean
    primaryIdentifierValue?: boolean
    stockAlertAt?: boolean
    stockQuantity?: boolean
    tags?: boolean
    unit?: boolean
    visibility?: boolean
    slug?: boolean
    deleted?: boolean
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    price?: boolean
    imageUrl?: boolean
    variant?: boolean
    sku?: boolean
    barcode?: boolean
    qrCodeUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    description?: boolean
    tenantId?: boolean
    archivedAt?: boolean
    category?: boolean
    isActive?: boolean
    metaDesc?: boolean
    metaTitle?: boolean
    metadata?: boolean
    primaryIdentifierType?: boolean
    primaryIdentifierValue?: boolean
    stockAlertAt?: boolean
    stockQuantity?: boolean
    tags?: boolean
    unit?: boolean
    visibility?: boolean
    slug?: boolean
    deleted?: boolean
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    price?: boolean
    imageUrl?: boolean
    variant?: boolean
    sku?: boolean
    barcode?: boolean
    qrCodeUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    description?: boolean
    tenantId?: boolean
    archivedAt?: boolean
    category?: boolean
    isActive?: boolean
    metaDesc?: boolean
    metaTitle?: boolean
    metadata?: boolean
    primaryIdentifierType?: boolean
    primaryIdentifierValue?: boolean
    stockAlertAt?: boolean
    stockQuantity?: boolean
    tags?: boolean
    unit?: boolean
    visibility?: boolean
    slug?: boolean
    deleted?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "price" | "imageUrl" | "variant" | "sku" | "barcode" | "qrCodeUrl" | "createdAt" | "updatedAt" | "createdById" | "updatedById" | "description" | "tenantId" | "archivedAt" | "category" | "isActive" | "metaDesc" | "metaTitle" | "metadata" | "primaryIdentifierType" | "primaryIdentifierValue" | "stockAlertAt" | "stockQuantity" | "tags" | "unit" | "visibility" | "slug" | "deleted", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InvoiceDetail?: boolean | Product$InvoiceDetailArgs<ExtArgs>
    OrderItem?: boolean | Product$OrderItemArgs<ExtArgs>
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    ProductIdentifier?: boolean | Product$ProductIdentifierArgs<ExtArgs>
    ProductVariant?: boolean | Product$ProductVariantArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Product_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User_Product_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      InvoiceDetail: Prisma.$InvoiceDetailPayload<ExtArgs>[]
      OrderItem: Prisma.$OrderItemPayload<ExtArgs>[]
      User_Product_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Tenant: Prisma.$TenantPayload<ExtArgs>
      User_Product_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
      ProductIdentifier: Prisma.$ProductIdentifierPayload<ExtArgs>[]
      ProductVariant: Prisma.$ProductVariantPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      price: Prisma.Decimal
      imageUrl: string | null
      variant: string | null
      sku: string | null
      barcode: string | null
      qrCodeUrl: string | null
      createdAt: Date
      updatedAt: Date
      createdById: string
      updatedById: string
      description: string | null
      tenantId: string
      archivedAt: Date | null
      category: string | null
      isActive: boolean
      metaDesc: string | null
      metaTitle: string | null
      metadata: Prisma.JsonValue | null
      primaryIdentifierType: $Enums.ProductIdentifierType | null
      primaryIdentifierValue: string | null
      stockAlertAt: number | null
      stockQuantity: number
      tags: string[]
      unit: string | null
      visibility: string
      slug: string | null
      deleted: boolean
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InvoiceDetail<T extends Product$InvoiceDetailArgs<ExtArgs> = {}>(args?: Subset<T, Product$InvoiceDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    OrderItem<T extends Product$OrderItemArgs<ExtArgs> = {}>(args?: Subset<T, Product$OrderItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_Product_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Product_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProductIdentifier<T extends Product$ProductIdentifierArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductIdentifierArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProductVariant<T extends Product$ProductVariantArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductVariantArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'Int'>
    readonly name: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Decimal'>
    readonly imageUrl: FieldRef<"Product", 'String'>
    readonly variant: FieldRef<"Product", 'String'>
    readonly sku: FieldRef<"Product", 'String'>
    readonly barcode: FieldRef<"Product", 'String'>
    readonly qrCodeUrl: FieldRef<"Product", 'String'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly createdById: FieldRef<"Product", 'String'>
    readonly updatedById: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly tenantId: FieldRef<"Product", 'String'>
    readonly archivedAt: FieldRef<"Product", 'DateTime'>
    readonly category: FieldRef<"Product", 'String'>
    readonly isActive: FieldRef<"Product", 'Boolean'>
    readonly metaDesc: FieldRef<"Product", 'String'>
    readonly metaTitle: FieldRef<"Product", 'String'>
    readonly metadata: FieldRef<"Product", 'Json'>
    readonly primaryIdentifierType: FieldRef<"Product", 'ProductIdentifierType'>
    readonly primaryIdentifierValue: FieldRef<"Product", 'String'>
    readonly stockAlertAt: FieldRef<"Product", 'Int'>
    readonly stockQuantity: FieldRef<"Product", 'Int'>
    readonly tags: FieldRef<"Product", 'String[]'>
    readonly unit: FieldRef<"Product", 'String'>
    readonly visibility: FieldRef<"Product", 'String'>
    readonly slug: FieldRef<"Product", 'String'>
    readonly deleted: FieldRef<"Product", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.InvoiceDetail
   */
  export type Product$InvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    where?: InvoiceDetailWhereInput
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    cursor?: InvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * Product.OrderItem
   */
  export type Product$OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Product.ProductIdentifier
   */
  export type Product$ProductIdentifierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    where?: ProductIdentifierWhereInput
    orderBy?: ProductIdentifierOrderByWithRelationInput | ProductIdentifierOrderByWithRelationInput[]
    cursor?: ProductIdentifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductIdentifierScalarFieldEnum | ProductIdentifierScalarFieldEnum[]
  }

  /**
   * Product.ProductVariant
   */
  export type Product$ProductVariantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    cursor?: ProductVariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductIdentifier
   */

  export type AggregateProductIdentifier = {
    _count: ProductIdentifierCountAggregateOutputType | null
    _avg: ProductIdentifierAvgAggregateOutputType | null
    _sum: ProductIdentifierSumAggregateOutputType | null
    _min: ProductIdentifierMinAggregateOutputType | null
    _max: ProductIdentifierMaxAggregateOutputType | null
  }

  export type ProductIdentifierAvgAggregateOutputType = {
    id: number | null
    productId: number | null
  }

  export type ProductIdentifierSumAggregateOutputType = {
    id: number | null
    productId: number | null
  }

  export type ProductIdentifierMinAggregateOutputType = {
    id: number | null
    productId: number | null
    type: $Enums.ProductIdentifierType | null
    value: string | null
    imageUrl: string | null
  }

  export type ProductIdentifierMaxAggregateOutputType = {
    id: number | null
    productId: number | null
    type: $Enums.ProductIdentifierType | null
    value: string | null
    imageUrl: string | null
  }

  export type ProductIdentifierCountAggregateOutputType = {
    id: number
    productId: number
    type: number
    value: number
    imageUrl: number
    _all: number
  }


  export type ProductIdentifierAvgAggregateInputType = {
    id?: true
    productId?: true
  }

  export type ProductIdentifierSumAggregateInputType = {
    id?: true
    productId?: true
  }

  export type ProductIdentifierMinAggregateInputType = {
    id?: true
    productId?: true
    type?: true
    value?: true
    imageUrl?: true
  }

  export type ProductIdentifierMaxAggregateInputType = {
    id?: true
    productId?: true
    type?: true
    value?: true
    imageUrl?: true
  }

  export type ProductIdentifierCountAggregateInputType = {
    id?: true
    productId?: true
    type?: true
    value?: true
    imageUrl?: true
    _all?: true
  }

  export type ProductIdentifierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductIdentifier to aggregate.
     */
    where?: ProductIdentifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductIdentifiers to fetch.
     */
    orderBy?: ProductIdentifierOrderByWithRelationInput | ProductIdentifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductIdentifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductIdentifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductIdentifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductIdentifiers
    **/
    _count?: true | ProductIdentifierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductIdentifierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductIdentifierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductIdentifierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductIdentifierMaxAggregateInputType
  }

  export type GetProductIdentifierAggregateType<T extends ProductIdentifierAggregateArgs> = {
        [P in keyof T & keyof AggregateProductIdentifier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductIdentifier[P]>
      : GetScalarType<T[P], AggregateProductIdentifier[P]>
  }




  export type ProductIdentifierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductIdentifierWhereInput
    orderBy?: ProductIdentifierOrderByWithAggregationInput | ProductIdentifierOrderByWithAggregationInput[]
    by: ProductIdentifierScalarFieldEnum[] | ProductIdentifierScalarFieldEnum
    having?: ProductIdentifierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductIdentifierCountAggregateInputType | true
    _avg?: ProductIdentifierAvgAggregateInputType
    _sum?: ProductIdentifierSumAggregateInputType
    _min?: ProductIdentifierMinAggregateInputType
    _max?: ProductIdentifierMaxAggregateInputType
  }

  export type ProductIdentifierGroupByOutputType = {
    id: number
    productId: number
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl: string | null
    _count: ProductIdentifierCountAggregateOutputType | null
    _avg: ProductIdentifierAvgAggregateOutputType | null
    _sum: ProductIdentifierSumAggregateOutputType | null
    _min: ProductIdentifierMinAggregateOutputType | null
    _max: ProductIdentifierMaxAggregateOutputType | null
  }

  type GetProductIdentifierGroupByPayload<T extends ProductIdentifierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductIdentifierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductIdentifierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductIdentifierGroupByOutputType[P]>
            : GetScalarType<T[P], ProductIdentifierGroupByOutputType[P]>
        }
      >
    >


  export type ProductIdentifierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    type?: boolean
    value?: boolean
    imageUrl?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productIdentifier"]>

  export type ProductIdentifierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    type?: boolean
    value?: boolean
    imageUrl?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productIdentifier"]>

  export type ProductIdentifierSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    type?: boolean
    value?: boolean
    imageUrl?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productIdentifier"]>

  export type ProductIdentifierSelectScalar = {
    id?: boolean
    productId?: boolean
    type?: boolean
    value?: boolean
    imageUrl?: boolean
  }

  export type ProductIdentifierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "type" | "value" | "imageUrl", ExtArgs["result"]["productIdentifier"]>
  export type ProductIdentifierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductIdentifierIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductIdentifierIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductIdentifierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductIdentifier"
    objects: {
      Product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: number
      type: $Enums.ProductIdentifierType
      value: string
      imageUrl: string | null
    }, ExtArgs["result"]["productIdentifier"]>
    composites: {}
  }

  type ProductIdentifierGetPayload<S extends boolean | null | undefined | ProductIdentifierDefaultArgs> = $Result.GetResult<Prisma.$ProductIdentifierPayload, S>

  type ProductIdentifierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductIdentifierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductIdentifierCountAggregateInputType | true
    }

  export interface ProductIdentifierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductIdentifier'], meta: { name: 'ProductIdentifier' } }
    /**
     * Find zero or one ProductIdentifier that matches the filter.
     * @param {ProductIdentifierFindUniqueArgs} args - Arguments to find a ProductIdentifier
     * @example
     * // Get one ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductIdentifierFindUniqueArgs>(args: SelectSubset<T, ProductIdentifierFindUniqueArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductIdentifier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductIdentifierFindUniqueOrThrowArgs} args - Arguments to find a ProductIdentifier
     * @example
     * // Get one ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductIdentifierFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductIdentifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductIdentifier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierFindFirstArgs} args - Arguments to find a ProductIdentifier
     * @example
     * // Get one ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductIdentifierFindFirstArgs>(args?: SelectSubset<T, ProductIdentifierFindFirstArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductIdentifier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierFindFirstOrThrowArgs} args - Arguments to find a ProductIdentifier
     * @example
     * // Get one ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductIdentifierFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductIdentifierFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductIdentifiers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductIdentifiers
     * const productIdentifiers = await prisma.productIdentifier.findMany()
     * 
     * // Get first 10 ProductIdentifiers
     * const productIdentifiers = await prisma.productIdentifier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productIdentifierWithIdOnly = await prisma.productIdentifier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductIdentifierFindManyArgs>(args?: SelectSubset<T, ProductIdentifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductIdentifier.
     * @param {ProductIdentifierCreateArgs} args - Arguments to create a ProductIdentifier.
     * @example
     * // Create one ProductIdentifier
     * const ProductIdentifier = await prisma.productIdentifier.create({
     *   data: {
     *     // ... data to create a ProductIdentifier
     *   }
     * })
     * 
     */
    create<T extends ProductIdentifierCreateArgs>(args: SelectSubset<T, ProductIdentifierCreateArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductIdentifiers.
     * @param {ProductIdentifierCreateManyArgs} args - Arguments to create many ProductIdentifiers.
     * @example
     * // Create many ProductIdentifiers
     * const productIdentifier = await prisma.productIdentifier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductIdentifierCreateManyArgs>(args?: SelectSubset<T, ProductIdentifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductIdentifiers and returns the data saved in the database.
     * @param {ProductIdentifierCreateManyAndReturnArgs} args - Arguments to create many ProductIdentifiers.
     * @example
     * // Create many ProductIdentifiers
     * const productIdentifier = await prisma.productIdentifier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductIdentifiers and only return the `id`
     * const productIdentifierWithIdOnly = await prisma.productIdentifier.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductIdentifierCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductIdentifierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductIdentifier.
     * @param {ProductIdentifierDeleteArgs} args - Arguments to delete one ProductIdentifier.
     * @example
     * // Delete one ProductIdentifier
     * const ProductIdentifier = await prisma.productIdentifier.delete({
     *   where: {
     *     // ... filter to delete one ProductIdentifier
     *   }
     * })
     * 
     */
    delete<T extends ProductIdentifierDeleteArgs>(args: SelectSubset<T, ProductIdentifierDeleteArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductIdentifier.
     * @param {ProductIdentifierUpdateArgs} args - Arguments to update one ProductIdentifier.
     * @example
     * // Update one ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductIdentifierUpdateArgs>(args: SelectSubset<T, ProductIdentifierUpdateArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductIdentifiers.
     * @param {ProductIdentifierDeleteManyArgs} args - Arguments to filter ProductIdentifiers to delete.
     * @example
     * // Delete a few ProductIdentifiers
     * const { count } = await prisma.productIdentifier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductIdentifierDeleteManyArgs>(args?: SelectSubset<T, ProductIdentifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductIdentifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductIdentifiers
     * const productIdentifier = await prisma.productIdentifier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductIdentifierUpdateManyArgs>(args: SelectSubset<T, ProductIdentifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductIdentifiers and returns the data updated in the database.
     * @param {ProductIdentifierUpdateManyAndReturnArgs} args - Arguments to update many ProductIdentifiers.
     * @example
     * // Update many ProductIdentifiers
     * const productIdentifier = await prisma.productIdentifier.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductIdentifiers and only return the `id`
     * const productIdentifierWithIdOnly = await prisma.productIdentifier.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductIdentifierUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductIdentifierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductIdentifier.
     * @param {ProductIdentifierUpsertArgs} args - Arguments to update or create a ProductIdentifier.
     * @example
     * // Update or create a ProductIdentifier
     * const productIdentifier = await prisma.productIdentifier.upsert({
     *   create: {
     *     // ... data to create a ProductIdentifier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductIdentifier we want to update
     *   }
     * })
     */
    upsert<T extends ProductIdentifierUpsertArgs>(args: SelectSubset<T, ProductIdentifierUpsertArgs<ExtArgs>>): Prisma__ProductIdentifierClient<$Result.GetResult<Prisma.$ProductIdentifierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductIdentifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierCountArgs} args - Arguments to filter ProductIdentifiers to count.
     * @example
     * // Count the number of ProductIdentifiers
     * const count = await prisma.productIdentifier.count({
     *   where: {
     *     // ... the filter for the ProductIdentifiers we want to count
     *   }
     * })
    **/
    count<T extends ProductIdentifierCountArgs>(
      args?: Subset<T, ProductIdentifierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductIdentifierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductIdentifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductIdentifierAggregateArgs>(args: Subset<T, ProductIdentifierAggregateArgs>): Prisma.PrismaPromise<GetProductIdentifierAggregateType<T>>

    /**
     * Group by ProductIdentifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductIdentifierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductIdentifierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductIdentifierGroupByArgs['orderBy'] }
        : { orderBy?: ProductIdentifierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductIdentifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductIdentifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductIdentifier model
   */
  readonly fields: ProductIdentifierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductIdentifier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductIdentifierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductIdentifier model
   */
  interface ProductIdentifierFieldRefs {
    readonly id: FieldRef<"ProductIdentifier", 'Int'>
    readonly productId: FieldRef<"ProductIdentifier", 'Int'>
    readonly type: FieldRef<"ProductIdentifier", 'ProductIdentifierType'>
    readonly value: FieldRef<"ProductIdentifier", 'String'>
    readonly imageUrl: FieldRef<"ProductIdentifier", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductIdentifier findUnique
   */
  export type ProductIdentifierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter, which ProductIdentifier to fetch.
     */
    where: ProductIdentifierWhereUniqueInput
  }

  /**
   * ProductIdentifier findUniqueOrThrow
   */
  export type ProductIdentifierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter, which ProductIdentifier to fetch.
     */
    where: ProductIdentifierWhereUniqueInput
  }

  /**
   * ProductIdentifier findFirst
   */
  export type ProductIdentifierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter, which ProductIdentifier to fetch.
     */
    where?: ProductIdentifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductIdentifiers to fetch.
     */
    orderBy?: ProductIdentifierOrderByWithRelationInput | ProductIdentifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductIdentifiers.
     */
    cursor?: ProductIdentifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductIdentifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductIdentifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductIdentifiers.
     */
    distinct?: ProductIdentifierScalarFieldEnum | ProductIdentifierScalarFieldEnum[]
  }

  /**
   * ProductIdentifier findFirstOrThrow
   */
  export type ProductIdentifierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter, which ProductIdentifier to fetch.
     */
    where?: ProductIdentifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductIdentifiers to fetch.
     */
    orderBy?: ProductIdentifierOrderByWithRelationInput | ProductIdentifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductIdentifiers.
     */
    cursor?: ProductIdentifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductIdentifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductIdentifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductIdentifiers.
     */
    distinct?: ProductIdentifierScalarFieldEnum | ProductIdentifierScalarFieldEnum[]
  }

  /**
   * ProductIdentifier findMany
   */
  export type ProductIdentifierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter, which ProductIdentifiers to fetch.
     */
    where?: ProductIdentifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductIdentifiers to fetch.
     */
    orderBy?: ProductIdentifierOrderByWithRelationInput | ProductIdentifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductIdentifiers.
     */
    cursor?: ProductIdentifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductIdentifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductIdentifiers.
     */
    skip?: number
    distinct?: ProductIdentifierScalarFieldEnum | ProductIdentifierScalarFieldEnum[]
  }

  /**
   * ProductIdentifier create
   */
  export type ProductIdentifierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductIdentifier.
     */
    data: XOR<ProductIdentifierCreateInput, ProductIdentifierUncheckedCreateInput>
  }

  /**
   * ProductIdentifier createMany
   */
  export type ProductIdentifierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductIdentifiers.
     */
    data: ProductIdentifierCreateManyInput | ProductIdentifierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductIdentifier createManyAndReturn
   */
  export type ProductIdentifierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * The data used to create many ProductIdentifiers.
     */
    data: ProductIdentifierCreateManyInput | ProductIdentifierCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductIdentifier update
   */
  export type ProductIdentifierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductIdentifier.
     */
    data: XOR<ProductIdentifierUpdateInput, ProductIdentifierUncheckedUpdateInput>
    /**
     * Choose, which ProductIdentifier to update.
     */
    where: ProductIdentifierWhereUniqueInput
  }

  /**
   * ProductIdentifier updateMany
   */
  export type ProductIdentifierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductIdentifiers.
     */
    data: XOR<ProductIdentifierUpdateManyMutationInput, ProductIdentifierUncheckedUpdateManyInput>
    /**
     * Filter which ProductIdentifiers to update
     */
    where?: ProductIdentifierWhereInput
    /**
     * Limit how many ProductIdentifiers to update.
     */
    limit?: number
  }

  /**
   * ProductIdentifier updateManyAndReturn
   */
  export type ProductIdentifierUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * The data used to update ProductIdentifiers.
     */
    data: XOR<ProductIdentifierUpdateManyMutationInput, ProductIdentifierUncheckedUpdateManyInput>
    /**
     * Filter which ProductIdentifiers to update
     */
    where?: ProductIdentifierWhereInput
    /**
     * Limit how many ProductIdentifiers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductIdentifier upsert
   */
  export type ProductIdentifierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductIdentifier to update in case it exists.
     */
    where: ProductIdentifierWhereUniqueInput
    /**
     * In case the ProductIdentifier found by the `where` argument doesn't exist, create a new ProductIdentifier with this data.
     */
    create: XOR<ProductIdentifierCreateInput, ProductIdentifierUncheckedCreateInput>
    /**
     * In case the ProductIdentifier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductIdentifierUpdateInput, ProductIdentifierUncheckedUpdateInput>
  }

  /**
   * ProductIdentifier delete
   */
  export type ProductIdentifierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
    /**
     * Filter which ProductIdentifier to delete.
     */
    where: ProductIdentifierWhereUniqueInput
  }

  /**
   * ProductIdentifier deleteMany
   */
  export type ProductIdentifierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductIdentifiers to delete
     */
    where?: ProductIdentifierWhereInput
    /**
     * Limit how many ProductIdentifiers to delete.
     */
    limit?: number
  }

  /**
   * ProductIdentifier without action
   */
  export type ProductIdentifierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductIdentifier
     */
    select?: ProductIdentifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductIdentifier
     */
    omit?: ProductIdentifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIdentifierInclude<ExtArgs> | null
  }


  /**
   * Model ProductVariant
   */

  export type AggregateProductVariant = {
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  export type ProductVariantAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    price: Decimal | null
  }

  export type ProductVariantSumAggregateOutputType = {
    id: number | null
    productId: number | null
    price: Decimal | null
  }

  export type ProductVariantMinAggregateOutputType = {
    id: number | null
    productId: number | null
    name: string | null
    sku: string | null
    barcode: string | null
    price: Decimal | null
    imageUrl: string | null
    deleted: boolean | null
  }

  export type ProductVariantMaxAggregateOutputType = {
    id: number | null
    productId: number | null
    name: string | null
    sku: string | null
    barcode: string | null
    price: Decimal | null
    imageUrl: string | null
    deleted: boolean | null
  }

  export type ProductVariantCountAggregateOutputType = {
    id: number
    productId: number
    name: number
    sku: number
    barcode: number
    price: number
    imageUrl: number
    specs: number
    deleted: number
    _all: number
  }


  export type ProductVariantAvgAggregateInputType = {
    id?: true
    productId?: true
    price?: true
  }

  export type ProductVariantSumAggregateInputType = {
    id?: true
    productId?: true
    price?: true
  }

  export type ProductVariantMinAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    price?: true
    imageUrl?: true
    deleted?: true
  }

  export type ProductVariantMaxAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    price?: true
    imageUrl?: true
    deleted?: true
  }

  export type ProductVariantCountAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    sku?: true
    barcode?: true
    price?: true
    imageUrl?: true
    specs?: true
    deleted?: true
    _all?: true
  }

  export type ProductVariantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariant to aggregate.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductVariants
    **/
    _count?: true | ProductVariantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductVariantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductVariantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductVariantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductVariantMaxAggregateInputType
  }

  export type GetProductVariantAggregateType<T extends ProductVariantAggregateArgs> = {
        [P in keyof T & keyof AggregateProductVariant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductVariant[P]>
      : GetScalarType<T[P], AggregateProductVariant[P]>
  }




  export type ProductVariantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithAggregationInput | ProductVariantOrderByWithAggregationInput[]
    by: ProductVariantScalarFieldEnum[] | ProductVariantScalarFieldEnum
    having?: ProductVariantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductVariantCountAggregateInputType | true
    _avg?: ProductVariantAvgAggregateInputType
    _sum?: ProductVariantSumAggregateInputType
    _min?: ProductVariantMinAggregateInputType
    _max?: ProductVariantMaxAggregateInputType
  }

  export type ProductVariantGroupByOutputType = {
    id: number
    productId: number
    name: string
    sku: string
    barcode: string | null
    price: Decimal
    imageUrl: string | null
    specs: JsonValue | null
    deleted: boolean
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  type GetProductVariantGroupByPayload<T extends ProductVariantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductVariantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductVariantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
            : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
        }
      >
    >


  export type ProductVariantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    price?: boolean
    imageUrl?: boolean
    specs?: boolean
    deleted?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    price?: boolean
    imageUrl?: boolean
    specs?: boolean
    deleted?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    price?: boolean
    imageUrl?: boolean
    specs?: boolean
    deleted?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>

  export type ProductVariantSelectScalar = {
    id?: boolean
    productId?: boolean
    name?: boolean
    sku?: boolean
    barcode?: boolean
    price?: boolean
    imageUrl?: boolean
    specs?: boolean
    deleted?: boolean
  }

  export type ProductVariantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "name" | "sku" | "barcode" | "price" | "imageUrl" | "specs" | "deleted", ExtArgs["result"]["productVariant"]>
  export type ProductVariantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductVariantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductVariantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductVariantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductVariant"
    objects: {
      Product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: number
      name: string
      sku: string
      barcode: string | null
      price: Prisma.Decimal
      imageUrl: string | null
      specs: Prisma.JsonValue | null
      deleted: boolean
    }, ExtArgs["result"]["productVariant"]>
    composites: {}
  }

  type ProductVariantGetPayload<S extends boolean | null | undefined | ProductVariantDefaultArgs> = $Result.GetResult<Prisma.$ProductVariantPayload, S>

  type ProductVariantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductVariantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductVariantCountAggregateInputType | true
    }

  export interface ProductVariantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductVariant'], meta: { name: 'ProductVariant' } }
    /**
     * Find zero or one ProductVariant that matches the filter.
     * @param {ProductVariantFindUniqueArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductVariantFindUniqueArgs>(args: SelectSubset<T, ProductVariantFindUniqueArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductVariant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductVariantFindUniqueOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductVariantFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductVariantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductVariantFindFirstArgs>(args?: SelectSubset<T, ProductVariantFindFirstArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductVariant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductVariantFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductVariantFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductVariants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductVariants
     * const productVariants = await prisma.productVariant.findMany()
     * 
     * // Get first 10 ProductVariants
     * const productVariants = await prisma.productVariant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductVariantFindManyArgs>(args?: SelectSubset<T, ProductVariantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductVariant.
     * @param {ProductVariantCreateArgs} args - Arguments to create a ProductVariant.
     * @example
     * // Create one ProductVariant
     * const ProductVariant = await prisma.productVariant.create({
     *   data: {
     *     // ... data to create a ProductVariant
     *   }
     * })
     * 
     */
    create<T extends ProductVariantCreateArgs>(args: SelectSubset<T, ProductVariantCreateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductVariants.
     * @param {ProductVariantCreateManyArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductVariantCreateManyArgs>(args?: SelectSubset<T, ProductVariantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductVariants and returns the data saved in the database.
     * @param {ProductVariantCreateManyAndReturnArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductVariants and only return the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductVariantCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductVariantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductVariant.
     * @param {ProductVariantDeleteArgs} args - Arguments to delete one ProductVariant.
     * @example
     * // Delete one ProductVariant
     * const ProductVariant = await prisma.productVariant.delete({
     *   where: {
     *     // ... filter to delete one ProductVariant
     *   }
     * })
     * 
     */
    delete<T extends ProductVariantDeleteArgs>(args: SelectSubset<T, ProductVariantDeleteArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductVariant.
     * @param {ProductVariantUpdateArgs} args - Arguments to update one ProductVariant.
     * @example
     * // Update one ProductVariant
     * const productVariant = await prisma.productVariant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductVariantUpdateArgs>(args: SelectSubset<T, ProductVariantUpdateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductVariants.
     * @param {ProductVariantDeleteManyArgs} args - Arguments to filter ProductVariants to delete.
     * @example
     * // Delete a few ProductVariants
     * const { count } = await prisma.productVariant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductVariantDeleteManyArgs>(args?: SelectSubset<T, ProductVariantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductVariantUpdateManyArgs>(args: SelectSubset<T, ProductVariantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants and returns the data updated in the database.
     * @param {ProductVariantUpdateManyAndReturnArgs} args - Arguments to update many ProductVariants.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductVariants and only return the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductVariantUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductVariantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductVariant.
     * @param {ProductVariantUpsertArgs} args - Arguments to update or create a ProductVariant.
     * @example
     * // Update or create a ProductVariant
     * const productVariant = await prisma.productVariant.upsert({
     *   create: {
     *     // ... data to create a ProductVariant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductVariant we want to update
     *   }
     * })
     */
    upsert<T extends ProductVariantUpsertArgs>(args: SelectSubset<T, ProductVariantUpsertArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantCountArgs} args - Arguments to filter ProductVariants to count.
     * @example
     * // Count the number of ProductVariants
     * const count = await prisma.productVariant.count({
     *   where: {
     *     // ... the filter for the ProductVariants we want to count
     *   }
     * })
    **/
    count<T extends ProductVariantCountArgs>(
      args?: Subset<T, ProductVariantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductVariantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductVariantAggregateArgs>(args: Subset<T, ProductVariantAggregateArgs>): Prisma.PrismaPromise<GetProductVariantAggregateType<T>>

    /**
     * Group by ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductVariantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductVariantGroupByArgs['orderBy'] }
        : { orderBy?: ProductVariantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductVariantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductVariantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductVariant model
   */
  readonly fields: ProductVariantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductVariant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductVariantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductVariant model
   */
  interface ProductVariantFieldRefs {
    readonly id: FieldRef<"ProductVariant", 'Int'>
    readonly productId: FieldRef<"ProductVariant", 'Int'>
    readonly name: FieldRef<"ProductVariant", 'String'>
    readonly sku: FieldRef<"ProductVariant", 'String'>
    readonly barcode: FieldRef<"ProductVariant", 'String'>
    readonly price: FieldRef<"ProductVariant", 'Decimal'>
    readonly imageUrl: FieldRef<"ProductVariant", 'String'>
    readonly specs: FieldRef<"ProductVariant", 'Json'>
    readonly deleted: FieldRef<"ProductVariant", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ProductVariant findUnique
   */
  export type ProductVariantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findUniqueOrThrow
   */
  export type ProductVariantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findFirst
   */
  export type ProductVariantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findFirstOrThrow
   */
  export type ProductVariantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findMany
   */
  export type ProductVariantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariants to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant create
   */
  export type ProductVariantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductVariant.
     */
    data: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
  }

  /**
   * ProductVariant createMany
   */
  export type ProductVariantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductVariants.
     */
    data: ProductVariantCreateManyInput | ProductVariantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductVariant createManyAndReturn
   */
  export type ProductVariantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * The data used to create many ProductVariants.
     */
    data: ProductVariantCreateManyInput | ProductVariantCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductVariant update
   */
  export type ProductVariantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductVariant.
     */
    data: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
    /**
     * Choose, which ProductVariant to update.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant updateMany
   */
  export type ProductVariantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductVariants.
     */
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyInput>
    /**
     * Filter which ProductVariants to update
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to update.
     */
    limit?: number
  }

  /**
   * ProductVariant updateManyAndReturn
   */
  export type ProductVariantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * The data used to update ProductVariants.
     */
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyInput>
    /**
     * Filter which ProductVariants to update
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductVariant upsert
   */
  export type ProductVariantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductVariant to update in case it exists.
     */
    where: ProductVariantWhereUniqueInput
    /**
     * In case the ProductVariant found by the `where` argument doesn't exist, create a new ProductVariant with this data.
     */
    create: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
    /**
     * In case the ProductVariant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
  }

  /**
   * ProductVariant delete
   */
  export type ProductVariantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter which ProductVariant to delete.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant deleteMany
   */
  export type ProductVariantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariants to delete
     */
    where?: ProductVariantWhereInput
    /**
     * Limit how many ProductVariants to delete.
     */
    limit?: number
  }

  /**
   * ProductVariant without action
   */
  export type ProductVariantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductVariant
     */
    omit?: ProductVariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
  }


  /**
   * Model ShippingDetail
   */

  export type AggregateShippingDetail = {
    _count: ShippingDetailCountAggregateOutputType | null
    _avg: ShippingDetailAvgAggregateOutputType | null
    _sum: ShippingDetailSumAggregateOutputType | null
    _min: ShippingDetailMinAggregateOutputType | null
    _max: ShippingDetailMaxAggregateOutputType | null
  }

  export type ShippingDetailAvgAggregateOutputType = {
    id: number | null
  }

  export type ShippingDetailSumAggregateOutputType = {
    id: number | null
  }

  export type ShippingDetailMinAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    address: string | null
    shippingDate: Date | null
    estimatedArrival: Date | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type ShippingDetailMaxAggregateOutputType = {
    id: number | null
    invoiceId: string | null
    address: string | null
    shippingDate: Date | null
    estimatedArrival: Date | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type ShippingDetailCountAggregateOutputType = {
    id: number
    invoiceId: number
    address: number
    shippingDate: number
    estimatedArrival: number
    createdById: number
    updatedById: number
    deleted: number
    _all: number
  }


  export type ShippingDetailAvgAggregateInputType = {
    id?: true
  }

  export type ShippingDetailSumAggregateInputType = {
    id?: true
  }

  export type ShippingDetailMinAggregateInputType = {
    id?: true
    invoiceId?: true
    address?: true
    shippingDate?: true
    estimatedArrival?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type ShippingDetailMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    address?: true
    shippingDate?: true
    estimatedArrival?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type ShippingDetailCountAggregateInputType = {
    id?: true
    invoiceId?: true
    address?: true
    shippingDate?: true
    estimatedArrival?: true
    createdById?: true
    updatedById?: true
    deleted?: true
    _all?: true
  }

  export type ShippingDetailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingDetail to aggregate.
     */
    where?: ShippingDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingDetails to fetch.
     */
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShippingDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingDetails
    **/
    _count?: true | ShippingDetailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingDetailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingDetailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingDetailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingDetailMaxAggregateInputType
  }

  export type GetShippingDetailAggregateType<T extends ShippingDetailAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingDetail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingDetail[P]>
      : GetScalarType<T[P], AggregateShippingDetail[P]>
  }




  export type ShippingDetailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingDetailWhereInput
    orderBy?: ShippingDetailOrderByWithAggregationInput | ShippingDetailOrderByWithAggregationInput[]
    by: ShippingDetailScalarFieldEnum[] | ShippingDetailScalarFieldEnum
    having?: ShippingDetailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingDetailCountAggregateInputType | true
    _avg?: ShippingDetailAvgAggregateInputType
    _sum?: ShippingDetailSumAggregateInputType
    _min?: ShippingDetailMinAggregateInputType
    _max?: ShippingDetailMaxAggregateInputType
  }

  export type ShippingDetailGroupByOutputType = {
    id: number
    invoiceId: string
    address: string
    shippingDate: Date
    estimatedArrival: Date
    createdById: string
    updatedById: string
    deleted: boolean
    _count: ShippingDetailCountAggregateOutputType | null
    _avg: ShippingDetailAvgAggregateOutputType | null
    _sum: ShippingDetailSumAggregateOutputType | null
    _min: ShippingDetailMinAggregateOutputType | null
    _max: ShippingDetailMaxAggregateOutputType | null
  }

  type GetShippingDetailGroupByPayload<T extends ShippingDetailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShippingDetailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingDetailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingDetailGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingDetailGroupByOutputType[P]>
        }
      >
    >


  export type ShippingDetailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    address?: boolean
    shippingDate?: boolean
    estimatedArrival?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingDetail"]>

  export type ShippingDetailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    address?: boolean
    shippingDate?: boolean
    estimatedArrival?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingDetail"]>

  export type ShippingDetailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    address?: boolean
    shippingDate?: boolean
    estimatedArrival?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingDetail"]>

  export type ShippingDetailSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    address?: boolean
    shippingDate?: boolean
    estimatedArrival?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
  }

  export type ShippingDetailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceId" | "address" | "shippingDate" | "estimatedArrival" | "createdById" | "updatedById" | "deleted", ExtArgs["result"]["shippingDetail"]>
  export type ShippingDetailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ShippingDetailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ShippingDetailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_ShippingDetail_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    User_ShippingDetail_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ShippingDetailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShippingDetail"
    objects: {
      User_ShippingDetail_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      Invoice: Prisma.$InvoicePayload<ExtArgs>
      User_ShippingDetail_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceId: string
      address: string
      shippingDate: Date
      estimatedArrival: Date
      createdById: string
      updatedById: string
      deleted: boolean
    }, ExtArgs["result"]["shippingDetail"]>
    composites: {}
  }

  type ShippingDetailGetPayload<S extends boolean | null | undefined | ShippingDetailDefaultArgs> = $Result.GetResult<Prisma.$ShippingDetailPayload, S>

  type ShippingDetailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShippingDetailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShippingDetailCountAggregateInputType | true
    }

  export interface ShippingDetailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShippingDetail'], meta: { name: 'ShippingDetail' } }
    /**
     * Find zero or one ShippingDetail that matches the filter.
     * @param {ShippingDetailFindUniqueArgs} args - Arguments to find a ShippingDetail
     * @example
     * // Get one ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShippingDetailFindUniqueArgs>(args: SelectSubset<T, ShippingDetailFindUniqueArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ShippingDetail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShippingDetailFindUniqueOrThrowArgs} args - Arguments to find a ShippingDetail
     * @example
     * // Get one ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShippingDetailFindUniqueOrThrowArgs>(args: SelectSubset<T, ShippingDetailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingDetail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailFindFirstArgs} args - Arguments to find a ShippingDetail
     * @example
     * // Get one ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShippingDetailFindFirstArgs>(args?: SelectSubset<T, ShippingDetailFindFirstArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingDetail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailFindFirstOrThrowArgs} args - Arguments to find a ShippingDetail
     * @example
     * // Get one ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShippingDetailFindFirstOrThrowArgs>(args?: SelectSubset<T, ShippingDetailFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ShippingDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingDetails
     * const shippingDetails = await prisma.shippingDetail.findMany()
     * 
     * // Get first 10 ShippingDetails
     * const shippingDetails = await prisma.shippingDetail.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingDetailWithIdOnly = await prisma.shippingDetail.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShippingDetailFindManyArgs>(args?: SelectSubset<T, ShippingDetailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ShippingDetail.
     * @param {ShippingDetailCreateArgs} args - Arguments to create a ShippingDetail.
     * @example
     * // Create one ShippingDetail
     * const ShippingDetail = await prisma.shippingDetail.create({
     *   data: {
     *     // ... data to create a ShippingDetail
     *   }
     * })
     * 
     */
    create<T extends ShippingDetailCreateArgs>(args: SelectSubset<T, ShippingDetailCreateArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ShippingDetails.
     * @param {ShippingDetailCreateManyArgs} args - Arguments to create many ShippingDetails.
     * @example
     * // Create many ShippingDetails
     * const shippingDetail = await prisma.shippingDetail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShippingDetailCreateManyArgs>(args?: SelectSubset<T, ShippingDetailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShippingDetails and returns the data saved in the database.
     * @param {ShippingDetailCreateManyAndReturnArgs} args - Arguments to create many ShippingDetails.
     * @example
     * // Create many ShippingDetails
     * const shippingDetail = await prisma.shippingDetail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShippingDetails and only return the `id`
     * const shippingDetailWithIdOnly = await prisma.shippingDetail.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShippingDetailCreateManyAndReturnArgs>(args?: SelectSubset<T, ShippingDetailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ShippingDetail.
     * @param {ShippingDetailDeleteArgs} args - Arguments to delete one ShippingDetail.
     * @example
     * // Delete one ShippingDetail
     * const ShippingDetail = await prisma.shippingDetail.delete({
     *   where: {
     *     // ... filter to delete one ShippingDetail
     *   }
     * })
     * 
     */
    delete<T extends ShippingDetailDeleteArgs>(args: SelectSubset<T, ShippingDetailDeleteArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ShippingDetail.
     * @param {ShippingDetailUpdateArgs} args - Arguments to update one ShippingDetail.
     * @example
     * // Update one ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShippingDetailUpdateArgs>(args: SelectSubset<T, ShippingDetailUpdateArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ShippingDetails.
     * @param {ShippingDetailDeleteManyArgs} args - Arguments to filter ShippingDetails to delete.
     * @example
     * // Delete a few ShippingDetails
     * const { count } = await prisma.shippingDetail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShippingDetailDeleteManyArgs>(args?: SelectSubset<T, ShippingDetailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingDetails
     * const shippingDetail = await prisma.shippingDetail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShippingDetailUpdateManyArgs>(args: SelectSubset<T, ShippingDetailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingDetails and returns the data updated in the database.
     * @param {ShippingDetailUpdateManyAndReturnArgs} args - Arguments to update many ShippingDetails.
     * @example
     * // Update many ShippingDetails
     * const shippingDetail = await prisma.shippingDetail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ShippingDetails and only return the `id`
     * const shippingDetailWithIdOnly = await prisma.shippingDetail.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShippingDetailUpdateManyAndReturnArgs>(args: SelectSubset<T, ShippingDetailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ShippingDetail.
     * @param {ShippingDetailUpsertArgs} args - Arguments to update or create a ShippingDetail.
     * @example
     * // Update or create a ShippingDetail
     * const shippingDetail = await prisma.shippingDetail.upsert({
     *   create: {
     *     // ... data to create a ShippingDetail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingDetail we want to update
     *   }
     * })
     */
    upsert<T extends ShippingDetailUpsertArgs>(args: SelectSubset<T, ShippingDetailUpsertArgs<ExtArgs>>): Prisma__ShippingDetailClient<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ShippingDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailCountArgs} args - Arguments to filter ShippingDetails to count.
     * @example
     * // Count the number of ShippingDetails
     * const count = await prisma.shippingDetail.count({
     *   where: {
     *     // ... the filter for the ShippingDetails we want to count
     *   }
     * })
    **/
    count<T extends ShippingDetailCountArgs>(
      args?: Subset<T, ShippingDetailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingDetailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingDetailAggregateArgs>(args: Subset<T, ShippingDetailAggregateArgs>): Prisma.PrismaPromise<GetShippingDetailAggregateType<T>>

    /**
     * Group by ShippingDetail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingDetailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingDetailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingDetailGroupByArgs['orderBy'] }
        : { orderBy?: ShippingDetailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingDetailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingDetailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShippingDetail model
   */
  readonly fields: ShippingDetailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingDetail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShippingDetailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_ShippingDetail_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_ShippingDetail_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShippingDetail model
   */
  interface ShippingDetailFieldRefs {
    readonly id: FieldRef<"ShippingDetail", 'Int'>
    readonly invoiceId: FieldRef<"ShippingDetail", 'String'>
    readonly address: FieldRef<"ShippingDetail", 'String'>
    readonly shippingDate: FieldRef<"ShippingDetail", 'DateTime'>
    readonly estimatedArrival: FieldRef<"ShippingDetail", 'DateTime'>
    readonly createdById: FieldRef<"ShippingDetail", 'String'>
    readonly updatedById: FieldRef<"ShippingDetail", 'String'>
    readonly deleted: FieldRef<"ShippingDetail", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ShippingDetail findUnique
   */
  export type ShippingDetailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter, which ShippingDetail to fetch.
     */
    where: ShippingDetailWhereUniqueInput
  }

  /**
   * ShippingDetail findUniqueOrThrow
   */
  export type ShippingDetailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter, which ShippingDetail to fetch.
     */
    where: ShippingDetailWhereUniqueInput
  }

  /**
   * ShippingDetail findFirst
   */
  export type ShippingDetailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter, which ShippingDetail to fetch.
     */
    where?: ShippingDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingDetails to fetch.
     */
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingDetails.
     */
    cursor?: ShippingDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingDetails.
     */
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * ShippingDetail findFirstOrThrow
   */
  export type ShippingDetailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter, which ShippingDetail to fetch.
     */
    where?: ShippingDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingDetails to fetch.
     */
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingDetails.
     */
    cursor?: ShippingDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingDetails.
     */
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * ShippingDetail findMany
   */
  export type ShippingDetailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter, which ShippingDetails to fetch.
     */
    where?: ShippingDetailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingDetails to fetch.
     */
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingDetails.
     */
    cursor?: ShippingDetailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingDetails.
     */
    skip?: number
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * ShippingDetail create
   */
  export type ShippingDetailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * The data needed to create a ShippingDetail.
     */
    data: XOR<ShippingDetailCreateInput, ShippingDetailUncheckedCreateInput>
  }

  /**
   * ShippingDetail createMany
   */
  export type ShippingDetailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShippingDetails.
     */
    data: ShippingDetailCreateManyInput | ShippingDetailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShippingDetail createManyAndReturn
   */
  export type ShippingDetailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * The data used to create many ShippingDetails.
     */
    data: ShippingDetailCreateManyInput | ShippingDetailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingDetail update
   */
  export type ShippingDetailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * The data needed to update a ShippingDetail.
     */
    data: XOR<ShippingDetailUpdateInput, ShippingDetailUncheckedUpdateInput>
    /**
     * Choose, which ShippingDetail to update.
     */
    where: ShippingDetailWhereUniqueInput
  }

  /**
   * ShippingDetail updateMany
   */
  export type ShippingDetailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShippingDetails.
     */
    data: XOR<ShippingDetailUpdateManyMutationInput, ShippingDetailUncheckedUpdateManyInput>
    /**
     * Filter which ShippingDetails to update
     */
    where?: ShippingDetailWhereInput
    /**
     * Limit how many ShippingDetails to update.
     */
    limit?: number
  }

  /**
   * ShippingDetail updateManyAndReturn
   */
  export type ShippingDetailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * The data used to update ShippingDetails.
     */
    data: XOR<ShippingDetailUpdateManyMutationInput, ShippingDetailUncheckedUpdateManyInput>
    /**
     * Filter which ShippingDetails to update
     */
    where?: ShippingDetailWhereInput
    /**
     * Limit how many ShippingDetails to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingDetail upsert
   */
  export type ShippingDetailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * The filter to search for the ShippingDetail to update in case it exists.
     */
    where: ShippingDetailWhereUniqueInput
    /**
     * In case the ShippingDetail found by the `where` argument doesn't exist, create a new ShippingDetail with this data.
     */
    create: XOR<ShippingDetailCreateInput, ShippingDetailUncheckedCreateInput>
    /**
     * In case the ShippingDetail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShippingDetailUpdateInput, ShippingDetailUncheckedUpdateInput>
  }

  /**
   * ShippingDetail delete
   */
  export type ShippingDetailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    /**
     * Filter which ShippingDetail to delete.
     */
    where: ShippingDetailWhereUniqueInput
  }

  /**
   * ShippingDetail deleteMany
   */
  export type ShippingDetailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingDetails to delete
     */
    where?: ShippingDetailWhereInput
    /**
     * Limit how many ShippingDetails to delete.
     */
    limit?: number
  }

  /**
   * ShippingDetail without action
   */
  export type ShippingDetailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
  }


  /**
   * Model TaxRate
   */

  export type AggregateTaxRate = {
    _count: TaxRateCountAggregateOutputType | null
    _avg: TaxRateAvgAggregateOutputType | null
    _sum: TaxRateSumAggregateOutputType | null
    _min: TaxRateMinAggregateOutputType | null
    _max: TaxRateMaxAggregateOutputType | null
  }

  export type TaxRateAvgAggregateOutputType = {
    id: number | null
    rate: Decimal | null
  }

  export type TaxRateSumAggregateOutputType = {
    id: number | null
    rate: Decimal | null
  }

  export type TaxRateMinAggregateOutputType = {
    id: number | null
    name: string | null
    rate: Decimal | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type TaxRateMaxAggregateOutputType = {
    id: number | null
    name: string | null
    rate: Decimal | null
    createdById: string | null
    updatedById: string | null
    deleted: boolean | null
  }

  export type TaxRateCountAggregateOutputType = {
    id: number
    name: number
    rate: number
    createdById: number
    updatedById: number
    deleted: number
    _all: number
  }


  export type TaxRateAvgAggregateInputType = {
    id?: true
    rate?: true
  }

  export type TaxRateSumAggregateInputType = {
    id?: true
    rate?: true
  }

  export type TaxRateMinAggregateInputType = {
    id?: true
    name?: true
    rate?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type TaxRateMaxAggregateInputType = {
    id?: true
    name?: true
    rate?: true
    createdById?: true
    updatedById?: true
    deleted?: true
  }

  export type TaxRateCountAggregateInputType = {
    id?: true
    name?: true
    rate?: true
    createdById?: true
    updatedById?: true
    deleted?: true
    _all?: true
  }

  export type TaxRateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TaxRate to aggregate.
     */
    where?: TaxRateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaxRates to fetch.
     */
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaxRateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaxRates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaxRates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TaxRates
    **/
    _count?: true | TaxRateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaxRateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaxRateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaxRateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaxRateMaxAggregateInputType
  }

  export type GetTaxRateAggregateType<T extends TaxRateAggregateArgs> = {
        [P in keyof T & keyof AggregateTaxRate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaxRate[P]>
      : GetScalarType<T[P], AggregateTaxRate[P]>
  }




  export type TaxRateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaxRateWhereInput
    orderBy?: TaxRateOrderByWithAggregationInput | TaxRateOrderByWithAggregationInput[]
    by: TaxRateScalarFieldEnum[] | TaxRateScalarFieldEnum
    having?: TaxRateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaxRateCountAggregateInputType | true
    _avg?: TaxRateAvgAggregateInputType
    _sum?: TaxRateSumAggregateInputType
    _min?: TaxRateMinAggregateInputType
    _max?: TaxRateMaxAggregateInputType
  }

  export type TaxRateGroupByOutputType = {
    id: number
    name: string
    rate: Decimal
    createdById: string
    updatedById: string
    deleted: boolean
    _count: TaxRateCountAggregateOutputType | null
    _avg: TaxRateAvgAggregateOutputType | null
    _sum: TaxRateSumAggregateOutputType | null
    _min: TaxRateMinAggregateOutputType | null
    _max: TaxRateMaxAggregateOutputType | null
  }

  type GetTaxRateGroupByPayload<T extends TaxRateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TaxRateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaxRateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaxRateGroupByOutputType[P]>
            : GetScalarType<T[P], TaxRateGroupByOutputType[P]>
        }
      >
    >


  export type TaxRateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    rate?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    InvoiceDetail?: boolean | TaxRate$InvoiceDetailArgs<ExtArgs>
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TaxRate$TenantArgs<ExtArgs>
    _count?: boolean | TaxRateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["taxRate"]>

  export type TaxRateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    rate?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["taxRate"]>

  export type TaxRateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    rate?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["taxRate"]>

  export type TaxRateSelectScalar = {
    id?: boolean
    name?: boolean
    rate?: boolean
    createdById?: boolean
    updatedById?: boolean
    deleted?: boolean
  }

  export type TaxRateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "rate" | "createdById" | "updatedById" | "deleted", ExtArgs["result"]["taxRate"]>
  export type TaxRateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InvoiceDetail?: boolean | TaxRate$InvoiceDetailArgs<ExtArgs>
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    Tenant?: boolean | TaxRate$TenantArgs<ExtArgs>
    _count?: boolean | TaxRateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TaxRateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TaxRateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_TaxRate_createdByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_TaxRate_updatedByIdToUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TaxRatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TaxRate"
    objects: {
      InvoiceDetail: Prisma.$InvoiceDetailPayload<ExtArgs>[]
      User_TaxRate_createdByIdToUser: Prisma.$UserPayload<ExtArgs>
      User_TaxRate_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>
      Tenant: Prisma.$TenantPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      rate: Prisma.Decimal
      createdById: string
      updatedById: string
      deleted: boolean
    }, ExtArgs["result"]["taxRate"]>
    composites: {}
  }

  type TaxRateGetPayload<S extends boolean | null | undefined | TaxRateDefaultArgs> = $Result.GetResult<Prisma.$TaxRatePayload, S>

  type TaxRateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TaxRateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TaxRateCountAggregateInputType | true
    }

  export interface TaxRateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TaxRate'], meta: { name: 'TaxRate' } }
    /**
     * Find zero or one TaxRate that matches the filter.
     * @param {TaxRateFindUniqueArgs} args - Arguments to find a TaxRate
     * @example
     * // Get one TaxRate
     * const taxRate = await prisma.taxRate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TaxRateFindUniqueArgs>(args: SelectSubset<T, TaxRateFindUniqueArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TaxRate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TaxRateFindUniqueOrThrowArgs} args - Arguments to find a TaxRate
     * @example
     * // Get one TaxRate
     * const taxRate = await prisma.taxRate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TaxRateFindUniqueOrThrowArgs>(args: SelectSubset<T, TaxRateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TaxRate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateFindFirstArgs} args - Arguments to find a TaxRate
     * @example
     * // Get one TaxRate
     * const taxRate = await prisma.taxRate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TaxRateFindFirstArgs>(args?: SelectSubset<T, TaxRateFindFirstArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TaxRate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateFindFirstOrThrowArgs} args - Arguments to find a TaxRate
     * @example
     * // Get one TaxRate
     * const taxRate = await prisma.taxRate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TaxRateFindFirstOrThrowArgs>(args?: SelectSubset<T, TaxRateFindFirstOrThrowArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TaxRates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TaxRates
     * const taxRates = await prisma.taxRate.findMany()
     * 
     * // Get first 10 TaxRates
     * const taxRates = await prisma.taxRate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taxRateWithIdOnly = await prisma.taxRate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TaxRateFindManyArgs>(args?: SelectSubset<T, TaxRateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TaxRate.
     * @param {TaxRateCreateArgs} args - Arguments to create a TaxRate.
     * @example
     * // Create one TaxRate
     * const TaxRate = await prisma.taxRate.create({
     *   data: {
     *     // ... data to create a TaxRate
     *   }
     * })
     * 
     */
    create<T extends TaxRateCreateArgs>(args: SelectSubset<T, TaxRateCreateArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TaxRates.
     * @param {TaxRateCreateManyArgs} args - Arguments to create many TaxRates.
     * @example
     * // Create many TaxRates
     * const taxRate = await prisma.taxRate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TaxRateCreateManyArgs>(args?: SelectSubset<T, TaxRateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TaxRates and returns the data saved in the database.
     * @param {TaxRateCreateManyAndReturnArgs} args - Arguments to create many TaxRates.
     * @example
     * // Create many TaxRates
     * const taxRate = await prisma.taxRate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TaxRates and only return the `id`
     * const taxRateWithIdOnly = await prisma.taxRate.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TaxRateCreateManyAndReturnArgs>(args?: SelectSubset<T, TaxRateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TaxRate.
     * @param {TaxRateDeleteArgs} args - Arguments to delete one TaxRate.
     * @example
     * // Delete one TaxRate
     * const TaxRate = await prisma.taxRate.delete({
     *   where: {
     *     // ... filter to delete one TaxRate
     *   }
     * })
     * 
     */
    delete<T extends TaxRateDeleteArgs>(args: SelectSubset<T, TaxRateDeleteArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TaxRate.
     * @param {TaxRateUpdateArgs} args - Arguments to update one TaxRate.
     * @example
     * // Update one TaxRate
     * const taxRate = await prisma.taxRate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TaxRateUpdateArgs>(args: SelectSubset<T, TaxRateUpdateArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TaxRates.
     * @param {TaxRateDeleteManyArgs} args - Arguments to filter TaxRates to delete.
     * @example
     * // Delete a few TaxRates
     * const { count } = await prisma.taxRate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TaxRateDeleteManyArgs>(args?: SelectSubset<T, TaxRateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TaxRates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TaxRates
     * const taxRate = await prisma.taxRate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TaxRateUpdateManyArgs>(args: SelectSubset<T, TaxRateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TaxRates and returns the data updated in the database.
     * @param {TaxRateUpdateManyAndReturnArgs} args - Arguments to update many TaxRates.
     * @example
     * // Update many TaxRates
     * const taxRate = await prisma.taxRate.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TaxRates and only return the `id`
     * const taxRateWithIdOnly = await prisma.taxRate.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TaxRateUpdateManyAndReturnArgs>(args: SelectSubset<T, TaxRateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TaxRate.
     * @param {TaxRateUpsertArgs} args - Arguments to update or create a TaxRate.
     * @example
     * // Update or create a TaxRate
     * const taxRate = await prisma.taxRate.upsert({
     *   create: {
     *     // ... data to create a TaxRate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TaxRate we want to update
     *   }
     * })
     */
    upsert<T extends TaxRateUpsertArgs>(args: SelectSubset<T, TaxRateUpsertArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TaxRates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateCountArgs} args - Arguments to filter TaxRates to count.
     * @example
     * // Count the number of TaxRates
     * const count = await prisma.taxRate.count({
     *   where: {
     *     // ... the filter for the TaxRates we want to count
     *   }
     * })
    **/
    count<T extends TaxRateCountArgs>(
      args?: Subset<T, TaxRateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaxRateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TaxRate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaxRateAggregateArgs>(args: Subset<T, TaxRateAggregateArgs>): Prisma.PrismaPromise<GetTaxRateAggregateType<T>>

    /**
     * Group by TaxRate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxRateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaxRateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaxRateGroupByArgs['orderBy'] }
        : { orderBy?: TaxRateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaxRateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaxRateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TaxRate model
   */
  readonly fields: TaxRateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TaxRate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TaxRateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    InvoiceDetail<T extends TaxRate$InvoiceDetailArgs<ExtArgs> = {}>(args?: Subset<T, TaxRate$InvoiceDetailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_TaxRate_createdByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_TaxRate_updatedByIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Tenant<T extends TaxRate$TenantArgs<ExtArgs> = {}>(args?: Subset<T, TaxRate$TenantArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TaxRate model
   */
  interface TaxRateFieldRefs {
    readonly id: FieldRef<"TaxRate", 'Int'>
    readonly name: FieldRef<"TaxRate", 'String'>
    readonly rate: FieldRef<"TaxRate", 'Decimal'>
    readonly createdById: FieldRef<"TaxRate", 'String'>
    readonly updatedById: FieldRef<"TaxRate", 'String'>
    readonly deleted: FieldRef<"TaxRate", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * TaxRate findUnique
   */
  export type TaxRateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter, which TaxRate to fetch.
     */
    where: TaxRateWhereUniqueInput
  }

  /**
   * TaxRate findUniqueOrThrow
   */
  export type TaxRateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter, which TaxRate to fetch.
     */
    where: TaxRateWhereUniqueInput
  }

  /**
   * TaxRate findFirst
   */
  export type TaxRateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter, which TaxRate to fetch.
     */
    where?: TaxRateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaxRates to fetch.
     */
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaxRates.
     */
    cursor?: TaxRateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaxRates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaxRates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaxRates.
     */
    distinct?: TaxRateScalarFieldEnum | TaxRateScalarFieldEnum[]
  }

  /**
   * TaxRate findFirstOrThrow
   */
  export type TaxRateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter, which TaxRate to fetch.
     */
    where?: TaxRateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaxRates to fetch.
     */
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaxRates.
     */
    cursor?: TaxRateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaxRates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaxRates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaxRates.
     */
    distinct?: TaxRateScalarFieldEnum | TaxRateScalarFieldEnum[]
  }

  /**
   * TaxRate findMany
   */
  export type TaxRateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter, which TaxRates to fetch.
     */
    where?: TaxRateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaxRates to fetch.
     */
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TaxRates.
     */
    cursor?: TaxRateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaxRates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaxRates.
     */
    skip?: number
    distinct?: TaxRateScalarFieldEnum | TaxRateScalarFieldEnum[]
  }

  /**
   * TaxRate create
   */
  export type TaxRateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * The data needed to create a TaxRate.
     */
    data: XOR<TaxRateCreateInput, TaxRateUncheckedCreateInput>
  }

  /**
   * TaxRate createMany
   */
  export type TaxRateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TaxRates.
     */
    data: TaxRateCreateManyInput | TaxRateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TaxRate createManyAndReturn
   */
  export type TaxRateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * The data used to create many TaxRates.
     */
    data: TaxRateCreateManyInput | TaxRateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TaxRate update
   */
  export type TaxRateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * The data needed to update a TaxRate.
     */
    data: XOR<TaxRateUpdateInput, TaxRateUncheckedUpdateInput>
    /**
     * Choose, which TaxRate to update.
     */
    where: TaxRateWhereUniqueInput
  }

  /**
   * TaxRate updateMany
   */
  export type TaxRateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TaxRates.
     */
    data: XOR<TaxRateUpdateManyMutationInput, TaxRateUncheckedUpdateManyInput>
    /**
     * Filter which TaxRates to update
     */
    where?: TaxRateWhereInput
    /**
     * Limit how many TaxRates to update.
     */
    limit?: number
  }

  /**
   * TaxRate updateManyAndReturn
   */
  export type TaxRateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * The data used to update TaxRates.
     */
    data: XOR<TaxRateUpdateManyMutationInput, TaxRateUncheckedUpdateManyInput>
    /**
     * Filter which TaxRates to update
     */
    where?: TaxRateWhereInput
    /**
     * Limit how many TaxRates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TaxRate upsert
   */
  export type TaxRateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * The filter to search for the TaxRate to update in case it exists.
     */
    where: TaxRateWhereUniqueInput
    /**
     * In case the TaxRate found by the `where` argument doesn't exist, create a new TaxRate with this data.
     */
    create: XOR<TaxRateCreateInput, TaxRateUncheckedCreateInput>
    /**
     * In case the TaxRate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaxRateUpdateInput, TaxRateUncheckedUpdateInput>
  }

  /**
   * TaxRate delete
   */
  export type TaxRateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    /**
     * Filter which TaxRate to delete.
     */
    where: TaxRateWhereUniqueInput
  }

  /**
   * TaxRate deleteMany
   */
  export type TaxRateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TaxRates to delete
     */
    where?: TaxRateWhereInput
    /**
     * Limit how many TaxRates to delete.
     */
    limit?: number
  }

  /**
   * TaxRate.InvoiceDetail
   */
  export type TaxRate$InvoiceDetailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceDetail
     */
    select?: InvoiceDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceDetail
     */
    omit?: InvoiceDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceDetailInclude<ExtArgs> | null
    where?: InvoiceDetailWhereInput
    orderBy?: InvoiceDetailOrderByWithRelationInput | InvoiceDetailOrderByWithRelationInput[]
    cursor?: InvoiceDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceDetailScalarFieldEnum | InvoiceDetailScalarFieldEnum[]
  }

  /**
   * TaxRate.Tenant
   */
  export type TaxRate$TenantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    where?: TenantWhereInput
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    cursor?: TenantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * TaxRate without action
   */
  export type TaxRateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
  }


  /**
   * Model Tenant
   */

  export type AggregateTenant = {
    _count: TenantCountAggregateOutputType | null
    _avg: TenantAvgAggregateOutputType | null
    _sum: TenantSumAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  export type TenantAvgAggregateOutputType = {
    invoiceCounter: number | null
    lastResetYear: number | null
    defaultTaxRateId: number | null
  }

  export type TenantSumAggregateOutputType = {
    invoiceCounter: number | null
    lastResetYear: number | null
    defaultTaxRateId: number | null
  }

  export type TenantMinAggregateOutputType = {
    id: string | null
    name: string | null
    companyName: string | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    zip: string | null
    zipPlus4: string | null
    email: string | null
    website: string | null
    isUspsValidated: boolean | null
    createdAt: Date | null
    invoiceCounter: number | null
    invoiceFormat: string | null
    invoicePrefix: string | null
    isInvoiceSetup: boolean | null
    autoResetYearly: boolean | null
    lastResetYear: number | null
    defaultTaxRateId: number | null
    deleted: boolean | null
    plan: $Enums.PlanTier | null
  }

  export type TenantMaxAggregateOutputType = {
    id: string | null
    name: string | null
    companyName: string | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    zip: string | null
    zipPlus4: string | null
    email: string | null
    website: string | null
    isUspsValidated: boolean | null
    createdAt: Date | null
    invoiceCounter: number | null
    invoiceFormat: string | null
    invoicePrefix: string | null
    isInvoiceSetup: boolean | null
    autoResetYearly: boolean | null
    lastResetYear: number | null
    defaultTaxRateId: number | null
    deleted: boolean | null
    plan: $Enums.PlanTier | null
  }

  export type TenantCountAggregateOutputType = {
    id: number
    name: number
    companyName: number
    addressLine1: number
    addressLine2: number
    city: number
    state: number
    zip: number
    zipPlus4: number
    email: number
    website: number
    isUspsValidated: number
    createdAt: number
    invoiceCounter: number
    invoiceFormat: number
    invoicePrefix: number
    isInvoiceSetup: number
    autoResetYearly: number
    lastResetYear: number
    defaultTaxRateId: number
    deleted: number
    plan: number
    _all: number
  }


  export type TenantAvgAggregateInputType = {
    invoiceCounter?: true
    lastResetYear?: true
    defaultTaxRateId?: true
  }

  export type TenantSumAggregateInputType = {
    invoiceCounter?: true
    lastResetYear?: true
    defaultTaxRateId?: true
  }

  export type TenantMinAggregateInputType = {
    id?: true
    name?: true
    companyName?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    zip?: true
    zipPlus4?: true
    email?: true
    website?: true
    isUspsValidated?: true
    createdAt?: true
    invoiceCounter?: true
    invoiceFormat?: true
    invoicePrefix?: true
    isInvoiceSetup?: true
    autoResetYearly?: true
    lastResetYear?: true
    defaultTaxRateId?: true
    deleted?: true
    plan?: true
  }

  export type TenantMaxAggregateInputType = {
    id?: true
    name?: true
    companyName?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    zip?: true
    zipPlus4?: true
    email?: true
    website?: true
    isUspsValidated?: true
    createdAt?: true
    invoiceCounter?: true
    invoiceFormat?: true
    invoicePrefix?: true
    isInvoiceSetup?: true
    autoResetYearly?: true
    lastResetYear?: true
    defaultTaxRateId?: true
    deleted?: true
    plan?: true
  }

  export type TenantCountAggregateInputType = {
    id?: true
    name?: true
    companyName?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    zip?: true
    zipPlus4?: true
    email?: true
    website?: true
    isUspsValidated?: true
    createdAt?: true
    invoiceCounter?: true
    invoiceFormat?: true
    invoicePrefix?: true
    isInvoiceSetup?: true
    autoResetYearly?: true
    lastResetYear?: true
    defaultTaxRateId?: true
    deleted?: true
    plan?: true
    _all?: true
  }

  export type TenantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tenant to aggregate.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tenants
    **/
    _count?: true | TenantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TenantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TenantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantMaxAggregateInputType
  }

  export type GetTenantAggregateType<T extends TenantAggregateArgs> = {
        [P in keyof T & keyof AggregateTenant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenant[P]>
      : GetScalarType<T[P], AggregateTenant[P]>
  }




  export type TenantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantWhereInput
    orderBy?: TenantOrderByWithAggregationInput | TenantOrderByWithAggregationInput[]
    by: TenantScalarFieldEnum[] | TenantScalarFieldEnum
    having?: TenantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantCountAggregateInputType | true
    _avg?: TenantAvgAggregateInputType
    _sum?: TenantSumAggregateInputType
    _min?: TenantMinAggregateInputType
    _max?: TenantMaxAggregateInputType
  }

  export type TenantGroupByOutputType = {
    id: string
    name: string
    companyName: string | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    zip: string | null
    zipPlus4: string | null
    email: string | null
    website: string | null
    isUspsValidated: boolean
    createdAt: Date
    invoiceCounter: number
    invoiceFormat: string | null
    invoicePrefix: string | null
    isInvoiceSetup: boolean
    autoResetYearly: boolean
    lastResetYear: number | null
    defaultTaxRateId: number | null
    deleted: boolean
    plan: $Enums.PlanTier
    _count: TenantCountAggregateOutputType | null
    _avg: TenantAvgAggregateOutputType | null
    _sum: TenantSumAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  type GetTenantGroupByPayload<T extends TenantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TenantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantGroupByOutputType[P]>
            : GetScalarType<T[P], TenantGroupByOutputType[P]>
        }
      >
    >


  export type TenantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    companyName?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    zipPlus4?: boolean
    email?: boolean
    website?: boolean
    isUspsValidated?: boolean
    createdAt?: boolean
    invoiceCounter?: boolean
    invoiceFormat?: boolean
    invoicePrefix?: boolean
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: boolean
    defaultTaxRateId?: boolean
    deleted?: boolean
    plan?: boolean
    Business?: boolean | Tenant$BusinessArgs<ExtArgs>
    Customer?: boolean | Tenant$CustomerArgs<ExtArgs>
    Invoice?: boolean | Tenant$InvoiceArgs<ExtArgs>
    InvoiceSettings?: boolean | Tenant$InvoiceSettingsArgs<ExtArgs>
    Order?: boolean | Tenant$OrderArgs<ExtArgs>
    Product?: boolean | Tenant$ProductArgs<ExtArgs>
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
    TenantMembership?: boolean | Tenant$TenantMembershipArgs<ExtArgs>
    _count?: boolean | TenantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    companyName?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    zipPlus4?: boolean
    email?: boolean
    website?: boolean
    isUspsValidated?: boolean
    createdAt?: boolean
    invoiceCounter?: boolean
    invoiceFormat?: boolean
    invoicePrefix?: boolean
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: boolean
    defaultTaxRateId?: boolean
    deleted?: boolean
    plan?: boolean
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    companyName?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    zipPlus4?: boolean
    email?: boolean
    website?: boolean
    isUspsValidated?: boolean
    createdAt?: boolean
    invoiceCounter?: boolean
    invoiceFormat?: boolean
    invoicePrefix?: boolean
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: boolean
    defaultTaxRateId?: boolean
    deleted?: boolean
    plan?: boolean
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
  }, ExtArgs["result"]["tenant"]>

  export type TenantSelectScalar = {
    id?: boolean
    name?: boolean
    companyName?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    zipPlus4?: boolean
    email?: boolean
    website?: boolean
    isUspsValidated?: boolean
    createdAt?: boolean
    invoiceCounter?: boolean
    invoiceFormat?: boolean
    invoicePrefix?: boolean
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: boolean
    defaultTaxRateId?: boolean
    deleted?: boolean
    plan?: boolean
  }

  export type TenantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "companyName" | "addressLine1" | "addressLine2" | "city" | "state" | "zip" | "zipPlus4" | "email" | "website" | "isUspsValidated" | "createdAt" | "invoiceCounter" | "invoiceFormat" | "invoicePrefix" | "isInvoiceSetup" | "autoResetYearly" | "lastResetYear" | "defaultTaxRateId" | "deleted" | "plan", ExtArgs["result"]["tenant"]>
  export type TenantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Business?: boolean | Tenant$BusinessArgs<ExtArgs>
    Customer?: boolean | Tenant$CustomerArgs<ExtArgs>
    Invoice?: boolean | Tenant$InvoiceArgs<ExtArgs>
    InvoiceSettings?: boolean | Tenant$InvoiceSettingsArgs<ExtArgs>
    Order?: boolean | Tenant$OrderArgs<ExtArgs>
    Product?: boolean | Tenant$ProductArgs<ExtArgs>
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
    TenantMembership?: boolean | Tenant$TenantMembershipArgs<ExtArgs>
    _count?: boolean | TenantCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TenantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
  }
  export type TenantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TaxRate?: boolean | Tenant$TaxRateArgs<ExtArgs>
  }

  export type $TenantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tenant"
    objects: {
      Business: Prisma.$BusinessPayload<ExtArgs>[]
      Customer: Prisma.$CustomerPayload<ExtArgs>[]
      Invoice: Prisma.$InvoicePayload<ExtArgs>[]
      InvoiceSettings: Prisma.$InvoiceSettingsPayload<ExtArgs> | null
      Order: Prisma.$OrderPayload<ExtArgs>[]
      Product: Prisma.$ProductPayload<ExtArgs>[]
      TaxRate: Prisma.$TaxRatePayload<ExtArgs> | null
      TenantMembership: Prisma.$TenantMembershipPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      companyName: string | null
      addressLine1: string | null
      addressLine2: string | null
      city: string | null
      state: string | null
      zip: string | null
      zipPlus4: string | null
      email: string | null
      website: string | null
      isUspsValidated: boolean
      createdAt: Date
      invoiceCounter: number
      invoiceFormat: string | null
      invoicePrefix: string | null
      isInvoiceSetup: boolean
      autoResetYearly: boolean
      lastResetYear: number | null
      defaultTaxRateId: number | null
      deleted: boolean
      plan: $Enums.PlanTier
    }, ExtArgs["result"]["tenant"]>
    composites: {}
  }

  type TenantGetPayload<S extends boolean | null | undefined | TenantDefaultArgs> = $Result.GetResult<Prisma.$TenantPayload, S>

  type TenantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TenantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TenantCountAggregateInputType | true
    }

  export interface TenantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tenant'], meta: { name: 'Tenant' } }
    /**
     * Find zero or one Tenant that matches the filter.
     * @param {TenantFindUniqueArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TenantFindUniqueArgs>(args: SelectSubset<T, TenantFindUniqueArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tenant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TenantFindUniqueOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TenantFindUniqueOrThrowArgs>(args: SelectSubset<T, TenantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TenantFindFirstArgs>(args?: SelectSubset<T, TenantFindFirstArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TenantFindFirstOrThrowArgs>(args?: SelectSubset<T, TenantFindFirstOrThrowArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tenants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tenants
     * const tenants = await prisma.tenant.findMany()
     * 
     * // Get first 10 Tenants
     * const tenants = await prisma.tenant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantWithIdOnly = await prisma.tenant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TenantFindManyArgs>(args?: SelectSubset<T, TenantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tenant.
     * @param {TenantCreateArgs} args - Arguments to create a Tenant.
     * @example
     * // Create one Tenant
     * const Tenant = await prisma.tenant.create({
     *   data: {
     *     // ... data to create a Tenant
     *   }
     * })
     * 
     */
    create<T extends TenantCreateArgs>(args: SelectSubset<T, TenantCreateArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tenants.
     * @param {TenantCreateManyArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenant = await prisma.tenant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TenantCreateManyArgs>(args?: SelectSubset<T, TenantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tenants and returns the data saved in the database.
     * @param {TenantCreateManyAndReturnArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenant = await prisma.tenant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tenants and only return the `id`
     * const tenantWithIdOnly = await prisma.tenant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TenantCreateManyAndReturnArgs>(args?: SelectSubset<T, TenantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tenant.
     * @param {TenantDeleteArgs} args - Arguments to delete one Tenant.
     * @example
     * // Delete one Tenant
     * const Tenant = await prisma.tenant.delete({
     *   where: {
     *     // ... filter to delete one Tenant
     *   }
     * })
     * 
     */
    delete<T extends TenantDeleteArgs>(args: SelectSubset<T, TenantDeleteArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tenant.
     * @param {TenantUpdateArgs} args - Arguments to update one Tenant.
     * @example
     * // Update one Tenant
     * const tenant = await prisma.tenant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TenantUpdateArgs>(args: SelectSubset<T, TenantUpdateArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tenants.
     * @param {TenantDeleteManyArgs} args - Arguments to filter Tenants to delete.
     * @example
     * // Delete a few Tenants
     * const { count } = await prisma.tenant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TenantDeleteManyArgs>(args?: SelectSubset<T, TenantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tenants
     * const tenant = await prisma.tenant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TenantUpdateManyArgs>(args: SelectSubset<T, TenantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants and returns the data updated in the database.
     * @param {TenantUpdateManyAndReturnArgs} args - Arguments to update many Tenants.
     * @example
     * // Update many Tenants
     * const tenant = await prisma.tenant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tenants and only return the `id`
     * const tenantWithIdOnly = await prisma.tenant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TenantUpdateManyAndReturnArgs>(args: SelectSubset<T, TenantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tenant.
     * @param {TenantUpsertArgs} args - Arguments to update or create a Tenant.
     * @example
     * // Update or create a Tenant
     * const tenant = await prisma.tenant.upsert({
     *   create: {
     *     // ... data to create a Tenant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tenant we want to update
     *   }
     * })
     */
    upsert<T extends TenantUpsertArgs>(args: SelectSubset<T, TenantUpsertArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantCountArgs} args - Arguments to filter Tenants to count.
     * @example
     * // Count the number of Tenants
     * const count = await prisma.tenant.count({
     *   where: {
     *     // ... the filter for the Tenants we want to count
     *   }
     * })
    **/
    count<T extends TenantCountArgs>(
      args?: Subset<T, TenantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantAggregateArgs>(args: Subset<T, TenantAggregateArgs>): Prisma.PrismaPromise<GetTenantAggregateType<T>>

    /**
     * Group by Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TenantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TenantGroupByArgs['orderBy'] }
        : { orderBy?: TenantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TenantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tenant model
   */
  readonly fields: TenantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tenant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TenantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Business<T extends Tenant$BusinessArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$BusinessArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Customer<T extends Tenant$CustomerArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$CustomerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Invoice<T extends Tenant$InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$InvoiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InvoiceSettings<T extends Tenant$InvoiceSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$InvoiceSettingsArgs<ExtArgs>>): Prisma__InvoiceSettingsClient<$Result.GetResult<Prisma.$InvoiceSettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Order<T extends Tenant$OrderArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$OrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product<T extends Tenant$ProductArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaxRate<T extends Tenant$TaxRateArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$TaxRateArgs<ExtArgs>>): Prisma__TaxRateClient<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    TenantMembership<T extends Tenant$TenantMembershipArgs<ExtArgs> = {}>(args?: Subset<T, Tenant$TenantMembershipArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tenant model
   */
  interface TenantFieldRefs {
    readonly id: FieldRef<"Tenant", 'String'>
    readonly name: FieldRef<"Tenant", 'String'>
    readonly companyName: FieldRef<"Tenant", 'String'>
    readonly addressLine1: FieldRef<"Tenant", 'String'>
    readonly addressLine2: FieldRef<"Tenant", 'String'>
    readonly city: FieldRef<"Tenant", 'String'>
    readonly state: FieldRef<"Tenant", 'String'>
    readonly zip: FieldRef<"Tenant", 'String'>
    readonly zipPlus4: FieldRef<"Tenant", 'String'>
    readonly email: FieldRef<"Tenant", 'String'>
    readonly website: FieldRef<"Tenant", 'String'>
    readonly isUspsValidated: FieldRef<"Tenant", 'Boolean'>
    readonly createdAt: FieldRef<"Tenant", 'DateTime'>
    readonly invoiceCounter: FieldRef<"Tenant", 'Int'>
    readonly invoiceFormat: FieldRef<"Tenant", 'String'>
    readonly invoicePrefix: FieldRef<"Tenant", 'String'>
    readonly isInvoiceSetup: FieldRef<"Tenant", 'Boolean'>
    readonly autoResetYearly: FieldRef<"Tenant", 'Boolean'>
    readonly lastResetYear: FieldRef<"Tenant", 'Int'>
    readonly defaultTaxRateId: FieldRef<"Tenant", 'Int'>
    readonly deleted: FieldRef<"Tenant", 'Boolean'>
    readonly plan: FieldRef<"Tenant", 'PlanTier'>
  }
    

  // Custom InputTypes
  /**
   * Tenant findUnique
   */
  export type TenantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant findUniqueOrThrow
   */
  export type TenantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant findFirst
   */
  export type TenantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     */
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant findFirstOrThrow
   */
  export type TenantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenant to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     */
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant findMany
   */
  export type TenantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter, which Tenants to fetch.
     */
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     */
    orderBy?: TenantOrderByWithRelationInput | TenantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tenants.
     */
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     */
    skip?: number
    distinct?: TenantScalarFieldEnum | TenantScalarFieldEnum[]
  }

  /**
   * Tenant create
   */
  export type TenantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The data needed to create a Tenant.
     */
    data: XOR<TenantCreateInput, TenantUncheckedCreateInput>
  }

  /**
   * Tenant createMany
   */
  export type TenantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tenants.
     */
    data: TenantCreateManyInput | TenantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tenant createManyAndReturn
   */
  export type TenantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * The data used to create many Tenants.
     */
    data: TenantCreateManyInput | TenantCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tenant update
   */
  export type TenantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The data needed to update a Tenant.
     */
    data: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
    /**
     * Choose, which Tenant to update.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant updateMany
   */
  export type TenantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tenants.
     */
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyInput>
    /**
     * Filter which Tenants to update
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to update.
     */
    limit?: number
  }

  /**
   * Tenant updateManyAndReturn
   */
  export type TenantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * The data used to update Tenants.
     */
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyInput>
    /**
     * Filter which Tenants to update
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tenant upsert
   */
  export type TenantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * The filter to search for the Tenant to update in case it exists.
     */
    where: TenantWhereUniqueInput
    /**
     * In case the Tenant found by the `where` argument doesn't exist, create a new Tenant with this data.
     */
    create: XOR<TenantCreateInput, TenantUncheckedCreateInput>
    /**
     * In case the Tenant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
  }

  /**
   * Tenant delete
   */
  export type TenantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
    /**
     * Filter which Tenant to delete.
     */
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant deleteMany
   */
  export type TenantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tenants to delete
     */
    where?: TenantWhereInput
    /**
     * Limit how many Tenants to delete.
     */
    limit?: number
  }

  /**
   * Tenant.Business
   */
  export type Tenant$BusinessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    where?: BusinessWhereInput
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    cursor?: BusinessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * Tenant.Customer
   */
  export type Tenant$CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Tenant.Invoice
   */
  export type Tenant$InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Tenant.InvoiceSettings
   */
  export type Tenant$InvoiceSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceSettings
     */
    select?: InvoiceSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceSettings
     */
    omit?: InvoiceSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceSettingsInclude<ExtArgs> | null
    where?: InvoiceSettingsWhereInput
  }

  /**
   * Tenant.Order
   */
  export type Tenant$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Tenant.Product
   */
  export type Tenant$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Tenant.TaxRate
   */
  export type Tenant$TaxRateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    where?: TaxRateWhereInput
  }

  /**
   * Tenant.TenantMembership
   */
  export type Tenant$TenantMembershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    where?: TenantMembershipWhereInput
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    cursor?: TenantMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TenantMembershipScalarFieldEnum | TenantMembershipScalarFieldEnum[]
  }

  /**
   * Tenant without action
   */
  export type TenantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tenant
     */
    select?: TenantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tenant
     */
    omit?: TenantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantInclude<ExtArgs> | null
  }


  /**
   * Model TenantMembership
   */

  export type AggregateTenantMembership = {
    _count: TenantMembershipCountAggregateOutputType | null
    _min: TenantMembershipMinAggregateOutputType | null
    _max: TenantMembershipMaxAggregateOutputType | null
  }

  export type TenantMembershipMinAggregateOutputType = {
    id: string | null
    tenantId: string | null
    userId: string | null
    role: $Enums.TenantRole | null
    deleted: boolean | null
  }

  export type TenantMembershipMaxAggregateOutputType = {
    id: string | null
    tenantId: string | null
    userId: string | null
    role: $Enums.TenantRole | null
    deleted: boolean | null
  }

  export type TenantMembershipCountAggregateOutputType = {
    id: number
    tenantId: number
    userId: number
    role: number
    permissions: number
    deleted: number
    _all: number
  }


  export type TenantMembershipMinAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    role?: true
    deleted?: true
  }

  export type TenantMembershipMaxAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    role?: true
    deleted?: true
  }

  export type TenantMembershipCountAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    role?: true
    permissions?: true
    deleted?: true
    _all?: true
  }

  export type TenantMembershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TenantMembership to aggregate.
     */
    where?: TenantMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantMemberships to fetch.
     */
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TenantMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TenantMemberships
    **/
    _count?: true | TenantMembershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantMembershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantMembershipMaxAggregateInputType
  }

  export type GetTenantMembershipAggregateType<T extends TenantMembershipAggregateArgs> = {
        [P in keyof T & keyof AggregateTenantMembership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenantMembership[P]>
      : GetScalarType<T[P], AggregateTenantMembership[P]>
  }




  export type TenantMembershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TenantMembershipWhereInput
    orderBy?: TenantMembershipOrderByWithAggregationInput | TenantMembershipOrderByWithAggregationInput[]
    by: TenantMembershipScalarFieldEnum[] | TenantMembershipScalarFieldEnum
    having?: TenantMembershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantMembershipCountAggregateInputType | true
    _min?: TenantMembershipMinAggregateInputType
    _max?: TenantMembershipMaxAggregateInputType
  }

  export type TenantMembershipGroupByOutputType = {
    id: string
    tenantId: string
    userId: string
    role: $Enums.TenantRole
    permissions: $Enums.Permission[]
    deleted: boolean
    _count: TenantMembershipCountAggregateOutputType | null
    _min: TenantMembershipMinAggregateOutputType | null
    _max: TenantMembershipMaxAggregateOutputType | null
  }

  type GetTenantMembershipGroupByPayload<T extends TenantMembershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TenantMembershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantMembershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantMembershipGroupByOutputType[P]>
            : GetScalarType<T[P], TenantMembershipGroupByOutputType[P]>
        }
      >
    >


  export type TenantMembershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenantMembership"]>

  export type TenantMembershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenantMembership"]>

  export type TenantMembershipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    deleted?: boolean
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenantMembership"]>

  export type TenantMembershipSelectScalar = {
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    deleted?: boolean
  }

  export type TenantMembershipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tenantId" | "userId" | "role" | "permissions" | "deleted", ExtArgs["result"]["tenantMembership"]>
  export type TenantMembershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TenantMembershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type TenantMembershipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Tenant?: boolean | TenantDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TenantMembershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TenantMembership"
    objects: {
      Tenant: Prisma.$TenantPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tenantId: string
      userId: string
      role: $Enums.TenantRole
      permissions: $Enums.Permission[]
      deleted: boolean
    }, ExtArgs["result"]["tenantMembership"]>
    composites: {}
  }

  type TenantMembershipGetPayload<S extends boolean | null | undefined | TenantMembershipDefaultArgs> = $Result.GetResult<Prisma.$TenantMembershipPayload, S>

  type TenantMembershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TenantMembershipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TenantMembershipCountAggregateInputType | true
    }

  export interface TenantMembershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TenantMembership'], meta: { name: 'TenantMembership' } }
    /**
     * Find zero or one TenantMembership that matches the filter.
     * @param {TenantMembershipFindUniqueArgs} args - Arguments to find a TenantMembership
     * @example
     * // Get one TenantMembership
     * const tenantMembership = await prisma.tenantMembership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TenantMembershipFindUniqueArgs>(args: SelectSubset<T, TenantMembershipFindUniqueArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TenantMembership that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TenantMembershipFindUniqueOrThrowArgs} args - Arguments to find a TenantMembership
     * @example
     * // Get one TenantMembership
     * const tenantMembership = await prisma.tenantMembership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TenantMembershipFindUniqueOrThrowArgs>(args: SelectSubset<T, TenantMembershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TenantMembership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipFindFirstArgs} args - Arguments to find a TenantMembership
     * @example
     * // Get one TenantMembership
     * const tenantMembership = await prisma.tenantMembership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TenantMembershipFindFirstArgs>(args?: SelectSubset<T, TenantMembershipFindFirstArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TenantMembership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipFindFirstOrThrowArgs} args - Arguments to find a TenantMembership
     * @example
     * // Get one TenantMembership
     * const tenantMembership = await prisma.tenantMembership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TenantMembershipFindFirstOrThrowArgs>(args?: SelectSubset<T, TenantMembershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TenantMemberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TenantMemberships
     * const tenantMemberships = await prisma.tenantMembership.findMany()
     * 
     * // Get first 10 TenantMemberships
     * const tenantMemberships = await prisma.tenantMembership.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantMembershipWithIdOnly = await prisma.tenantMembership.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TenantMembershipFindManyArgs>(args?: SelectSubset<T, TenantMembershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TenantMembership.
     * @param {TenantMembershipCreateArgs} args - Arguments to create a TenantMembership.
     * @example
     * // Create one TenantMembership
     * const TenantMembership = await prisma.tenantMembership.create({
     *   data: {
     *     // ... data to create a TenantMembership
     *   }
     * })
     * 
     */
    create<T extends TenantMembershipCreateArgs>(args: SelectSubset<T, TenantMembershipCreateArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TenantMemberships.
     * @param {TenantMembershipCreateManyArgs} args - Arguments to create many TenantMemberships.
     * @example
     * // Create many TenantMemberships
     * const tenantMembership = await prisma.tenantMembership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TenantMembershipCreateManyArgs>(args?: SelectSubset<T, TenantMembershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TenantMemberships and returns the data saved in the database.
     * @param {TenantMembershipCreateManyAndReturnArgs} args - Arguments to create many TenantMemberships.
     * @example
     * // Create many TenantMemberships
     * const tenantMembership = await prisma.tenantMembership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TenantMemberships and only return the `id`
     * const tenantMembershipWithIdOnly = await prisma.tenantMembership.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TenantMembershipCreateManyAndReturnArgs>(args?: SelectSubset<T, TenantMembershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TenantMembership.
     * @param {TenantMembershipDeleteArgs} args - Arguments to delete one TenantMembership.
     * @example
     * // Delete one TenantMembership
     * const TenantMembership = await prisma.tenantMembership.delete({
     *   where: {
     *     // ... filter to delete one TenantMembership
     *   }
     * })
     * 
     */
    delete<T extends TenantMembershipDeleteArgs>(args: SelectSubset<T, TenantMembershipDeleteArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TenantMembership.
     * @param {TenantMembershipUpdateArgs} args - Arguments to update one TenantMembership.
     * @example
     * // Update one TenantMembership
     * const tenantMembership = await prisma.tenantMembership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TenantMembershipUpdateArgs>(args: SelectSubset<T, TenantMembershipUpdateArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TenantMemberships.
     * @param {TenantMembershipDeleteManyArgs} args - Arguments to filter TenantMemberships to delete.
     * @example
     * // Delete a few TenantMemberships
     * const { count } = await prisma.tenantMembership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TenantMembershipDeleteManyArgs>(args?: SelectSubset<T, TenantMembershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TenantMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TenantMemberships
     * const tenantMembership = await prisma.tenantMembership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TenantMembershipUpdateManyArgs>(args: SelectSubset<T, TenantMembershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TenantMemberships and returns the data updated in the database.
     * @param {TenantMembershipUpdateManyAndReturnArgs} args - Arguments to update many TenantMemberships.
     * @example
     * // Update many TenantMemberships
     * const tenantMembership = await prisma.tenantMembership.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TenantMemberships and only return the `id`
     * const tenantMembershipWithIdOnly = await prisma.tenantMembership.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TenantMembershipUpdateManyAndReturnArgs>(args: SelectSubset<T, TenantMembershipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TenantMembership.
     * @param {TenantMembershipUpsertArgs} args - Arguments to update or create a TenantMembership.
     * @example
     * // Update or create a TenantMembership
     * const tenantMembership = await prisma.tenantMembership.upsert({
     *   create: {
     *     // ... data to create a TenantMembership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TenantMembership we want to update
     *   }
     * })
     */
    upsert<T extends TenantMembershipUpsertArgs>(args: SelectSubset<T, TenantMembershipUpsertArgs<ExtArgs>>): Prisma__TenantMembershipClient<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TenantMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipCountArgs} args - Arguments to filter TenantMemberships to count.
     * @example
     * // Count the number of TenantMemberships
     * const count = await prisma.tenantMembership.count({
     *   where: {
     *     // ... the filter for the TenantMemberships we want to count
     *   }
     * })
    **/
    count<T extends TenantMembershipCountArgs>(
      args?: Subset<T, TenantMembershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantMembershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TenantMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantMembershipAggregateArgs>(args: Subset<T, TenantMembershipAggregateArgs>): Prisma.PrismaPromise<GetTenantMembershipAggregateType<T>>

    /**
     * Group by TenantMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantMembershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TenantMembershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TenantMembershipGroupByArgs['orderBy'] }
        : { orderBy?: TenantMembershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TenantMembershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantMembershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TenantMembership model
   */
  readonly fields: TenantMembershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TenantMembership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TenantMembershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Tenant<T extends TenantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TenantDefaultArgs<ExtArgs>>): Prisma__TenantClient<$Result.GetResult<Prisma.$TenantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TenantMembership model
   */
  interface TenantMembershipFieldRefs {
    readonly id: FieldRef<"TenantMembership", 'String'>
    readonly tenantId: FieldRef<"TenantMembership", 'String'>
    readonly userId: FieldRef<"TenantMembership", 'String'>
    readonly role: FieldRef<"TenantMembership", 'TenantRole'>
    readonly permissions: FieldRef<"TenantMembership", 'Permission[]'>
    readonly deleted: FieldRef<"TenantMembership", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * TenantMembership findUnique
   */
  export type TenantMembershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter, which TenantMembership to fetch.
     */
    where: TenantMembershipWhereUniqueInput
  }

  /**
   * TenantMembership findUniqueOrThrow
   */
  export type TenantMembershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter, which TenantMembership to fetch.
     */
    where: TenantMembershipWhereUniqueInput
  }

  /**
   * TenantMembership findFirst
   */
  export type TenantMembershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter, which TenantMembership to fetch.
     */
    where?: TenantMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantMemberships to fetch.
     */
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TenantMemberships.
     */
    cursor?: TenantMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TenantMemberships.
     */
    distinct?: TenantMembershipScalarFieldEnum | TenantMembershipScalarFieldEnum[]
  }

  /**
   * TenantMembership findFirstOrThrow
   */
  export type TenantMembershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter, which TenantMembership to fetch.
     */
    where?: TenantMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantMemberships to fetch.
     */
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TenantMemberships.
     */
    cursor?: TenantMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TenantMemberships.
     */
    distinct?: TenantMembershipScalarFieldEnum | TenantMembershipScalarFieldEnum[]
  }

  /**
   * TenantMembership findMany
   */
  export type TenantMembershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter, which TenantMemberships to fetch.
     */
    where?: TenantMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantMemberships to fetch.
     */
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TenantMemberships.
     */
    cursor?: TenantMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantMemberships.
     */
    skip?: number
    distinct?: TenantMembershipScalarFieldEnum | TenantMembershipScalarFieldEnum[]
  }

  /**
   * TenantMembership create
   */
  export type TenantMembershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * The data needed to create a TenantMembership.
     */
    data: XOR<TenantMembershipCreateInput, TenantMembershipUncheckedCreateInput>
  }

  /**
   * TenantMembership createMany
   */
  export type TenantMembershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TenantMemberships.
     */
    data: TenantMembershipCreateManyInput | TenantMembershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TenantMembership createManyAndReturn
   */
  export type TenantMembershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * The data used to create many TenantMemberships.
     */
    data: TenantMembershipCreateManyInput | TenantMembershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TenantMembership update
   */
  export type TenantMembershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * The data needed to update a TenantMembership.
     */
    data: XOR<TenantMembershipUpdateInput, TenantMembershipUncheckedUpdateInput>
    /**
     * Choose, which TenantMembership to update.
     */
    where: TenantMembershipWhereUniqueInput
  }

  /**
   * TenantMembership updateMany
   */
  export type TenantMembershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TenantMemberships.
     */
    data: XOR<TenantMembershipUpdateManyMutationInput, TenantMembershipUncheckedUpdateManyInput>
    /**
     * Filter which TenantMemberships to update
     */
    where?: TenantMembershipWhereInput
    /**
     * Limit how many TenantMemberships to update.
     */
    limit?: number
  }

  /**
   * TenantMembership updateManyAndReturn
   */
  export type TenantMembershipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * The data used to update TenantMemberships.
     */
    data: XOR<TenantMembershipUpdateManyMutationInput, TenantMembershipUncheckedUpdateManyInput>
    /**
     * Filter which TenantMemberships to update
     */
    where?: TenantMembershipWhereInput
    /**
     * Limit how many TenantMemberships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TenantMembership upsert
   */
  export type TenantMembershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * The filter to search for the TenantMembership to update in case it exists.
     */
    where: TenantMembershipWhereUniqueInput
    /**
     * In case the TenantMembership found by the `where` argument doesn't exist, create a new TenantMembership with this data.
     */
    create: XOR<TenantMembershipCreateInput, TenantMembershipUncheckedCreateInput>
    /**
     * In case the TenantMembership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TenantMembershipUpdateInput, TenantMembershipUncheckedUpdateInput>
  }

  /**
   * TenantMembership delete
   */
  export type TenantMembershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    /**
     * Filter which TenantMembership to delete.
     */
    where: TenantMembershipWhereUniqueInput
  }

  /**
   * TenantMembership deleteMany
   */
  export type TenantMembershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TenantMemberships to delete
     */
    where?: TenantMembershipWhereInput
    /**
     * Limit how many TenantMemberships to delete.
     */
    limit?: number
  }

  /**
   * TenantMembership without action
   */
  export type TenantMembershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    clerkId: string | null
    name: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    deleted: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    clerkId: string | null
    name: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    deleted: boolean | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    clerkId: number
    name: number
    role: number
    createdAt: number
    deleted: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    clerkId?: true
    name?: true
    role?: true
    createdAt?: true
    deleted?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    clerkId?: true
    name?: true
    role?: true
    createdAt?: true
    deleted?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    clerkId?: true
    name?: true
    role?: true
    createdAt?: true
    deleted?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    clerkId: string
    name: string | null
    role: $Enums.Role
    createdAt: Date
    deleted: boolean
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    clerkId?: boolean
    name?: boolean
    role?: boolean
    createdAt?: boolean
    deleted?: boolean
    AuditLog?: boolean | User$AuditLogArgs<ExtArgs>
    Business_Business_createdByIdToUser?: boolean | User$Business_Business_createdByIdToUserArgs<ExtArgs>
    Business_Business_updatedByIdToUser?: boolean | User$Business_Business_updatedByIdToUserArgs<ExtArgs>
    Customer_Customer_createdByIdToUser?: boolean | User$Customer_Customer_createdByIdToUserArgs<ExtArgs>
    Customer_Customer_updatedByIdToUser?: boolean | User$Customer_Customer_updatedByIdToUserArgs<ExtArgs>
    Discount_Discount_createdByIdToUser?: boolean | User$Discount_Discount_createdByIdToUserArgs<ExtArgs>
    Discount_Discount_updatedByIdToUser?: boolean | User$Discount_Discount_updatedByIdToUserArgs<ExtArgs>
    Invoice_Invoice_createdByIdToUser?: boolean | User$Invoice_Invoice_createdByIdToUserArgs<ExtArgs>
    Invoice_Invoice_soldByUserIdToUser?: boolean | User$Invoice_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Invoice_Invoice_updatedByIdToUser?: boolean | User$Invoice_Invoice_updatedByIdToUserArgs<ExtArgs>
    Payment_Payment_createdByIdToUser?: boolean | User$Payment_Payment_createdByIdToUserArgs<ExtArgs>
    Payment_Payment_updatedByIdToUser?: boolean | User$Payment_Payment_updatedByIdToUserArgs<ExtArgs>
    Product_Product_createdByIdToUser?: boolean | User$Product_Product_createdByIdToUserArgs<ExtArgs>
    Product_Product_updatedByIdToUser?: boolean | User$Product_Product_updatedByIdToUserArgs<ExtArgs>
    ShippingDetail_ShippingDetail_createdByIdToUser?: boolean | User$ShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs>
    ShippingDetail_ShippingDetail_updatedByIdToUser?: boolean | User$ShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs>
    TaxRate_TaxRate_createdByIdToUser?: boolean | User$TaxRate_TaxRate_createdByIdToUserArgs<ExtArgs>
    TaxRate_TaxRate_updatedByIdToUser?: boolean | User$TaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs>
    TenantMembership?: boolean | User$TenantMembershipArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    clerkId?: boolean
    name?: boolean
    role?: boolean
    createdAt?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    clerkId?: boolean
    name?: boolean
    role?: boolean
    createdAt?: boolean
    deleted?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    clerkId?: boolean
    name?: boolean
    role?: boolean
    createdAt?: boolean
    deleted?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "clerkId" | "name" | "role" | "createdAt" | "deleted", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AuditLog?: boolean | User$AuditLogArgs<ExtArgs>
    Business_Business_createdByIdToUser?: boolean | User$Business_Business_createdByIdToUserArgs<ExtArgs>
    Business_Business_updatedByIdToUser?: boolean | User$Business_Business_updatedByIdToUserArgs<ExtArgs>
    Customer_Customer_createdByIdToUser?: boolean | User$Customer_Customer_createdByIdToUserArgs<ExtArgs>
    Customer_Customer_updatedByIdToUser?: boolean | User$Customer_Customer_updatedByIdToUserArgs<ExtArgs>
    Discount_Discount_createdByIdToUser?: boolean | User$Discount_Discount_createdByIdToUserArgs<ExtArgs>
    Discount_Discount_updatedByIdToUser?: boolean | User$Discount_Discount_updatedByIdToUserArgs<ExtArgs>
    Invoice_Invoice_createdByIdToUser?: boolean | User$Invoice_Invoice_createdByIdToUserArgs<ExtArgs>
    Invoice_Invoice_soldByUserIdToUser?: boolean | User$Invoice_Invoice_soldByUserIdToUserArgs<ExtArgs>
    Invoice_Invoice_updatedByIdToUser?: boolean | User$Invoice_Invoice_updatedByIdToUserArgs<ExtArgs>
    Payment_Payment_createdByIdToUser?: boolean | User$Payment_Payment_createdByIdToUserArgs<ExtArgs>
    Payment_Payment_updatedByIdToUser?: boolean | User$Payment_Payment_updatedByIdToUserArgs<ExtArgs>
    Product_Product_createdByIdToUser?: boolean | User$Product_Product_createdByIdToUserArgs<ExtArgs>
    Product_Product_updatedByIdToUser?: boolean | User$Product_Product_updatedByIdToUserArgs<ExtArgs>
    ShippingDetail_ShippingDetail_createdByIdToUser?: boolean | User$ShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs>
    ShippingDetail_ShippingDetail_updatedByIdToUser?: boolean | User$ShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs>
    TaxRate_TaxRate_createdByIdToUser?: boolean | User$TaxRate_TaxRate_createdByIdToUserArgs<ExtArgs>
    TaxRate_TaxRate_updatedByIdToUser?: boolean | User$TaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs>
    TenantMembership?: boolean | User$TenantMembershipArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      AuditLog: Prisma.$AuditLogPayload<ExtArgs>[]
      Business_Business_createdByIdToUser: Prisma.$BusinessPayload<ExtArgs>[]
      Business_Business_updatedByIdToUser: Prisma.$BusinessPayload<ExtArgs>[]
      Customer_Customer_createdByIdToUser: Prisma.$CustomerPayload<ExtArgs>[]
      Customer_Customer_updatedByIdToUser: Prisma.$CustomerPayload<ExtArgs>[]
      Discount_Discount_createdByIdToUser: Prisma.$DiscountPayload<ExtArgs>[]
      Discount_Discount_updatedByIdToUser: Prisma.$DiscountPayload<ExtArgs>[]
      Invoice_Invoice_createdByIdToUser: Prisma.$InvoicePayload<ExtArgs>[]
      Invoice_Invoice_soldByUserIdToUser: Prisma.$InvoicePayload<ExtArgs>[]
      Invoice_Invoice_updatedByIdToUser: Prisma.$InvoicePayload<ExtArgs>[]
      Payment_Payment_createdByIdToUser: Prisma.$PaymentPayload<ExtArgs>[]
      Payment_Payment_updatedByIdToUser: Prisma.$PaymentPayload<ExtArgs>[]
      Product_Product_createdByIdToUser: Prisma.$ProductPayload<ExtArgs>[]
      Product_Product_updatedByIdToUser: Prisma.$ProductPayload<ExtArgs>[]
      ShippingDetail_ShippingDetail_createdByIdToUser: Prisma.$ShippingDetailPayload<ExtArgs>[]
      ShippingDetail_ShippingDetail_updatedByIdToUser: Prisma.$ShippingDetailPayload<ExtArgs>[]
      TaxRate_TaxRate_createdByIdToUser: Prisma.$TaxRatePayload<ExtArgs>[]
      TaxRate_TaxRate_updatedByIdToUser: Prisma.$TaxRatePayload<ExtArgs>[]
      TenantMembership: Prisma.$TenantMembershipPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      clerkId: string
      name: string | null
      role: $Enums.Role
      createdAt: Date
      deleted: boolean
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AuditLog<T extends User$AuditLogArgs<ExtArgs> = {}>(args?: Subset<T, User$AuditLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Business_Business_createdByIdToUser<T extends User$Business_Business_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Business_Business_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Business_Business_updatedByIdToUser<T extends User$Business_Business_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Business_Business_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Customer_Customer_createdByIdToUser<T extends User$Customer_Customer_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Customer_Customer_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Customer_Customer_updatedByIdToUser<T extends User$Customer_Customer_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Customer_Customer_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Discount_Discount_createdByIdToUser<T extends User$Discount_Discount_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Discount_Discount_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Discount_Discount_updatedByIdToUser<T extends User$Discount_Discount_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Discount_Discount_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Invoice_Invoice_createdByIdToUser<T extends User$Invoice_Invoice_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Invoice_Invoice_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Invoice_Invoice_soldByUserIdToUser<T extends User$Invoice_Invoice_soldByUserIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Invoice_Invoice_soldByUserIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Invoice_Invoice_updatedByIdToUser<T extends User$Invoice_Invoice_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Invoice_Invoice_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Payment_Payment_createdByIdToUser<T extends User$Payment_Payment_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Payment_Payment_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Payment_Payment_updatedByIdToUser<T extends User$Payment_Payment_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Payment_Payment_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product_Product_createdByIdToUser<T extends User$Product_Product_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Product_Product_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product_Product_updatedByIdToUser<T extends User$Product_Product_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Product_Product_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ShippingDetail_ShippingDetail_createdByIdToUser<T extends User$ShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$ShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ShippingDetail_ShippingDetail_updatedByIdToUser<T extends User$ShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$ShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingDetailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaxRate_TaxRate_createdByIdToUser<T extends User$TaxRate_TaxRate_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$TaxRate_TaxRate_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaxRate_TaxRate_updatedByIdToUser<T extends User$TaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$TaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaxRatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TenantMembership<T extends User$TenantMembershipArgs<ExtArgs> = {}>(args?: Subset<T, User$TenantMembershipArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TenantMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly clerkId: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly deleted: FieldRef<"User", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.AuditLog
   */
  export type User$AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditLog
     */
    omit?: AuditLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    cursor?: AuditLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * User.Business_Business_createdByIdToUser
   */
  export type User$Business_Business_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    where?: BusinessWhereInput
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    cursor?: BusinessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * User.Business_Business_updatedByIdToUser
   */
  export type User$Business_Business_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Business
     */
    select?: BusinessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Business
     */
    omit?: BusinessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessInclude<ExtArgs> | null
    where?: BusinessWhereInput
    orderBy?: BusinessOrderByWithRelationInput | BusinessOrderByWithRelationInput[]
    cursor?: BusinessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BusinessScalarFieldEnum | BusinessScalarFieldEnum[]
  }

  /**
   * User.Customer_Customer_createdByIdToUser
   */
  export type User$Customer_Customer_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * User.Customer_Customer_updatedByIdToUser
   */
  export type User$Customer_Customer_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * User.Discount_Discount_createdByIdToUser
   */
  export type User$Discount_Discount_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    where?: DiscountWhereInput
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    cursor?: DiscountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscountScalarFieldEnum | DiscountScalarFieldEnum[]
  }

  /**
   * User.Discount_Discount_updatedByIdToUser
   */
  export type User$Discount_Discount_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Discount
     */
    select?: DiscountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Discount
     */
    omit?: DiscountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscountInclude<ExtArgs> | null
    where?: DiscountWhereInput
    orderBy?: DiscountOrderByWithRelationInput | DiscountOrderByWithRelationInput[]
    cursor?: DiscountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscountScalarFieldEnum | DiscountScalarFieldEnum[]
  }

  /**
   * User.Invoice_Invoice_createdByIdToUser
   */
  export type User$Invoice_Invoice_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * User.Invoice_Invoice_soldByUserIdToUser
   */
  export type User$Invoice_Invoice_soldByUserIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * User.Invoice_Invoice_updatedByIdToUser
   */
  export type User$Invoice_Invoice_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * User.Payment_Payment_createdByIdToUser
   */
  export type User$Payment_Payment_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.Payment_Payment_updatedByIdToUser
   */
  export type User$Payment_Payment_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.Product_Product_createdByIdToUser
   */
  export type User$Product_Product_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.Product_Product_updatedByIdToUser
   */
  export type User$Product_Product_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.ShippingDetail_ShippingDetail_createdByIdToUser
   */
  export type User$ShippingDetail_ShippingDetail_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    where?: ShippingDetailWhereInput
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    cursor?: ShippingDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * User.ShippingDetail_ShippingDetail_updatedByIdToUser
   */
  export type User$ShippingDetail_ShippingDetail_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingDetail
     */
    select?: ShippingDetailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingDetail
     */
    omit?: ShippingDetailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingDetailInclude<ExtArgs> | null
    where?: ShippingDetailWhereInput
    orderBy?: ShippingDetailOrderByWithRelationInput | ShippingDetailOrderByWithRelationInput[]
    cursor?: ShippingDetailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShippingDetailScalarFieldEnum | ShippingDetailScalarFieldEnum[]
  }

  /**
   * User.TaxRate_TaxRate_createdByIdToUser
   */
  export type User$TaxRate_TaxRate_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    where?: TaxRateWhereInput
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    cursor?: TaxRateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaxRateScalarFieldEnum | TaxRateScalarFieldEnum[]
  }

  /**
   * User.TaxRate_TaxRate_updatedByIdToUser
   */
  export type User$TaxRate_TaxRate_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaxRate
     */
    select?: TaxRateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TaxRate
     */
    omit?: TaxRateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaxRateInclude<ExtArgs> | null
    where?: TaxRateWhereInput
    orderBy?: TaxRateOrderByWithRelationInput | TaxRateOrderByWithRelationInput[]
    cursor?: TaxRateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaxRateScalarFieldEnum | TaxRateScalarFieldEnum[]
  }

  /**
   * User.TenantMembership
   */
  export type User$TenantMembershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantMembership
     */
    select?: TenantMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TenantMembership
     */
    omit?: TenantMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TenantMembershipInclude<ExtArgs> | null
    where?: TenantMembershipWhereInput
    orderBy?: TenantMembershipOrderByWithRelationInput | TenantMembershipOrderByWithRelationInput[]
    cursor?: TenantMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TenantMembershipScalarFieldEnum | TenantMembershipScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model ZipCache
   */

  export type AggregateZipCache = {
    _count: ZipCacheCountAggregateOutputType | null
    _avg: ZipCacheAvgAggregateOutputType | null
    _sum: ZipCacheSumAggregateOutputType | null
    _min: ZipCacheMinAggregateOutputType | null
    _max: ZipCacheMaxAggregateOutputType | null
  }

  export type ZipCacheAvgAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type ZipCacheSumAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type ZipCacheMinAggregateOutputType = {
    zip: string | null
    city: string | null
    state: string | null
    lat: number | null
    lng: number | null
    createdAt: Date | null
  }

  export type ZipCacheMaxAggregateOutputType = {
    zip: string | null
    city: string | null
    state: string | null
    lat: number | null
    lng: number | null
    createdAt: Date | null
  }

  export type ZipCacheCountAggregateOutputType = {
    zip: number
    city: number
    state: number
    lat: number
    lng: number
    createdAt: number
    _all: number
  }


  export type ZipCacheAvgAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type ZipCacheSumAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type ZipCacheMinAggregateInputType = {
    zip?: true
    city?: true
    state?: true
    lat?: true
    lng?: true
    createdAt?: true
  }

  export type ZipCacheMaxAggregateInputType = {
    zip?: true
    city?: true
    state?: true
    lat?: true
    lng?: true
    createdAt?: true
  }

  export type ZipCacheCountAggregateInputType = {
    zip?: true
    city?: true
    state?: true
    lat?: true
    lng?: true
    createdAt?: true
    _all?: true
  }

  export type ZipCacheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZipCache to aggregate.
     */
    where?: ZipCacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCaches to fetch.
     */
    orderBy?: ZipCacheOrderByWithRelationInput | ZipCacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ZipCacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCaches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCaches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ZipCaches
    **/
    _count?: true | ZipCacheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ZipCacheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ZipCacheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ZipCacheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ZipCacheMaxAggregateInputType
  }

  export type GetZipCacheAggregateType<T extends ZipCacheAggregateArgs> = {
        [P in keyof T & keyof AggregateZipCache]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateZipCache[P]>
      : GetScalarType<T[P], AggregateZipCache[P]>
  }




  export type ZipCacheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ZipCacheWhereInput
    orderBy?: ZipCacheOrderByWithAggregationInput | ZipCacheOrderByWithAggregationInput[]
    by: ZipCacheScalarFieldEnum[] | ZipCacheScalarFieldEnum
    having?: ZipCacheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ZipCacheCountAggregateInputType | true
    _avg?: ZipCacheAvgAggregateInputType
    _sum?: ZipCacheSumAggregateInputType
    _min?: ZipCacheMinAggregateInputType
    _max?: ZipCacheMaxAggregateInputType
  }

  export type ZipCacheGroupByOutputType = {
    zip: string
    city: string
    state: string
    lat: number | null
    lng: number | null
    createdAt: Date
    _count: ZipCacheCountAggregateOutputType | null
    _avg: ZipCacheAvgAggregateOutputType | null
    _sum: ZipCacheSumAggregateOutputType | null
    _min: ZipCacheMinAggregateOutputType | null
    _max: ZipCacheMaxAggregateOutputType | null
  }

  type GetZipCacheGroupByPayload<T extends ZipCacheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ZipCacheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ZipCacheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ZipCacheGroupByOutputType[P]>
            : GetScalarType<T[P], ZipCacheGroupByOutputType[P]>
        }
      >
    >


  export type ZipCacheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    zip?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lng?: boolean
    createdAt?: boolean
    ZipCity?: boolean | ZipCache$ZipCityArgs<ExtArgs>
    _count?: boolean | ZipCacheCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["zipCache"]>

  export type ZipCacheSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    zip?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lng?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["zipCache"]>

  export type ZipCacheSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    zip?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lng?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["zipCache"]>

  export type ZipCacheSelectScalar = {
    zip?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lng?: boolean
    createdAt?: boolean
  }

  export type ZipCacheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"zip" | "city" | "state" | "lat" | "lng" | "createdAt", ExtArgs["result"]["zipCache"]>
  export type ZipCacheInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ZipCity?: boolean | ZipCache$ZipCityArgs<ExtArgs>
    _count?: boolean | ZipCacheCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ZipCacheIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ZipCacheIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ZipCachePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ZipCache"
    objects: {
      ZipCity: Prisma.$ZipCityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      zip: string
      city: string
      state: string
      lat: number | null
      lng: number | null
      createdAt: Date
    }, ExtArgs["result"]["zipCache"]>
    composites: {}
  }

  type ZipCacheGetPayload<S extends boolean | null | undefined | ZipCacheDefaultArgs> = $Result.GetResult<Prisma.$ZipCachePayload, S>

  type ZipCacheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ZipCacheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ZipCacheCountAggregateInputType | true
    }

  export interface ZipCacheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ZipCache'], meta: { name: 'ZipCache' } }
    /**
     * Find zero or one ZipCache that matches the filter.
     * @param {ZipCacheFindUniqueArgs} args - Arguments to find a ZipCache
     * @example
     * // Get one ZipCache
     * const zipCache = await prisma.zipCache.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ZipCacheFindUniqueArgs>(args: SelectSubset<T, ZipCacheFindUniqueArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ZipCache that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ZipCacheFindUniqueOrThrowArgs} args - Arguments to find a ZipCache
     * @example
     * // Get one ZipCache
     * const zipCache = await prisma.zipCache.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ZipCacheFindUniqueOrThrowArgs>(args: SelectSubset<T, ZipCacheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ZipCache that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheFindFirstArgs} args - Arguments to find a ZipCache
     * @example
     * // Get one ZipCache
     * const zipCache = await prisma.zipCache.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ZipCacheFindFirstArgs>(args?: SelectSubset<T, ZipCacheFindFirstArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ZipCache that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheFindFirstOrThrowArgs} args - Arguments to find a ZipCache
     * @example
     * // Get one ZipCache
     * const zipCache = await prisma.zipCache.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ZipCacheFindFirstOrThrowArgs>(args?: SelectSubset<T, ZipCacheFindFirstOrThrowArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ZipCaches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ZipCaches
     * const zipCaches = await prisma.zipCache.findMany()
     * 
     * // Get first 10 ZipCaches
     * const zipCaches = await prisma.zipCache.findMany({ take: 10 })
     * 
     * // Only select the `zip`
     * const zipCacheWithZipOnly = await prisma.zipCache.findMany({ select: { zip: true } })
     * 
     */
    findMany<T extends ZipCacheFindManyArgs>(args?: SelectSubset<T, ZipCacheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ZipCache.
     * @param {ZipCacheCreateArgs} args - Arguments to create a ZipCache.
     * @example
     * // Create one ZipCache
     * const ZipCache = await prisma.zipCache.create({
     *   data: {
     *     // ... data to create a ZipCache
     *   }
     * })
     * 
     */
    create<T extends ZipCacheCreateArgs>(args: SelectSubset<T, ZipCacheCreateArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ZipCaches.
     * @param {ZipCacheCreateManyArgs} args - Arguments to create many ZipCaches.
     * @example
     * // Create many ZipCaches
     * const zipCache = await prisma.zipCache.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ZipCacheCreateManyArgs>(args?: SelectSubset<T, ZipCacheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ZipCaches and returns the data saved in the database.
     * @param {ZipCacheCreateManyAndReturnArgs} args - Arguments to create many ZipCaches.
     * @example
     * // Create many ZipCaches
     * const zipCache = await prisma.zipCache.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ZipCaches and only return the `zip`
     * const zipCacheWithZipOnly = await prisma.zipCache.createManyAndReturn({
     *   select: { zip: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ZipCacheCreateManyAndReturnArgs>(args?: SelectSubset<T, ZipCacheCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ZipCache.
     * @param {ZipCacheDeleteArgs} args - Arguments to delete one ZipCache.
     * @example
     * // Delete one ZipCache
     * const ZipCache = await prisma.zipCache.delete({
     *   where: {
     *     // ... filter to delete one ZipCache
     *   }
     * })
     * 
     */
    delete<T extends ZipCacheDeleteArgs>(args: SelectSubset<T, ZipCacheDeleteArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ZipCache.
     * @param {ZipCacheUpdateArgs} args - Arguments to update one ZipCache.
     * @example
     * // Update one ZipCache
     * const zipCache = await prisma.zipCache.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ZipCacheUpdateArgs>(args: SelectSubset<T, ZipCacheUpdateArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ZipCaches.
     * @param {ZipCacheDeleteManyArgs} args - Arguments to filter ZipCaches to delete.
     * @example
     * // Delete a few ZipCaches
     * const { count } = await prisma.zipCache.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ZipCacheDeleteManyArgs>(args?: SelectSubset<T, ZipCacheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ZipCaches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ZipCaches
     * const zipCache = await prisma.zipCache.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ZipCacheUpdateManyArgs>(args: SelectSubset<T, ZipCacheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ZipCaches and returns the data updated in the database.
     * @param {ZipCacheUpdateManyAndReturnArgs} args - Arguments to update many ZipCaches.
     * @example
     * // Update many ZipCaches
     * const zipCache = await prisma.zipCache.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ZipCaches and only return the `zip`
     * const zipCacheWithZipOnly = await prisma.zipCache.updateManyAndReturn({
     *   select: { zip: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ZipCacheUpdateManyAndReturnArgs>(args: SelectSubset<T, ZipCacheUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ZipCache.
     * @param {ZipCacheUpsertArgs} args - Arguments to update or create a ZipCache.
     * @example
     * // Update or create a ZipCache
     * const zipCache = await prisma.zipCache.upsert({
     *   create: {
     *     // ... data to create a ZipCache
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ZipCache we want to update
     *   }
     * })
     */
    upsert<T extends ZipCacheUpsertArgs>(args: SelectSubset<T, ZipCacheUpsertArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ZipCaches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheCountArgs} args - Arguments to filter ZipCaches to count.
     * @example
     * // Count the number of ZipCaches
     * const count = await prisma.zipCache.count({
     *   where: {
     *     // ... the filter for the ZipCaches we want to count
     *   }
     * })
    **/
    count<T extends ZipCacheCountArgs>(
      args?: Subset<T, ZipCacheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ZipCacheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ZipCache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ZipCacheAggregateArgs>(args: Subset<T, ZipCacheAggregateArgs>): Prisma.PrismaPromise<GetZipCacheAggregateType<T>>

    /**
     * Group by ZipCache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCacheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ZipCacheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ZipCacheGroupByArgs['orderBy'] }
        : { orderBy?: ZipCacheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ZipCacheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetZipCacheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ZipCache model
   */
  readonly fields: ZipCacheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ZipCache.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ZipCacheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ZipCity<T extends ZipCache$ZipCityArgs<ExtArgs> = {}>(args?: Subset<T, ZipCache$ZipCityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ZipCache model
   */
  interface ZipCacheFieldRefs {
    readonly zip: FieldRef<"ZipCache", 'String'>
    readonly city: FieldRef<"ZipCache", 'String'>
    readonly state: FieldRef<"ZipCache", 'String'>
    readonly lat: FieldRef<"ZipCache", 'Float'>
    readonly lng: FieldRef<"ZipCache", 'Float'>
    readonly createdAt: FieldRef<"ZipCache", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ZipCache findUnique
   */
  export type ZipCacheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter, which ZipCache to fetch.
     */
    where: ZipCacheWhereUniqueInput
  }

  /**
   * ZipCache findUniqueOrThrow
   */
  export type ZipCacheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter, which ZipCache to fetch.
     */
    where: ZipCacheWhereUniqueInput
  }

  /**
   * ZipCache findFirst
   */
  export type ZipCacheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter, which ZipCache to fetch.
     */
    where?: ZipCacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCaches to fetch.
     */
    orderBy?: ZipCacheOrderByWithRelationInput | ZipCacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZipCaches.
     */
    cursor?: ZipCacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCaches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCaches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZipCaches.
     */
    distinct?: ZipCacheScalarFieldEnum | ZipCacheScalarFieldEnum[]
  }

  /**
   * ZipCache findFirstOrThrow
   */
  export type ZipCacheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter, which ZipCache to fetch.
     */
    where?: ZipCacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCaches to fetch.
     */
    orderBy?: ZipCacheOrderByWithRelationInput | ZipCacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZipCaches.
     */
    cursor?: ZipCacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCaches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCaches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZipCaches.
     */
    distinct?: ZipCacheScalarFieldEnum | ZipCacheScalarFieldEnum[]
  }

  /**
   * ZipCache findMany
   */
  export type ZipCacheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter, which ZipCaches to fetch.
     */
    where?: ZipCacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCaches to fetch.
     */
    orderBy?: ZipCacheOrderByWithRelationInput | ZipCacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ZipCaches.
     */
    cursor?: ZipCacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCaches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCaches.
     */
    skip?: number
    distinct?: ZipCacheScalarFieldEnum | ZipCacheScalarFieldEnum[]
  }

  /**
   * ZipCache create
   */
  export type ZipCacheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * The data needed to create a ZipCache.
     */
    data: XOR<ZipCacheCreateInput, ZipCacheUncheckedCreateInput>
  }

  /**
   * ZipCache createMany
   */
  export type ZipCacheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ZipCaches.
     */
    data: ZipCacheCreateManyInput | ZipCacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ZipCache createManyAndReturn
   */
  export type ZipCacheCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * The data used to create many ZipCaches.
     */
    data: ZipCacheCreateManyInput | ZipCacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ZipCache update
   */
  export type ZipCacheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * The data needed to update a ZipCache.
     */
    data: XOR<ZipCacheUpdateInput, ZipCacheUncheckedUpdateInput>
    /**
     * Choose, which ZipCache to update.
     */
    where: ZipCacheWhereUniqueInput
  }

  /**
   * ZipCache updateMany
   */
  export type ZipCacheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ZipCaches.
     */
    data: XOR<ZipCacheUpdateManyMutationInput, ZipCacheUncheckedUpdateManyInput>
    /**
     * Filter which ZipCaches to update
     */
    where?: ZipCacheWhereInput
    /**
     * Limit how many ZipCaches to update.
     */
    limit?: number
  }

  /**
   * ZipCache updateManyAndReturn
   */
  export type ZipCacheUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * The data used to update ZipCaches.
     */
    data: XOR<ZipCacheUpdateManyMutationInput, ZipCacheUncheckedUpdateManyInput>
    /**
     * Filter which ZipCaches to update
     */
    where?: ZipCacheWhereInput
    /**
     * Limit how many ZipCaches to update.
     */
    limit?: number
  }

  /**
   * ZipCache upsert
   */
  export type ZipCacheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * The filter to search for the ZipCache to update in case it exists.
     */
    where: ZipCacheWhereUniqueInput
    /**
     * In case the ZipCache found by the `where` argument doesn't exist, create a new ZipCache with this data.
     */
    create: XOR<ZipCacheCreateInput, ZipCacheUncheckedCreateInput>
    /**
     * In case the ZipCache was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ZipCacheUpdateInput, ZipCacheUncheckedUpdateInput>
  }

  /**
   * ZipCache delete
   */
  export type ZipCacheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
    /**
     * Filter which ZipCache to delete.
     */
    where: ZipCacheWhereUniqueInput
  }

  /**
   * ZipCache deleteMany
   */
  export type ZipCacheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZipCaches to delete
     */
    where?: ZipCacheWhereInput
    /**
     * Limit how many ZipCaches to delete.
     */
    limit?: number
  }

  /**
   * ZipCache.ZipCity
   */
  export type ZipCache$ZipCityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    where?: ZipCityWhereInput
    orderBy?: ZipCityOrderByWithRelationInput | ZipCityOrderByWithRelationInput[]
    cursor?: ZipCityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ZipCityScalarFieldEnum | ZipCityScalarFieldEnum[]
  }

  /**
   * ZipCache without action
   */
  export type ZipCacheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCache
     */
    select?: ZipCacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCache
     */
    omit?: ZipCacheOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCacheInclude<ExtArgs> | null
  }


  /**
   * Model ZipCity
   */

  export type AggregateZipCity = {
    _count: ZipCityCountAggregateOutputType | null
    _avg: ZipCityAvgAggregateOutputType | null
    _sum: ZipCitySumAggregateOutputType | null
    _min: ZipCityMinAggregateOutputType | null
    _max: ZipCityMaxAggregateOutputType | null
  }

  export type ZipCityAvgAggregateOutputType = {
    id: number | null
  }

  export type ZipCitySumAggregateOutputType = {
    id: number | null
  }

  export type ZipCityMinAggregateOutputType = {
    id: number | null
    name: string | null
    state: string | null
    zipCode: string | null
  }

  export type ZipCityMaxAggregateOutputType = {
    id: number | null
    name: string | null
    state: string | null
    zipCode: string | null
  }

  export type ZipCityCountAggregateOutputType = {
    id: number
    name: number
    state: number
    zipCode: number
    _all: number
  }


  export type ZipCityAvgAggregateInputType = {
    id?: true
  }

  export type ZipCitySumAggregateInputType = {
    id?: true
  }

  export type ZipCityMinAggregateInputType = {
    id?: true
    name?: true
    state?: true
    zipCode?: true
  }

  export type ZipCityMaxAggregateInputType = {
    id?: true
    name?: true
    state?: true
    zipCode?: true
  }

  export type ZipCityCountAggregateInputType = {
    id?: true
    name?: true
    state?: true
    zipCode?: true
    _all?: true
  }

  export type ZipCityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZipCity to aggregate.
     */
    where?: ZipCityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCities to fetch.
     */
    orderBy?: ZipCityOrderByWithRelationInput | ZipCityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ZipCityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ZipCities
    **/
    _count?: true | ZipCityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ZipCityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ZipCitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ZipCityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ZipCityMaxAggregateInputType
  }

  export type GetZipCityAggregateType<T extends ZipCityAggregateArgs> = {
        [P in keyof T & keyof AggregateZipCity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateZipCity[P]>
      : GetScalarType<T[P], AggregateZipCity[P]>
  }




  export type ZipCityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ZipCityWhereInput
    orderBy?: ZipCityOrderByWithAggregationInput | ZipCityOrderByWithAggregationInput[]
    by: ZipCityScalarFieldEnum[] | ZipCityScalarFieldEnum
    having?: ZipCityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ZipCityCountAggregateInputType | true
    _avg?: ZipCityAvgAggregateInputType
    _sum?: ZipCitySumAggregateInputType
    _min?: ZipCityMinAggregateInputType
    _max?: ZipCityMaxAggregateInputType
  }

  export type ZipCityGroupByOutputType = {
    id: number
    name: string
    state: string
    zipCode: string
    _count: ZipCityCountAggregateOutputType | null
    _avg: ZipCityAvgAggregateOutputType | null
    _sum: ZipCitySumAggregateOutputType | null
    _min: ZipCityMinAggregateOutputType | null
    _max: ZipCityMaxAggregateOutputType | null
  }

  type GetZipCityGroupByPayload<T extends ZipCityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ZipCityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ZipCityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ZipCityGroupByOutputType[P]>
            : GetScalarType<T[P], ZipCityGroupByOutputType[P]>
        }
      >
    >


  export type ZipCitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    state?: boolean
    zipCode?: boolean
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["zipCity"]>

  export type ZipCitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    state?: boolean
    zipCode?: boolean
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["zipCity"]>

  export type ZipCitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    state?: boolean
    zipCode?: boolean
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["zipCity"]>

  export type ZipCitySelectScalar = {
    id?: boolean
    name?: boolean
    state?: boolean
    zipCode?: boolean
  }

  export type ZipCityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "state" | "zipCode", ExtArgs["result"]["zipCity"]>
  export type ZipCityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }
  export type ZipCityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }
  export type ZipCityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ZipCache?: boolean | ZipCacheDefaultArgs<ExtArgs>
  }

  export type $ZipCityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ZipCity"
    objects: {
      ZipCache: Prisma.$ZipCachePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      state: string
      zipCode: string
    }, ExtArgs["result"]["zipCity"]>
    composites: {}
  }

  type ZipCityGetPayload<S extends boolean | null | undefined | ZipCityDefaultArgs> = $Result.GetResult<Prisma.$ZipCityPayload, S>

  type ZipCityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ZipCityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ZipCityCountAggregateInputType | true
    }

  export interface ZipCityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ZipCity'], meta: { name: 'ZipCity' } }
    /**
     * Find zero or one ZipCity that matches the filter.
     * @param {ZipCityFindUniqueArgs} args - Arguments to find a ZipCity
     * @example
     * // Get one ZipCity
     * const zipCity = await prisma.zipCity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ZipCityFindUniqueArgs>(args: SelectSubset<T, ZipCityFindUniqueArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ZipCity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ZipCityFindUniqueOrThrowArgs} args - Arguments to find a ZipCity
     * @example
     * // Get one ZipCity
     * const zipCity = await prisma.zipCity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ZipCityFindUniqueOrThrowArgs>(args: SelectSubset<T, ZipCityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ZipCity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityFindFirstArgs} args - Arguments to find a ZipCity
     * @example
     * // Get one ZipCity
     * const zipCity = await prisma.zipCity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ZipCityFindFirstArgs>(args?: SelectSubset<T, ZipCityFindFirstArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ZipCity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityFindFirstOrThrowArgs} args - Arguments to find a ZipCity
     * @example
     * // Get one ZipCity
     * const zipCity = await prisma.zipCity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ZipCityFindFirstOrThrowArgs>(args?: SelectSubset<T, ZipCityFindFirstOrThrowArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ZipCities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ZipCities
     * const zipCities = await prisma.zipCity.findMany()
     * 
     * // Get first 10 ZipCities
     * const zipCities = await prisma.zipCity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const zipCityWithIdOnly = await prisma.zipCity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ZipCityFindManyArgs>(args?: SelectSubset<T, ZipCityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ZipCity.
     * @param {ZipCityCreateArgs} args - Arguments to create a ZipCity.
     * @example
     * // Create one ZipCity
     * const ZipCity = await prisma.zipCity.create({
     *   data: {
     *     // ... data to create a ZipCity
     *   }
     * })
     * 
     */
    create<T extends ZipCityCreateArgs>(args: SelectSubset<T, ZipCityCreateArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ZipCities.
     * @param {ZipCityCreateManyArgs} args - Arguments to create many ZipCities.
     * @example
     * // Create many ZipCities
     * const zipCity = await prisma.zipCity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ZipCityCreateManyArgs>(args?: SelectSubset<T, ZipCityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ZipCities and returns the data saved in the database.
     * @param {ZipCityCreateManyAndReturnArgs} args - Arguments to create many ZipCities.
     * @example
     * // Create many ZipCities
     * const zipCity = await prisma.zipCity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ZipCities and only return the `id`
     * const zipCityWithIdOnly = await prisma.zipCity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ZipCityCreateManyAndReturnArgs>(args?: SelectSubset<T, ZipCityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ZipCity.
     * @param {ZipCityDeleteArgs} args - Arguments to delete one ZipCity.
     * @example
     * // Delete one ZipCity
     * const ZipCity = await prisma.zipCity.delete({
     *   where: {
     *     // ... filter to delete one ZipCity
     *   }
     * })
     * 
     */
    delete<T extends ZipCityDeleteArgs>(args: SelectSubset<T, ZipCityDeleteArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ZipCity.
     * @param {ZipCityUpdateArgs} args - Arguments to update one ZipCity.
     * @example
     * // Update one ZipCity
     * const zipCity = await prisma.zipCity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ZipCityUpdateArgs>(args: SelectSubset<T, ZipCityUpdateArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ZipCities.
     * @param {ZipCityDeleteManyArgs} args - Arguments to filter ZipCities to delete.
     * @example
     * // Delete a few ZipCities
     * const { count } = await prisma.zipCity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ZipCityDeleteManyArgs>(args?: SelectSubset<T, ZipCityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ZipCities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ZipCities
     * const zipCity = await prisma.zipCity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ZipCityUpdateManyArgs>(args: SelectSubset<T, ZipCityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ZipCities and returns the data updated in the database.
     * @param {ZipCityUpdateManyAndReturnArgs} args - Arguments to update many ZipCities.
     * @example
     * // Update many ZipCities
     * const zipCity = await prisma.zipCity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ZipCities and only return the `id`
     * const zipCityWithIdOnly = await prisma.zipCity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ZipCityUpdateManyAndReturnArgs>(args: SelectSubset<T, ZipCityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ZipCity.
     * @param {ZipCityUpsertArgs} args - Arguments to update or create a ZipCity.
     * @example
     * // Update or create a ZipCity
     * const zipCity = await prisma.zipCity.upsert({
     *   create: {
     *     // ... data to create a ZipCity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ZipCity we want to update
     *   }
     * })
     */
    upsert<T extends ZipCityUpsertArgs>(args: SelectSubset<T, ZipCityUpsertArgs<ExtArgs>>): Prisma__ZipCityClient<$Result.GetResult<Prisma.$ZipCityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ZipCities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityCountArgs} args - Arguments to filter ZipCities to count.
     * @example
     * // Count the number of ZipCities
     * const count = await prisma.zipCity.count({
     *   where: {
     *     // ... the filter for the ZipCities we want to count
     *   }
     * })
    **/
    count<T extends ZipCityCountArgs>(
      args?: Subset<T, ZipCityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ZipCityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ZipCity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ZipCityAggregateArgs>(args: Subset<T, ZipCityAggregateArgs>): Prisma.PrismaPromise<GetZipCityAggregateType<T>>

    /**
     * Group by ZipCity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZipCityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ZipCityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ZipCityGroupByArgs['orderBy'] }
        : { orderBy?: ZipCityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ZipCityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetZipCityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ZipCity model
   */
  readonly fields: ZipCityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ZipCity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ZipCityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ZipCache<T extends ZipCacheDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ZipCacheDefaultArgs<ExtArgs>>): Prisma__ZipCacheClient<$Result.GetResult<Prisma.$ZipCachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ZipCity model
   */
  interface ZipCityFieldRefs {
    readonly id: FieldRef<"ZipCity", 'Int'>
    readonly name: FieldRef<"ZipCity", 'String'>
    readonly state: FieldRef<"ZipCity", 'String'>
    readonly zipCode: FieldRef<"ZipCity", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ZipCity findUnique
   */
  export type ZipCityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter, which ZipCity to fetch.
     */
    where: ZipCityWhereUniqueInput
  }

  /**
   * ZipCity findUniqueOrThrow
   */
  export type ZipCityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter, which ZipCity to fetch.
     */
    where: ZipCityWhereUniqueInput
  }

  /**
   * ZipCity findFirst
   */
  export type ZipCityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter, which ZipCity to fetch.
     */
    where?: ZipCityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCities to fetch.
     */
    orderBy?: ZipCityOrderByWithRelationInput | ZipCityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZipCities.
     */
    cursor?: ZipCityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZipCities.
     */
    distinct?: ZipCityScalarFieldEnum | ZipCityScalarFieldEnum[]
  }

  /**
   * ZipCity findFirstOrThrow
   */
  export type ZipCityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter, which ZipCity to fetch.
     */
    where?: ZipCityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCities to fetch.
     */
    orderBy?: ZipCityOrderByWithRelationInput | ZipCityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZipCities.
     */
    cursor?: ZipCityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZipCities.
     */
    distinct?: ZipCityScalarFieldEnum | ZipCityScalarFieldEnum[]
  }

  /**
   * ZipCity findMany
   */
  export type ZipCityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter, which ZipCities to fetch.
     */
    where?: ZipCityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZipCities to fetch.
     */
    orderBy?: ZipCityOrderByWithRelationInput | ZipCityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ZipCities.
     */
    cursor?: ZipCityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZipCities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZipCities.
     */
    skip?: number
    distinct?: ZipCityScalarFieldEnum | ZipCityScalarFieldEnum[]
  }

  /**
   * ZipCity create
   */
  export type ZipCityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * The data needed to create a ZipCity.
     */
    data: XOR<ZipCityCreateInput, ZipCityUncheckedCreateInput>
  }

  /**
   * ZipCity createMany
   */
  export type ZipCityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ZipCities.
     */
    data: ZipCityCreateManyInput | ZipCityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ZipCity createManyAndReturn
   */
  export type ZipCityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * The data used to create many ZipCities.
     */
    data: ZipCityCreateManyInput | ZipCityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ZipCity update
   */
  export type ZipCityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * The data needed to update a ZipCity.
     */
    data: XOR<ZipCityUpdateInput, ZipCityUncheckedUpdateInput>
    /**
     * Choose, which ZipCity to update.
     */
    where: ZipCityWhereUniqueInput
  }

  /**
   * ZipCity updateMany
   */
  export type ZipCityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ZipCities.
     */
    data: XOR<ZipCityUpdateManyMutationInput, ZipCityUncheckedUpdateManyInput>
    /**
     * Filter which ZipCities to update
     */
    where?: ZipCityWhereInput
    /**
     * Limit how many ZipCities to update.
     */
    limit?: number
  }

  /**
   * ZipCity updateManyAndReturn
   */
  export type ZipCityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * The data used to update ZipCities.
     */
    data: XOR<ZipCityUpdateManyMutationInput, ZipCityUncheckedUpdateManyInput>
    /**
     * Filter which ZipCities to update
     */
    where?: ZipCityWhereInput
    /**
     * Limit how many ZipCities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ZipCity upsert
   */
  export type ZipCityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * The filter to search for the ZipCity to update in case it exists.
     */
    where: ZipCityWhereUniqueInput
    /**
     * In case the ZipCity found by the `where` argument doesn't exist, create a new ZipCity with this data.
     */
    create: XOR<ZipCityCreateInput, ZipCityUncheckedCreateInput>
    /**
     * In case the ZipCity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ZipCityUpdateInput, ZipCityUncheckedUpdateInput>
  }

  /**
   * ZipCity delete
   */
  export type ZipCityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
    /**
     * Filter which ZipCity to delete.
     */
    where: ZipCityWhereUniqueInput
  }

  /**
   * ZipCity deleteMany
   */
  export type ZipCityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZipCities to delete
     */
    where?: ZipCityWhereInput
    /**
     * Limit how many ZipCities to delete.
     */
    limit?: number
  }

  /**
   * ZipCity without action
   */
  export type ZipCityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZipCity
     */
    select?: ZipCitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ZipCity
     */
    omit?: ZipCityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZipCityInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    action: 'action',
    userId: 'userId',
    after: 'after',
    before: 'before',
    entityId: 'entityId',
    entityType: 'entityType',
    performedAt: 'performedAt',
    payload: 'payload',
    deleted: 'deleted'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const BankDetailScalarFieldEnum: {
    id: 'id',
    bankName: 'bankName',
    accountNumber: 'accountNumber',
    iban: 'iban',
    bic: 'bic',
    deleted: 'deleted'
  };

  export type BankDetailScalarFieldEnum = (typeof BankDetailScalarFieldEnum)[keyof typeof BankDetailScalarFieldEnum]


  export const BusinessScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    tenantId: 'tenantId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    businessType: 'businessType',
    businessCategory: 'businessCategory',
    businessSubcategory: 'businessSubcategory',
    legalBusinessName: 'legalBusinessName',
    doingBusinessAs: 'doingBusinessAs',
    ein: 'ein',
    businessState: 'businessState',
    onlineStatus: 'onlineStatus',
    onlineLink: 'onlineLink',
    businessEmail: 'businessEmail',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    zip: 'zip',
    city: 'city',
    isManualEntry: 'isManualEntry',
    deleted: 'deleted'
  };

  export type BusinessScalarFieldEnum = (typeof BusinessScalarFieldEnum)[keyof typeof BusinessScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    address: 'address',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    tenantId: 'tenantId',
    deleted: 'deleted'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const DiscountScalarFieldEnum: {
    id: 'id',
    name: 'name',
    discountValue: 'discountValue',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deleted: 'deleted'
  };

  export type DiscountScalarFieldEnum = (typeof DiscountScalarFieldEnum)[keyof typeof DiscountScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    id: 'id',
    number: 'number',
    amount: 'amount',
    status: 'status',
    paymentType: 'paymentType',
    orderId: 'orderId',
    parentInvoiceId: 'parentInvoiceId',
    customerId: 'customerId',
    tenantId: 'tenantId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    soldByUserId: 'soldByUserId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    taxExempt: 'taxExempt',
    taxExemptId: 'taxExemptId'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const InvoiceDetailScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    productId: 'productId',
    quantity: 'quantity',
    taxId: 'taxId',
    discountId: 'discountId',
    lineTotal: 'lineTotal'
  };

  export type InvoiceDetailScalarFieldEnum = (typeof InvoiceDetailScalarFieldEnum)[keyof typeof InvoiceDetailScalarFieldEnum]


  export const InvoiceSettingsScalarFieldEnum: {
    id: 'id',
    tenantId: 'tenantId',
    layout: 'layout',
    primaryColor: 'primaryColor',
    includeCustomerInfo: 'includeCustomerInfo',
    includePaymentTerms: 'includePaymentTerms',
    includeDueDate: 'includeDueDate',
    includeNotes: 'includeNotes',
    deleted: 'deleted'
  };

  export type InvoiceSettingsScalarFieldEnum = (typeof InvoiceSettingsScalarFieldEnum)[keyof typeof InvoiceSettingsScalarFieldEnum]


  export const InvoiceVersionScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    number: 'number',
    data: 'data',
    modifiedAt: 'modifiedAt',
    modifiedBy: 'modifiedBy'
  };

  export type InvoiceVersionScalarFieldEnum = (typeof InvoiceVersionScalarFieldEnum)[keyof typeof InvoiceVersionScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    customerId: 'customerId',
    tenantId: 'tenantId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    sku: 'sku',
    name: 'name',
    description: 'description',
    variant: 'variant',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    imageUrl: 'imageUrl',
    specs: 'specs'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    amount: 'amount',
    date: 'date',
    method: 'method',
    status: 'status',
    reference: 'reference',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deleted: 'deleted'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const PaymentLogScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    logMessage: 'logMessage'
  };

  export type PaymentLogScalarFieldEnum = (typeof PaymentLogScalarFieldEnum)[keyof typeof PaymentLogScalarFieldEnum]


  export const PaymentMethodScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    deleted: 'deleted'
  };

  export type PaymentMethodScalarFieldEnum = (typeof PaymentMethodScalarFieldEnum)[keyof typeof PaymentMethodScalarFieldEnum]


  export const PaymentStatusScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    deleted: 'deleted'
  };

  export type PaymentStatusScalarFieldEnum = (typeof PaymentStatusScalarFieldEnum)[keyof typeof PaymentStatusScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    price: 'price',
    imageUrl: 'imageUrl',
    variant: 'variant',
    sku: 'sku',
    barcode: 'barcode',
    qrCodeUrl: 'qrCodeUrl',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    description: 'description',
    tenantId: 'tenantId',
    archivedAt: 'archivedAt',
    category: 'category',
    isActive: 'isActive',
    metaDesc: 'metaDesc',
    metaTitle: 'metaTitle',
    metadata: 'metadata',
    primaryIdentifierType: 'primaryIdentifierType',
    primaryIdentifierValue: 'primaryIdentifierValue',
    stockAlertAt: 'stockAlertAt',
    stockQuantity: 'stockQuantity',
    tags: 'tags',
    unit: 'unit',
    visibility: 'visibility',
    slug: 'slug',
    deleted: 'deleted'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductIdentifierScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    type: 'type',
    value: 'value',
    imageUrl: 'imageUrl'
  };

  export type ProductIdentifierScalarFieldEnum = (typeof ProductIdentifierScalarFieldEnum)[keyof typeof ProductIdentifierScalarFieldEnum]


  export const ProductVariantScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    name: 'name',
    sku: 'sku',
    barcode: 'barcode',
    price: 'price',
    imageUrl: 'imageUrl',
    specs: 'specs',
    deleted: 'deleted'
  };

  export type ProductVariantScalarFieldEnum = (typeof ProductVariantScalarFieldEnum)[keyof typeof ProductVariantScalarFieldEnum]


  export const ShippingDetailScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    address: 'address',
    shippingDate: 'shippingDate',
    estimatedArrival: 'estimatedArrival',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deleted: 'deleted'
  };

  export type ShippingDetailScalarFieldEnum = (typeof ShippingDetailScalarFieldEnum)[keyof typeof ShippingDetailScalarFieldEnum]


  export const TaxRateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    rate: 'rate',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deleted: 'deleted'
  };

  export type TaxRateScalarFieldEnum = (typeof TaxRateScalarFieldEnum)[keyof typeof TaxRateScalarFieldEnum]


  export const TenantScalarFieldEnum: {
    id: 'id',
    name: 'name',
    companyName: 'companyName',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    city: 'city',
    state: 'state',
    zip: 'zip',
    zipPlus4: 'zipPlus4',
    email: 'email',
    website: 'website',
    isUspsValidated: 'isUspsValidated',
    createdAt: 'createdAt',
    invoiceCounter: 'invoiceCounter',
    invoiceFormat: 'invoiceFormat',
    invoicePrefix: 'invoicePrefix',
    isInvoiceSetup: 'isInvoiceSetup',
    autoResetYearly: 'autoResetYearly',
    lastResetYear: 'lastResetYear',
    defaultTaxRateId: 'defaultTaxRateId',
    deleted: 'deleted',
    plan: 'plan'
  };

  export type TenantScalarFieldEnum = (typeof TenantScalarFieldEnum)[keyof typeof TenantScalarFieldEnum]


  export const TenantMembershipScalarFieldEnum: {
    id: 'id',
    tenantId: 'tenantId',
    userId: 'userId',
    role: 'role',
    permissions: 'permissions',
    deleted: 'deleted'
  };

  export type TenantMembershipScalarFieldEnum = (typeof TenantMembershipScalarFieldEnum)[keyof typeof TenantMembershipScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    clerkId: 'clerkId',
    name: 'name',
    role: 'role',
    createdAt: 'createdAt',
    deleted: 'deleted'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const ZipCacheScalarFieldEnum: {
    zip: 'zip',
    city: 'city',
    state: 'state',
    lat: 'lat',
    lng: 'lng',
    createdAt: 'createdAt'
  };

  export type ZipCacheScalarFieldEnum = (typeof ZipCacheScalarFieldEnum)[keyof typeof ZipCacheScalarFieldEnum]


  export const ZipCityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    state: 'state',
    zipCode: 'zipCode'
  };

  export type ZipCityScalarFieldEnum = (typeof ZipCityScalarFieldEnum)[keyof typeof ZipCityScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'InvoiceStatus'
   */
  export type EnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus'>
    


  /**
   * Reference to a field of type 'InvoiceStatus[]'
   */
  export type ListEnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentType'
   */
  export type EnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType'>
    


  /**
   * Reference to a field of type 'PaymentType[]'
   */
  export type ListEnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType[]'>
    


  /**
   * Reference to a field of type 'ProductIdentifierType'
   */
  export type EnumProductIdentifierTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductIdentifierType'>
    


  /**
   * Reference to a field of type 'ProductIdentifierType[]'
   */
  export type ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductIdentifierType[]'>
    


  /**
   * Reference to a field of type 'PlanTier'
   */
  export type EnumPlanTierFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PlanTier'>
    


  /**
   * Reference to a field of type 'PlanTier[]'
   */
  export type ListEnumPlanTierFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PlanTier[]'>
    


  /**
   * Reference to a field of type 'TenantRole'
   */
  export type EnumTenantRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TenantRole'>
    


  /**
   * Reference to a field of type 'TenantRole[]'
   */
  export type ListEnumTenantRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TenantRole[]'>
    


  /**
   * Reference to a field of type 'Permission[]'
   */
  export type ListEnumPermissionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Permission[]'>
    


  /**
   * Reference to a field of type 'Permission'
   */
  export type EnumPermissionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Permission'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    userId?: StringFilter<"AuditLog"> | string
    after?: JsonNullableFilter<"AuditLog">
    before?: JsonNullableFilter<"AuditLog">
    entityId?: StringFilter<"AuditLog"> | string
    entityType?: StringFilter<"AuditLog"> | string
    performedAt?: DateTimeFilter<"AuditLog"> | Date | string
    payload?: JsonNullableFilter<"AuditLog">
    deleted?: BoolFilter<"AuditLog"> | boolean
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    action?: SortOrder
    userId?: SortOrder
    after?: SortOrderInput | SortOrder
    before?: SortOrderInput | SortOrder
    entityId?: SortOrder
    entityType?: SortOrder
    performedAt?: SortOrder
    payload?: SortOrderInput | SortOrder
    deleted?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    action?: StringFilter<"AuditLog"> | string
    userId?: StringFilter<"AuditLog"> | string
    after?: JsonNullableFilter<"AuditLog">
    before?: JsonNullableFilter<"AuditLog">
    entityId?: StringFilter<"AuditLog"> | string
    entityType?: StringFilter<"AuditLog"> | string
    performedAt?: DateTimeFilter<"AuditLog"> | Date | string
    payload?: JsonNullableFilter<"AuditLog">
    deleted?: BoolFilter<"AuditLog"> | boolean
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    action?: SortOrder
    userId?: SortOrder
    after?: SortOrderInput | SortOrder
    before?: SortOrderInput | SortOrder
    entityId?: SortOrder
    entityType?: SortOrder
    performedAt?: SortOrder
    payload?: SortOrderInput | SortOrder
    deleted?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    userId?: StringWithAggregatesFilter<"AuditLog"> | string
    after?: JsonNullableWithAggregatesFilter<"AuditLog">
    before?: JsonNullableWithAggregatesFilter<"AuditLog">
    entityId?: StringWithAggregatesFilter<"AuditLog"> | string
    entityType?: StringWithAggregatesFilter<"AuditLog"> | string
    performedAt?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
    payload?: JsonNullableWithAggregatesFilter<"AuditLog">
    deleted?: BoolWithAggregatesFilter<"AuditLog"> | boolean
  }

  export type BankDetailWhereInput = {
    AND?: BankDetailWhereInput | BankDetailWhereInput[]
    OR?: BankDetailWhereInput[]
    NOT?: BankDetailWhereInput | BankDetailWhereInput[]
    id?: IntFilter<"BankDetail"> | number
    bankName?: StringFilter<"BankDetail"> | string
    accountNumber?: StringFilter<"BankDetail"> | string
    iban?: StringFilter<"BankDetail"> | string
    bic?: StringFilter<"BankDetail"> | string
    deleted?: BoolFilter<"BankDetail"> | boolean
  }

  export type BankDetailOrderByWithRelationInput = {
    id?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    iban?: SortOrder
    bic?: SortOrder
    deleted?: SortOrder
  }

  export type BankDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BankDetailWhereInput | BankDetailWhereInput[]
    OR?: BankDetailWhereInput[]
    NOT?: BankDetailWhereInput | BankDetailWhereInput[]
    bankName?: StringFilter<"BankDetail"> | string
    accountNumber?: StringFilter<"BankDetail"> | string
    iban?: StringFilter<"BankDetail"> | string
    bic?: StringFilter<"BankDetail"> | string
    deleted?: BoolFilter<"BankDetail"> | boolean
  }, "id">

  export type BankDetailOrderByWithAggregationInput = {
    id?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    iban?: SortOrder
    bic?: SortOrder
    deleted?: SortOrder
    _count?: BankDetailCountOrderByAggregateInput
    _avg?: BankDetailAvgOrderByAggregateInput
    _max?: BankDetailMaxOrderByAggregateInput
    _min?: BankDetailMinOrderByAggregateInput
    _sum?: BankDetailSumOrderByAggregateInput
  }

  export type BankDetailScalarWhereWithAggregatesInput = {
    AND?: BankDetailScalarWhereWithAggregatesInput | BankDetailScalarWhereWithAggregatesInput[]
    OR?: BankDetailScalarWhereWithAggregatesInput[]
    NOT?: BankDetailScalarWhereWithAggregatesInput | BankDetailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"BankDetail"> | number
    bankName?: StringWithAggregatesFilter<"BankDetail"> | string
    accountNumber?: StringWithAggregatesFilter<"BankDetail"> | string
    iban?: StringWithAggregatesFilter<"BankDetail"> | string
    bic?: StringWithAggregatesFilter<"BankDetail"> | string
    deleted?: BoolWithAggregatesFilter<"BankDetail"> | boolean
  }

  export type BusinessWhereInput = {
    AND?: BusinessWhereInput | BusinessWhereInput[]
    OR?: BusinessWhereInput[]
    NOT?: BusinessWhereInput | BusinessWhereInput[]
    id?: StringFilter<"Business"> | string
    createdAt?: DateTimeFilter<"Business"> | Date | string
    updatedAt?: DateTimeFilter<"Business"> | Date | string
    tenantId?: StringFilter<"Business"> | string
    createdById?: StringFilter<"Business"> | string
    updatedById?: StringFilter<"Business"> | string
    businessType?: StringFilter<"Business"> | string
    businessCategory?: StringFilter<"Business"> | string
    businessSubcategory?: StringFilter<"Business"> | string
    legalBusinessName?: StringFilter<"Business"> | string
    doingBusinessAs?: StringNullableFilter<"Business"> | string | null
    ein?: StringFilter<"Business"> | string
    businessState?: StringFilter<"Business"> | string
    onlineStatus?: StringFilter<"Business"> | string
    onlineLink?: StringNullableFilter<"Business"> | string | null
    businessEmail?: StringNullableFilter<"Business"> | string | null
    addressLine1?: StringFilter<"Business"> | string
    addressLine2?: StringNullableFilter<"Business"> | string | null
    zip?: StringFilter<"Business"> | string
    city?: StringFilter<"Business"> | string
    isManualEntry?: BoolFilter<"Business"> | boolean
    deleted?: BoolFilter<"Business"> | boolean
    User_Business_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Business_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type BusinessOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    businessType?: SortOrder
    businessCategory?: SortOrder
    businessSubcategory?: SortOrder
    legalBusinessName?: SortOrder
    doingBusinessAs?: SortOrderInput | SortOrder
    ein?: SortOrder
    businessState?: SortOrder
    onlineStatus?: SortOrder
    onlineLink?: SortOrderInput | SortOrder
    businessEmail?: SortOrderInput | SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    zip?: SortOrder
    city?: SortOrder
    isManualEntry?: SortOrder
    deleted?: SortOrder
    User_Business_createdByIdToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_Business_updatedByIdToUser?: UserOrderByWithRelationInput
  }

  export type BusinessWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BusinessWhereInput | BusinessWhereInput[]
    OR?: BusinessWhereInput[]
    NOT?: BusinessWhereInput | BusinessWhereInput[]
    createdAt?: DateTimeFilter<"Business"> | Date | string
    updatedAt?: DateTimeFilter<"Business"> | Date | string
    tenantId?: StringFilter<"Business"> | string
    createdById?: StringFilter<"Business"> | string
    updatedById?: StringFilter<"Business"> | string
    businessType?: StringFilter<"Business"> | string
    businessCategory?: StringFilter<"Business"> | string
    businessSubcategory?: StringFilter<"Business"> | string
    legalBusinessName?: StringFilter<"Business"> | string
    doingBusinessAs?: StringNullableFilter<"Business"> | string | null
    ein?: StringFilter<"Business"> | string
    businessState?: StringFilter<"Business"> | string
    onlineStatus?: StringFilter<"Business"> | string
    onlineLink?: StringNullableFilter<"Business"> | string | null
    businessEmail?: StringNullableFilter<"Business"> | string | null
    addressLine1?: StringFilter<"Business"> | string
    addressLine2?: StringNullableFilter<"Business"> | string | null
    zip?: StringFilter<"Business"> | string
    city?: StringFilter<"Business"> | string
    isManualEntry?: BoolFilter<"Business"> | boolean
    deleted?: BoolFilter<"Business"> | boolean
    User_Business_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Business_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type BusinessOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    businessType?: SortOrder
    businessCategory?: SortOrder
    businessSubcategory?: SortOrder
    legalBusinessName?: SortOrder
    doingBusinessAs?: SortOrderInput | SortOrder
    ein?: SortOrder
    businessState?: SortOrder
    onlineStatus?: SortOrder
    onlineLink?: SortOrderInput | SortOrder
    businessEmail?: SortOrderInput | SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    zip?: SortOrder
    city?: SortOrder
    isManualEntry?: SortOrder
    deleted?: SortOrder
    _count?: BusinessCountOrderByAggregateInput
    _max?: BusinessMaxOrderByAggregateInput
    _min?: BusinessMinOrderByAggregateInput
  }

  export type BusinessScalarWhereWithAggregatesInput = {
    AND?: BusinessScalarWhereWithAggregatesInput | BusinessScalarWhereWithAggregatesInput[]
    OR?: BusinessScalarWhereWithAggregatesInput[]
    NOT?: BusinessScalarWhereWithAggregatesInput | BusinessScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Business"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Business"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Business"> | Date | string
    tenantId?: StringWithAggregatesFilter<"Business"> | string
    createdById?: StringWithAggregatesFilter<"Business"> | string
    updatedById?: StringWithAggregatesFilter<"Business"> | string
    businessType?: StringWithAggregatesFilter<"Business"> | string
    businessCategory?: StringWithAggregatesFilter<"Business"> | string
    businessSubcategory?: StringWithAggregatesFilter<"Business"> | string
    legalBusinessName?: StringWithAggregatesFilter<"Business"> | string
    doingBusinessAs?: StringNullableWithAggregatesFilter<"Business"> | string | null
    ein?: StringWithAggregatesFilter<"Business"> | string
    businessState?: StringWithAggregatesFilter<"Business"> | string
    onlineStatus?: StringWithAggregatesFilter<"Business"> | string
    onlineLink?: StringNullableWithAggregatesFilter<"Business"> | string | null
    businessEmail?: StringNullableWithAggregatesFilter<"Business"> | string | null
    addressLine1?: StringWithAggregatesFilter<"Business"> | string
    addressLine2?: StringNullableWithAggregatesFilter<"Business"> | string | null
    zip?: StringWithAggregatesFilter<"Business"> | string
    city?: StringWithAggregatesFilter<"Business"> | string
    isManualEntry?: BoolWithAggregatesFilter<"Business"> | boolean
    deleted?: BoolWithAggregatesFilter<"Business"> | boolean
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: IntFilter<"Customer"> | number
    name?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phone?: StringFilter<"Customer"> | string
    address?: StringFilter<"Customer"> | string
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    createdById?: StringFilter<"Customer"> | string
    updatedById?: StringFilter<"Customer"> | string
    tenantId?: StringFilter<"Customer"> | string
    deleted?: BoolFilter<"Customer"> | boolean
    User_Customer_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Customer_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: InvoiceListRelationFilter
    Order?: OrderListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    tenantId?: SortOrder
    deleted?: SortOrder
    User_Customer_createdByIdToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_Customer_updatedByIdToUser?: UserOrderByWithRelationInput
    Invoice?: InvoiceOrderByRelationAggregateInput
    Order?: OrderOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tenantId_email?: CustomerTenantIdEmailCompoundUniqueInput
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    name?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phone?: StringFilter<"Customer"> | string
    address?: StringFilter<"Customer"> | string
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    createdById?: StringFilter<"Customer"> | string
    updatedById?: StringFilter<"Customer"> | string
    tenantId?: StringFilter<"Customer"> | string
    deleted?: BoolFilter<"Customer"> | boolean
    User_Customer_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Customer_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: InvoiceListRelationFilter
    Order?: OrderListRelationFilter
  }, "id" | "tenantId_email">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    tenantId?: SortOrder
    deleted?: SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _avg?: CustomerAvgOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
    _sum?: CustomerSumOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Customer"> | number
    name?: StringWithAggregatesFilter<"Customer"> | string
    email?: StringWithAggregatesFilter<"Customer"> | string
    phone?: StringWithAggregatesFilter<"Customer"> | string
    address?: StringWithAggregatesFilter<"Customer"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    createdById?: StringWithAggregatesFilter<"Customer"> | string
    updatedById?: StringWithAggregatesFilter<"Customer"> | string
    tenantId?: StringWithAggregatesFilter<"Customer"> | string
    deleted?: BoolWithAggregatesFilter<"Customer"> | boolean
  }

  export type DiscountWhereInput = {
    AND?: DiscountWhereInput | DiscountWhereInput[]
    OR?: DiscountWhereInput[]
    NOT?: DiscountWhereInput | DiscountWhereInput[]
    id?: IntFilter<"Discount"> | number
    name?: StringFilter<"Discount"> | string
    discountValue?: DecimalFilter<"Discount"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"Discount"> | string
    updatedById?: StringFilter<"Discount"> | string
    deleted?: BoolFilter<"Discount"> | boolean
    User_Discount_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_Discount_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    InvoiceDetail?: InvoiceDetailListRelationFilter
  }

  export type DiscountOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    discountValue?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    User_Discount_createdByIdToUser?: UserOrderByWithRelationInput
    User_Discount_updatedByIdToUser?: UserOrderByWithRelationInput
    InvoiceDetail?: InvoiceDetailOrderByRelationAggregateInput
  }

  export type DiscountWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DiscountWhereInput | DiscountWhereInput[]
    OR?: DiscountWhereInput[]
    NOT?: DiscountWhereInput | DiscountWhereInput[]
    name?: StringFilter<"Discount"> | string
    discountValue?: DecimalFilter<"Discount"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"Discount"> | string
    updatedById?: StringFilter<"Discount"> | string
    deleted?: BoolFilter<"Discount"> | boolean
    User_Discount_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_Discount_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    InvoiceDetail?: InvoiceDetailListRelationFilter
  }, "id">

  export type DiscountOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    discountValue?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    _count?: DiscountCountOrderByAggregateInput
    _avg?: DiscountAvgOrderByAggregateInput
    _max?: DiscountMaxOrderByAggregateInput
    _min?: DiscountMinOrderByAggregateInput
    _sum?: DiscountSumOrderByAggregateInput
  }

  export type DiscountScalarWhereWithAggregatesInput = {
    AND?: DiscountScalarWhereWithAggregatesInput | DiscountScalarWhereWithAggregatesInput[]
    OR?: DiscountScalarWhereWithAggregatesInput[]
    NOT?: DiscountScalarWhereWithAggregatesInput | DiscountScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Discount"> | number
    name?: StringWithAggregatesFilter<"Discount"> | string
    discountValue?: DecimalWithAggregatesFilter<"Discount"> | Decimal | DecimalJsLike | number | string
    createdById?: StringWithAggregatesFilter<"Discount"> | string
    updatedById?: StringWithAggregatesFilter<"Discount"> | string
    deleted?: BoolWithAggregatesFilter<"Discount"> | boolean
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    id?: StringFilter<"Invoice"> | string
    number?: StringNullableFilter<"Invoice"> | string | null
    amount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
    paymentType?: EnumPaymentTypeNullableFilter<"Invoice"> | $Enums.PaymentType | null
    orderId?: StringNullableFilter<"Invoice"> | string | null
    parentInvoiceId?: StringNullableFilter<"Invoice"> | string | null
    customerId?: IntFilter<"Invoice"> | number
    tenantId?: StringFilter<"Invoice"> | string
    createdById?: StringFilter<"Invoice"> | string
    updatedById?: StringFilter<"Invoice"> | string
    soldByUserId?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    deleted?: BoolFilter<"Invoice"> | boolean
    taxExempt?: BoolFilter<"Invoice"> | boolean
    taxExemptId?: StringNullableFilter<"Invoice"> | string | null
    User_Invoice_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    Order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    Invoice?: XOR<InvoiceNullableScalarRelationFilter, InvoiceWhereInput> | null
    other_Invoice?: InvoiceListRelationFilter
    User_Invoice_soldByUserIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Invoice_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    InvoiceDetail?: InvoiceDetailListRelationFilter
    InvoiceVersion?: InvoiceVersionListRelationFilter
    Payment?: PaymentListRelationFilter
    ShippingDetail?: ShippingDetailListRelationFilter
  }

  export type InvoiceOrderByWithRelationInput = {
    id?: SortOrder
    number?: SortOrderInput | SortOrder
    amount?: SortOrder
    status?: SortOrder
    paymentType?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    parentInvoiceId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    soldByUserId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    taxExempt?: SortOrder
    taxExemptId?: SortOrderInput | SortOrder
    User_Invoice_createdByIdToUser?: UserOrderByWithRelationInput
    Customer?: CustomerOrderByWithRelationInput
    Order?: OrderOrderByWithRelationInput
    Invoice?: InvoiceOrderByWithRelationInput
    other_Invoice?: InvoiceOrderByRelationAggregateInput
    User_Invoice_soldByUserIdToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_Invoice_updatedByIdToUser?: UserOrderByWithRelationInput
    InvoiceDetail?: InvoiceDetailOrderByRelationAggregateInput
    InvoiceVersion?: InvoiceVersionOrderByRelationAggregateInput
    Payment?: PaymentOrderByRelationAggregateInput
    ShippingDetail?: ShippingDetailOrderByRelationAggregateInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    number?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    amount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
    paymentType?: EnumPaymentTypeNullableFilter<"Invoice"> | $Enums.PaymentType | null
    orderId?: StringNullableFilter<"Invoice"> | string | null
    parentInvoiceId?: StringNullableFilter<"Invoice"> | string | null
    customerId?: IntFilter<"Invoice"> | number
    tenantId?: StringFilter<"Invoice"> | string
    createdById?: StringFilter<"Invoice"> | string
    updatedById?: StringFilter<"Invoice"> | string
    soldByUserId?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    deleted?: BoolFilter<"Invoice"> | boolean
    taxExempt?: BoolFilter<"Invoice"> | boolean
    taxExemptId?: StringNullableFilter<"Invoice"> | string | null
    User_Invoice_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    Order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    Invoice?: XOR<InvoiceNullableScalarRelationFilter, InvoiceWhereInput> | null
    other_Invoice?: InvoiceListRelationFilter
    User_Invoice_soldByUserIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Invoice_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    InvoiceDetail?: InvoiceDetailListRelationFilter
    InvoiceVersion?: InvoiceVersionListRelationFilter
    Payment?: PaymentListRelationFilter
    ShippingDetail?: ShippingDetailListRelationFilter
  }, "id" | "number">

  export type InvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    number?: SortOrderInput | SortOrder
    amount?: SortOrder
    status?: SortOrder
    paymentType?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    parentInvoiceId?: SortOrderInput | SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    soldByUserId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    taxExempt?: SortOrder
    taxExemptId?: SortOrderInput | SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _avg?: InvoiceAvgOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
    _sum?: InvoiceSumOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invoice"> | string
    number?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    amount?: DecimalWithAggregatesFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusWithAggregatesFilter<"Invoice"> | $Enums.InvoiceStatus
    paymentType?: EnumPaymentTypeNullableWithAggregatesFilter<"Invoice"> | $Enums.PaymentType | null
    orderId?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    parentInvoiceId?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    customerId?: IntWithAggregatesFilter<"Invoice"> | number
    tenantId?: StringWithAggregatesFilter<"Invoice"> | string
    createdById?: StringWithAggregatesFilter<"Invoice"> | string
    updatedById?: StringWithAggregatesFilter<"Invoice"> | string
    soldByUserId?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    deleted?: BoolWithAggregatesFilter<"Invoice"> | boolean
    taxExempt?: BoolWithAggregatesFilter<"Invoice"> | boolean
    taxExemptId?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
  }

  export type InvoiceDetailWhereInput = {
    AND?: InvoiceDetailWhereInput | InvoiceDetailWhereInput[]
    OR?: InvoiceDetailWhereInput[]
    NOT?: InvoiceDetailWhereInput | InvoiceDetailWhereInput[]
    id?: IntFilter<"InvoiceDetail"> | number
    invoiceId?: StringFilter<"InvoiceDetail"> | string
    productId?: IntFilter<"InvoiceDetail"> | number
    quantity?: IntFilter<"InvoiceDetail"> | number
    taxId?: IntNullableFilter<"InvoiceDetail"> | number | null
    discountId?: IntNullableFilter<"InvoiceDetail"> | number | null
    lineTotal?: DecimalFilter<"InvoiceDetail"> | Decimal | DecimalJsLike | number | string
    Discount?: XOR<DiscountNullableScalarRelationFilter, DiscountWhereInput> | null
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    TaxRate?: XOR<TaxRateNullableScalarRelationFilter, TaxRateWhereInput> | null
  }

  export type InvoiceDetailOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrderInput | SortOrder
    discountId?: SortOrderInput | SortOrder
    lineTotal?: SortOrder
    Discount?: DiscountOrderByWithRelationInput
    Invoice?: InvoiceOrderByWithRelationInput
    Product?: ProductOrderByWithRelationInput
    TaxRate?: TaxRateOrderByWithRelationInput
  }

  export type InvoiceDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: InvoiceDetailWhereInput | InvoiceDetailWhereInput[]
    OR?: InvoiceDetailWhereInput[]
    NOT?: InvoiceDetailWhereInput | InvoiceDetailWhereInput[]
    invoiceId?: StringFilter<"InvoiceDetail"> | string
    productId?: IntFilter<"InvoiceDetail"> | number
    quantity?: IntFilter<"InvoiceDetail"> | number
    taxId?: IntNullableFilter<"InvoiceDetail"> | number | null
    discountId?: IntNullableFilter<"InvoiceDetail"> | number | null
    lineTotal?: DecimalFilter<"InvoiceDetail"> | Decimal | DecimalJsLike | number | string
    Discount?: XOR<DiscountNullableScalarRelationFilter, DiscountWhereInput> | null
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    TaxRate?: XOR<TaxRateNullableScalarRelationFilter, TaxRateWhereInput> | null
  }, "id">

  export type InvoiceDetailOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrderInput | SortOrder
    discountId?: SortOrderInput | SortOrder
    lineTotal?: SortOrder
    _count?: InvoiceDetailCountOrderByAggregateInput
    _avg?: InvoiceDetailAvgOrderByAggregateInput
    _max?: InvoiceDetailMaxOrderByAggregateInput
    _min?: InvoiceDetailMinOrderByAggregateInput
    _sum?: InvoiceDetailSumOrderByAggregateInput
  }

  export type InvoiceDetailScalarWhereWithAggregatesInput = {
    AND?: InvoiceDetailScalarWhereWithAggregatesInput | InvoiceDetailScalarWhereWithAggregatesInput[]
    OR?: InvoiceDetailScalarWhereWithAggregatesInput[]
    NOT?: InvoiceDetailScalarWhereWithAggregatesInput | InvoiceDetailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"InvoiceDetail"> | number
    invoiceId?: StringWithAggregatesFilter<"InvoiceDetail"> | string
    productId?: IntWithAggregatesFilter<"InvoiceDetail"> | number
    quantity?: IntWithAggregatesFilter<"InvoiceDetail"> | number
    taxId?: IntNullableWithAggregatesFilter<"InvoiceDetail"> | number | null
    discountId?: IntNullableWithAggregatesFilter<"InvoiceDetail"> | number | null
    lineTotal?: DecimalWithAggregatesFilter<"InvoiceDetail"> | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceSettingsWhereInput = {
    AND?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    OR?: InvoiceSettingsWhereInput[]
    NOT?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    id?: StringFilter<"InvoiceSettings"> | string
    tenantId?: StringFilter<"InvoiceSettings"> | string
    layout?: StringFilter<"InvoiceSettings"> | string
    primaryColor?: StringFilter<"InvoiceSettings"> | string
    includeCustomerInfo?: BoolFilter<"InvoiceSettings"> | boolean
    includePaymentTerms?: BoolFilter<"InvoiceSettings"> | boolean
    includeDueDate?: BoolFilter<"InvoiceSettings"> | boolean
    includeNotes?: BoolFilter<"InvoiceSettings"> | boolean
    deleted?: BoolFilter<"InvoiceSettings"> | boolean
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }

  export type InvoiceSettingsOrderByWithRelationInput = {
    id?: SortOrder
    tenantId?: SortOrder
    layout?: SortOrder
    primaryColor?: SortOrder
    includeCustomerInfo?: SortOrder
    includePaymentTerms?: SortOrder
    includeDueDate?: SortOrder
    includeNotes?: SortOrder
    deleted?: SortOrder
    Tenant?: TenantOrderByWithRelationInput
  }

  export type InvoiceSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tenantId?: string
    AND?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    OR?: InvoiceSettingsWhereInput[]
    NOT?: InvoiceSettingsWhereInput | InvoiceSettingsWhereInput[]
    layout?: StringFilter<"InvoiceSettings"> | string
    primaryColor?: StringFilter<"InvoiceSettings"> | string
    includeCustomerInfo?: BoolFilter<"InvoiceSettings"> | boolean
    includePaymentTerms?: BoolFilter<"InvoiceSettings"> | boolean
    includeDueDate?: BoolFilter<"InvoiceSettings"> | boolean
    includeNotes?: BoolFilter<"InvoiceSettings"> | boolean
    deleted?: BoolFilter<"InvoiceSettings"> | boolean
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
  }, "id" | "tenantId">

  export type InvoiceSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    tenantId?: SortOrder
    layout?: SortOrder
    primaryColor?: SortOrder
    includeCustomerInfo?: SortOrder
    includePaymentTerms?: SortOrder
    includeDueDate?: SortOrder
    includeNotes?: SortOrder
    deleted?: SortOrder
    _count?: InvoiceSettingsCountOrderByAggregateInput
    _max?: InvoiceSettingsMaxOrderByAggregateInput
    _min?: InvoiceSettingsMinOrderByAggregateInput
  }

  export type InvoiceSettingsScalarWhereWithAggregatesInput = {
    AND?: InvoiceSettingsScalarWhereWithAggregatesInput | InvoiceSettingsScalarWhereWithAggregatesInput[]
    OR?: InvoiceSettingsScalarWhereWithAggregatesInput[]
    NOT?: InvoiceSettingsScalarWhereWithAggregatesInput | InvoiceSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    tenantId?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    layout?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    primaryColor?: StringWithAggregatesFilter<"InvoiceSettings"> | string
    includeCustomerInfo?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
    includePaymentTerms?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
    includeDueDate?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
    includeNotes?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
    deleted?: BoolWithAggregatesFilter<"InvoiceSettings"> | boolean
  }

  export type InvoiceVersionWhereInput = {
    AND?: InvoiceVersionWhereInput | InvoiceVersionWhereInput[]
    OR?: InvoiceVersionWhereInput[]
    NOT?: InvoiceVersionWhereInput | InvoiceVersionWhereInput[]
    id?: IntFilter<"InvoiceVersion"> | number
    invoiceId?: StringFilter<"InvoiceVersion"> | string
    number?: StringFilter<"InvoiceVersion"> | string
    data?: JsonFilter<"InvoiceVersion">
    modifiedAt?: DateTimeFilter<"InvoiceVersion"> | Date | string
    modifiedBy?: StringFilter<"InvoiceVersion"> | string
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
  }

  export type InvoiceVersionOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    number?: SortOrder
    data?: SortOrder
    modifiedAt?: SortOrder
    modifiedBy?: SortOrder
    Invoice?: InvoiceOrderByWithRelationInput
  }

  export type InvoiceVersionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: InvoiceVersionWhereInput | InvoiceVersionWhereInput[]
    OR?: InvoiceVersionWhereInput[]
    NOT?: InvoiceVersionWhereInput | InvoiceVersionWhereInput[]
    invoiceId?: StringFilter<"InvoiceVersion"> | string
    number?: StringFilter<"InvoiceVersion"> | string
    data?: JsonFilter<"InvoiceVersion">
    modifiedAt?: DateTimeFilter<"InvoiceVersion"> | Date | string
    modifiedBy?: StringFilter<"InvoiceVersion"> | string
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
  }, "id">

  export type InvoiceVersionOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    number?: SortOrder
    data?: SortOrder
    modifiedAt?: SortOrder
    modifiedBy?: SortOrder
    _count?: InvoiceVersionCountOrderByAggregateInput
    _avg?: InvoiceVersionAvgOrderByAggregateInput
    _max?: InvoiceVersionMaxOrderByAggregateInput
    _min?: InvoiceVersionMinOrderByAggregateInput
    _sum?: InvoiceVersionSumOrderByAggregateInput
  }

  export type InvoiceVersionScalarWhereWithAggregatesInput = {
    AND?: InvoiceVersionScalarWhereWithAggregatesInput | InvoiceVersionScalarWhereWithAggregatesInput[]
    OR?: InvoiceVersionScalarWhereWithAggregatesInput[]
    NOT?: InvoiceVersionScalarWhereWithAggregatesInput | InvoiceVersionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"InvoiceVersion"> | number
    invoiceId?: StringWithAggregatesFilter<"InvoiceVersion"> | string
    number?: StringWithAggregatesFilter<"InvoiceVersion"> | string
    data?: JsonWithAggregatesFilter<"InvoiceVersion">
    modifiedAt?: DateTimeWithAggregatesFilter<"InvoiceVersion"> | Date | string
    modifiedBy?: StringWithAggregatesFilter<"InvoiceVersion"> | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: IntNullableFilter<"Order"> | number | null
    tenantId?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    deleted?: BoolFilter<"Order"> | boolean
    Invoice?: InvoiceListRelationFilter
    Customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    OrderItem?: OrderItemListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    Invoice?: InvoiceOrderByRelationAggregateInput
    Customer?: CustomerOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    OrderItem?: OrderItemOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    customerId?: IntNullableFilter<"Order"> | number | null
    tenantId?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    deleted?: BoolFilter<"Order"> | boolean
    Invoice?: InvoiceListRelationFilter
    Customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    OrderItem?: OrderItemListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    customerId?: IntNullableWithAggregatesFilter<"Order"> | number | null
    tenantId?: StringWithAggregatesFilter<"Order"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    deleted?: BoolWithAggregatesFilter<"Order"> | boolean
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: IntFilter<"OrderItem"> | number
    orderId?: StringFilter<"OrderItem"> | string
    productId?: IntFilter<"OrderItem"> | number
    sku?: StringFilter<"OrderItem"> | string
    name?: StringFilter<"OrderItem"> | string
    description?: StringNullableFilter<"OrderItem"> | string | null
    variant?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"OrderItem"> | string | null
    specs?: JsonNullableFilter<"OrderItem">
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    variant?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    specs?: SortOrderInput | SortOrder
    Order?: OrderOrderByWithRelationInput
    Product?: ProductOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: IntFilter<"OrderItem"> | number
    sku?: StringFilter<"OrderItem"> | string
    name?: StringFilter<"OrderItem"> | string
    description?: StringNullableFilter<"OrderItem"> | string | null
    variant?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"OrderItem"> | string | null
    specs?: JsonNullableFilter<"OrderItem">
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    variant?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    specs?: SortOrderInput | SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderItem"> | number
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: IntWithAggregatesFilter<"OrderItem"> | number
    sku?: StringWithAggregatesFilter<"OrderItem"> | string
    name?: StringWithAggregatesFilter<"OrderItem"> | string
    description?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    variant?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    specs?: JsonNullableWithAggregatesFilter<"OrderItem">
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: IntFilter<"Payment"> | number
    invoiceId?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"Payment"> | Date | string
    method?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    reference?: StringNullableFilter<"Payment"> | string | null
    createdById?: StringFilter<"Payment"> | string
    updatedById?: StringFilter<"Payment"> | string
    deleted?: BoolFilter<"Payment"> | boolean
    User_Payment_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    User_Payment_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    status?: SortOrder
    reference?: SortOrderInput | SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    User_Payment_createdByIdToUser?: UserOrderByWithRelationInput
    Invoice?: InvoiceOrderByWithRelationInput
    User_Payment_updatedByIdToUser?: UserOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    invoiceId?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"Payment"> | Date | string
    method?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    reference?: StringNullableFilter<"Payment"> | string | null
    createdById?: StringFilter<"Payment"> | string
    updatedById?: StringFilter<"Payment"> | string
    deleted?: BoolFilter<"Payment"> | boolean
    User_Payment_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    User_Payment_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    status?: SortOrder
    reference?: SortOrderInput | SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Payment"> | number
    invoiceId?: StringWithAggregatesFilter<"Payment"> | string
    amount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    method?: StringWithAggregatesFilter<"Payment"> | string
    status?: StringWithAggregatesFilter<"Payment"> | string
    reference?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    createdById?: StringWithAggregatesFilter<"Payment"> | string
    updatedById?: StringWithAggregatesFilter<"Payment"> | string
    deleted?: BoolWithAggregatesFilter<"Payment"> | boolean
  }

  export type PaymentLogWhereInput = {
    AND?: PaymentLogWhereInput | PaymentLogWhereInput[]
    OR?: PaymentLogWhereInput[]
    NOT?: PaymentLogWhereInput | PaymentLogWhereInput[]
    id?: IntFilter<"PaymentLog"> | number
    timestamp?: DateTimeFilter<"PaymentLog"> | Date | string
    logMessage?: StringFilter<"PaymentLog"> | string
  }

  export type PaymentLogOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    logMessage?: SortOrder
  }

  export type PaymentLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentLogWhereInput | PaymentLogWhereInput[]
    OR?: PaymentLogWhereInput[]
    NOT?: PaymentLogWhereInput | PaymentLogWhereInput[]
    timestamp?: DateTimeFilter<"PaymentLog"> | Date | string
    logMessage?: StringFilter<"PaymentLog"> | string
  }, "id">

  export type PaymentLogOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrder
    logMessage?: SortOrder
    _count?: PaymentLogCountOrderByAggregateInput
    _avg?: PaymentLogAvgOrderByAggregateInput
    _max?: PaymentLogMaxOrderByAggregateInput
    _min?: PaymentLogMinOrderByAggregateInput
    _sum?: PaymentLogSumOrderByAggregateInput
  }

  export type PaymentLogScalarWhereWithAggregatesInput = {
    AND?: PaymentLogScalarWhereWithAggregatesInput | PaymentLogScalarWhereWithAggregatesInput[]
    OR?: PaymentLogScalarWhereWithAggregatesInput[]
    NOT?: PaymentLogScalarWhereWithAggregatesInput | PaymentLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PaymentLog"> | number
    timestamp?: DateTimeWithAggregatesFilter<"PaymentLog"> | Date | string
    logMessage?: StringWithAggregatesFilter<"PaymentLog"> | string
  }

  export type PaymentMethodWhereInput = {
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    id?: IntFilter<"PaymentMethod"> | number
    name?: StringFilter<"PaymentMethod"> | string
    description?: StringNullableFilter<"PaymentMethod"> | string | null
    deleted?: BoolFilter<"PaymentMethod"> | boolean
  }

  export type PaymentMethodOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    deleted?: SortOrder
  }

  export type PaymentMethodWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    OR?: PaymentMethodWhereInput[]
    NOT?: PaymentMethodWhereInput | PaymentMethodWhereInput[]
    name?: StringFilter<"PaymentMethod"> | string
    description?: StringNullableFilter<"PaymentMethod"> | string | null
    deleted?: BoolFilter<"PaymentMethod"> | boolean
  }, "id">

  export type PaymentMethodOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    deleted?: SortOrder
    _count?: PaymentMethodCountOrderByAggregateInput
    _avg?: PaymentMethodAvgOrderByAggregateInput
    _max?: PaymentMethodMaxOrderByAggregateInput
    _min?: PaymentMethodMinOrderByAggregateInput
    _sum?: PaymentMethodSumOrderByAggregateInput
  }

  export type PaymentMethodScalarWhereWithAggregatesInput = {
    AND?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    OR?: PaymentMethodScalarWhereWithAggregatesInput[]
    NOT?: PaymentMethodScalarWhereWithAggregatesInput | PaymentMethodScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PaymentMethod"> | number
    name?: StringWithAggregatesFilter<"PaymentMethod"> | string
    description?: StringNullableWithAggregatesFilter<"PaymentMethod"> | string | null
    deleted?: BoolWithAggregatesFilter<"PaymentMethod"> | boolean
  }

  export type PaymentStatusWhereInput = {
    AND?: PaymentStatusWhereInput | PaymentStatusWhereInput[]
    OR?: PaymentStatusWhereInput[]
    NOT?: PaymentStatusWhereInput | PaymentStatusWhereInput[]
    id?: IntFilter<"PaymentStatus"> | number
    name?: StringFilter<"PaymentStatus"> | string
    description?: StringNullableFilter<"PaymentStatus"> | string | null
    deleted?: BoolFilter<"PaymentStatus"> | boolean
  }

  export type PaymentStatusOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    deleted?: SortOrder
  }

  export type PaymentStatusWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentStatusWhereInput | PaymentStatusWhereInput[]
    OR?: PaymentStatusWhereInput[]
    NOT?: PaymentStatusWhereInput | PaymentStatusWhereInput[]
    name?: StringFilter<"PaymentStatus"> | string
    description?: StringNullableFilter<"PaymentStatus"> | string | null
    deleted?: BoolFilter<"PaymentStatus"> | boolean
  }, "id">

  export type PaymentStatusOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    deleted?: SortOrder
    _count?: PaymentStatusCountOrderByAggregateInput
    _avg?: PaymentStatusAvgOrderByAggregateInput
    _max?: PaymentStatusMaxOrderByAggregateInput
    _min?: PaymentStatusMinOrderByAggregateInput
    _sum?: PaymentStatusSumOrderByAggregateInput
  }

  export type PaymentStatusScalarWhereWithAggregatesInput = {
    AND?: PaymentStatusScalarWhereWithAggregatesInput | PaymentStatusScalarWhereWithAggregatesInput[]
    OR?: PaymentStatusScalarWhereWithAggregatesInput[]
    NOT?: PaymentStatusScalarWhereWithAggregatesInput | PaymentStatusScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PaymentStatus"> | number
    name?: StringWithAggregatesFilter<"PaymentStatus"> | string
    description?: StringNullableWithAggregatesFilter<"PaymentStatus"> | string | null
    deleted?: BoolWithAggregatesFilter<"PaymentStatus"> | boolean
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: IntFilter<"Product"> | number
    name?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"Product"> | string | null
    variant?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    barcode?: StringNullableFilter<"Product"> | string | null
    qrCodeUrl?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdById?: StringFilter<"Product"> | string
    updatedById?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    tenantId?: StringFilter<"Product"> | string
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    category?: StringNullableFilter<"Product"> | string | null
    isActive?: BoolFilter<"Product"> | boolean
    metaDesc?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metadata?: JsonNullableFilter<"Product">
    primaryIdentifierType?: EnumProductIdentifierTypeNullableFilter<"Product"> | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: StringNullableFilter<"Product"> | string | null
    stockAlertAt?: IntNullableFilter<"Product"> | number | null
    stockQuantity?: IntFilter<"Product"> | number
    tags?: StringNullableListFilter<"Product">
    unit?: StringNullableFilter<"Product"> | string | null
    visibility?: StringFilter<"Product"> | string
    slug?: StringNullableFilter<"Product"> | string | null
    deleted?: BoolFilter<"Product"> | boolean
    InvoiceDetail?: InvoiceDetailListRelationFilter
    OrderItem?: OrderItemListRelationFilter
    User_Product_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Product_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    ProductIdentifier?: ProductIdentifierListRelationFilter
    ProductVariant?: ProductVariantListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    variant?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    barcode?: SortOrderInput | SortOrder
    qrCodeUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    description?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metaDesc?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    primaryIdentifierType?: SortOrderInput | SortOrder
    primaryIdentifierValue?: SortOrderInput | SortOrder
    stockAlertAt?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    tags?: SortOrder
    unit?: SortOrderInput | SortOrder
    visibility?: SortOrder
    slug?: SortOrderInput | SortOrder
    deleted?: SortOrder
    InvoiceDetail?: InvoiceDetailOrderByRelationAggregateInput
    OrderItem?: OrderItemOrderByRelationAggregateInput
    User_Product_createdByIdToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_Product_updatedByIdToUser?: UserOrderByWithRelationInput
    ProductIdentifier?: ProductIdentifierOrderByRelationAggregateInput
    ProductVariant?: ProductVariantOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tenantId_name?: ProductTenantIdNameCompoundUniqueInput
    tenantId_slug?: ProductTenantIdSlugCompoundUniqueInput
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"Product"> | string | null
    variant?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    barcode?: StringNullableFilter<"Product"> | string | null
    qrCodeUrl?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdById?: StringFilter<"Product"> | string
    updatedById?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    tenantId?: StringFilter<"Product"> | string
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    category?: StringNullableFilter<"Product"> | string | null
    isActive?: BoolFilter<"Product"> | boolean
    metaDesc?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metadata?: JsonNullableFilter<"Product">
    primaryIdentifierType?: EnumProductIdentifierTypeNullableFilter<"Product"> | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: StringNullableFilter<"Product"> | string | null
    stockAlertAt?: IntNullableFilter<"Product"> | number | null
    stockQuantity?: IntFilter<"Product"> | number
    tags?: StringNullableListFilter<"Product">
    unit?: StringNullableFilter<"Product"> | string | null
    visibility?: StringFilter<"Product"> | string
    slug?: StringNullableFilter<"Product"> | string | null
    deleted?: BoolFilter<"Product"> | boolean
    InvoiceDetail?: InvoiceDetailListRelationFilter
    OrderItem?: OrderItemListRelationFilter
    User_Product_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User_Product_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    ProductIdentifier?: ProductIdentifierListRelationFilter
    ProductVariant?: ProductVariantListRelationFilter
  }, "id" | "tenantId_name" | "tenantId_slug">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    variant?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    barcode?: SortOrderInput | SortOrder
    qrCodeUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    description?: SortOrderInput | SortOrder
    tenantId?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metaDesc?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    primaryIdentifierType?: SortOrderInput | SortOrder
    primaryIdentifierValue?: SortOrderInput | SortOrder
    stockAlertAt?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    tags?: SortOrder
    unit?: SortOrderInput | SortOrder
    visibility?: SortOrder
    slug?: SortOrderInput | SortOrder
    deleted?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Product"> | number
    name?: StringWithAggregatesFilter<"Product"> | string
    price?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableWithAggregatesFilter<"Product"> | string | null
    variant?: StringNullableWithAggregatesFilter<"Product"> | string | null
    sku?: StringNullableWithAggregatesFilter<"Product"> | string | null
    barcode?: StringNullableWithAggregatesFilter<"Product"> | string | null
    qrCodeUrl?: StringNullableWithAggregatesFilter<"Product"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    createdById?: StringWithAggregatesFilter<"Product"> | string
    updatedById?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    tenantId?: StringWithAggregatesFilter<"Product"> | string
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    category?: StringNullableWithAggregatesFilter<"Product"> | string | null
    isActive?: BoolWithAggregatesFilter<"Product"> | boolean
    metaDesc?: StringNullableWithAggregatesFilter<"Product"> | string | null
    metaTitle?: StringNullableWithAggregatesFilter<"Product"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Product">
    primaryIdentifierType?: EnumProductIdentifierTypeNullableWithAggregatesFilter<"Product"> | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: StringNullableWithAggregatesFilter<"Product"> | string | null
    stockAlertAt?: IntNullableWithAggregatesFilter<"Product"> | number | null
    stockQuantity?: IntWithAggregatesFilter<"Product"> | number
    tags?: StringNullableListFilter<"Product">
    unit?: StringNullableWithAggregatesFilter<"Product"> | string | null
    visibility?: StringWithAggregatesFilter<"Product"> | string
    slug?: StringNullableWithAggregatesFilter<"Product"> | string | null
    deleted?: BoolWithAggregatesFilter<"Product"> | boolean
  }

  export type ProductIdentifierWhereInput = {
    AND?: ProductIdentifierWhereInput | ProductIdentifierWhereInput[]
    OR?: ProductIdentifierWhereInput[]
    NOT?: ProductIdentifierWhereInput | ProductIdentifierWhereInput[]
    id?: IntFilter<"ProductIdentifier"> | number
    productId?: IntFilter<"ProductIdentifier"> | number
    type?: EnumProductIdentifierTypeFilter<"ProductIdentifier"> | $Enums.ProductIdentifierType
    value?: StringFilter<"ProductIdentifier"> | string
    imageUrl?: StringNullableFilter<"ProductIdentifier"> | string | null
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductIdentifierOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    value?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    Product?: ProductOrderByWithRelationInput
  }

  export type ProductIdentifierWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductIdentifierWhereInput | ProductIdentifierWhereInput[]
    OR?: ProductIdentifierWhereInput[]
    NOT?: ProductIdentifierWhereInput | ProductIdentifierWhereInput[]
    productId?: IntFilter<"ProductIdentifier"> | number
    type?: EnumProductIdentifierTypeFilter<"ProductIdentifier"> | $Enums.ProductIdentifierType
    value?: StringFilter<"ProductIdentifier"> | string
    imageUrl?: StringNullableFilter<"ProductIdentifier"> | string | null
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductIdentifierOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    value?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    _count?: ProductIdentifierCountOrderByAggregateInput
    _avg?: ProductIdentifierAvgOrderByAggregateInput
    _max?: ProductIdentifierMaxOrderByAggregateInput
    _min?: ProductIdentifierMinOrderByAggregateInput
    _sum?: ProductIdentifierSumOrderByAggregateInput
  }

  export type ProductIdentifierScalarWhereWithAggregatesInput = {
    AND?: ProductIdentifierScalarWhereWithAggregatesInput | ProductIdentifierScalarWhereWithAggregatesInput[]
    OR?: ProductIdentifierScalarWhereWithAggregatesInput[]
    NOT?: ProductIdentifierScalarWhereWithAggregatesInput | ProductIdentifierScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductIdentifier"> | number
    productId?: IntWithAggregatesFilter<"ProductIdentifier"> | number
    type?: EnumProductIdentifierTypeWithAggregatesFilter<"ProductIdentifier"> | $Enums.ProductIdentifierType
    value?: StringWithAggregatesFilter<"ProductIdentifier"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"ProductIdentifier"> | string | null
  }

  export type ProductVariantWhereInput = {
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    id?: IntFilter<"ProductVariant"> | number
    productId?: IntFilter<"ProductVariant"> | number
    name?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    barcode?: StringNullableFilter<"ProductVariant"> | string | null
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"ProductVariant"> | string | null
    specs?: JsonNullableFilter<"ProductVariant">
    deleted?: BoolFilter<"ProductVariant"> | boolean
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductVariantOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    specs?: SortOrderInput | SortOrder
    deleted?: SortOrder
    Product?: ProductOrderByWithRelationInput
  }

  export type ProductVariantWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    productId?: IntFilter<"ProductVariant"> | number
    name?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    barcode?: StringNullableFilter<"ProductVariant"> | string | null
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"ProductVariant"> | string | null
    specs?: JsonNullableFilter<"ProductVariant">
    deleted?: BoolFilter<"ProductVariant"> | boolean
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductVariantOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    specs?: SortOrderInput | SortOrder
    deleted?: SortOrder
    _count?: ProductVariantCountOrderByAggregateInput
    _avg?: ProductVariantAvgOrderByAggregateInput
    _max?: ProductVariantMaxOrderByAggregateInput
    _min?: ProductVariantMinOrderByAggregateInput
    _sum?: ProductVariantSumOrderByAggregateInput
  }

  export type ProductVariantScalarWhereWithAggregatesInput = {
    AND?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    OR?: ProductVariantScalarWhereWithAggregatesInput[]
    NOT?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductVariant"> | number
    productId?: IntWithAggregatesFilter<"ProductVariant"> | number
    name?: StringWithAggregatesFilter<"ProductVariant"> | string
    sku?: StringWithAggregatesFilter<"ProductVariant"> | string
    barcode?: StringNullableWithAggregatesFilter<"ProductVariant"> | string | null
    price?: DecimalWithAggregatesFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableWithAggregatesFilter<"ProductVariant"> | string | null
    specs?: JsonNullableWithAggregatesFilter<"ProductVariant">
    deleted?: BoolWithAggregatesFilter<"ProductVariant"> | boolean
  }

  export type ShippingDetailWhereInput = {
    AND?: ShippingDetailWhereInput | ShippingDetailWhereInput[]
    OR?: ShippingDetailWhereInput[]
    NOT?: ShippingDetailWhereInput | ShippingDetailWhereInput[]
    id?: IntFilter<"ShippingDetail"> | number
    invoiceId?: StringFilter<"ShippingDetail"> | string
    address?: StringFilter<"ShippingDetail"> | string
    shippingDate?: DateTimeFilter<"ShippingDetail"> | Date | string
    estimatedArrival?: DateTimeFilter<"ShippingDetail"> | Date | string
    createdById?: StringFilter<"ShippingDetail"> | string
    updatedById?: StringFilter<"ShippingDetail"> | string
    deleted?: BoolFilter<"ShippingDetail"> | boolean
    User_ShippingDetail_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    User_ShippingDetail_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ShippingDetailOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    address?: SortOrder
    shippingDate?: SortOrder
    estimatedArrival?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    User_ShippingDetail_createdByIdToUser?: UserOrderByWithRelationInput
    Invoice?: InvoiceOrderByWithRelationInput
    User_ShippingDetail_updatedByIdToUser?: UserOrderByWithRelationInput
  }

  export type ShippingDetailWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ShippingDetailWhereInput | ShippingDetailWhereInput[]
    OR?: ShippingDetailWhereInput[]
    NOT?: ShippingDetailWhereInput | ShippingDetailWhereInput[]
    invoiceId?: StringFilter<"ShippingDetail"> | string
    address?: StringFilter<"ShippingDetail"> | string
    shippingDate?: DateTimeFilter<"ShippingDetail"> | Date | string
    estimatedArrival?: DateTimeFilter<"ShippingDetail"> | Date | string
    createdById?: StringFilter<"ShippingDetail"> | string
    updatedById?: StringFilter<"ShippingDetail"> | string
    deleted?: BoolFilter<"ShippingDetail"> | boolean
    User_ShippingDetail_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    User_ShippingDetail_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ShippingDetailOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    address?: SortOrder
    shippingDate?: SortOrder
    estimatedArrival?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    _count?: ShippingDetailCountOrderByAggregateInput
    _avg?: ShippingDetailAvgOrderByAggregateInput
    _max?: ShippingDetailMaxOrderByAggregateInput
    _min?: ShippingDetailMinOrderByAggregateInput
    _sum?: ShippingDetailSumOrderByAggregateInput
  }

  export type ShippingDetailScalarWhereWithAggregatesInput = {
    AND?: ShippingDetailScalarWhereWithAggregatesInput | ShippingDetailScalarWhereWithAggregatesInput[]
    OR?: ShippingDetailScalarWhereWithAggregatesInput[]
    NOT?: ShippingDetailScalarWhereWithAggregatesInput | ShippingDetailScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ShippingDetail"> | number
    invoiceId?: StringWithAggregatesFilter<"ShippingDetail"> | string
    address?: StringWithAggregatesFilter<"ShippingDetail"> | string
    shippingDate?: DateTimeWithAggregatesFilter<"ShippingDetail"> | Date | string
    estimatedArrival?: DateTimeWithAggregatesFilter<"ShippingDetail"> | Date | string
    createdById?: StringWithAggregatesFilter<"ShippingDetail"> | string
    updatedById?: StringWithAggregatesFilter<"ShippingDetail"> | string
    deleted?: BoolWithAggregatesFilter<"ShippingDetail"> | boolean
  }

  export type TaxRateWhereInput = {
    AND?: TaxRateWhereInput | TaxRateWhereInput[]
    OR?: TaxRateWhereInput[]
    NOT?: TaxRateWhereInput | TaxRateWhereInput[]
    id?: IntFilter<"TaxRate"> | number
    name?: StringFilter<"TaxRate"> | string
    rate?: DecimalFilter<"TaxRate"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"TaxRate"> | string
    updatedById?: StringFilter<"TaxRate"> | string
    deleted?: BoolFilter<"TaxRate"> | boolean
    InvoiceDetail?: InvoiceDetailListRelationFilter
    User_TaxRate_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_TaxRate_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: TenantListRelationFilter
  }

  export type TaxRateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    rate?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    InvoiceDetail?: InvoiceDetailOrderByRelationAggregateInput
    User_TaxRate_createdByIdToUser?: UserOrderByWithRelationInput
    User_TaxRate_updatedByIdToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByRelationAggregateInput
  }

  export type TaxRateWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TaxRateWhereInput | TaxRateWhereInput[]
    OR?: TaxRateWhereInput[]
    NOT?: TaxRateWhereInput | TaxRateWhereInput[]
    name?: StringFilter<"TaxRate"> | string
    rate?: DecimalFilter<"TaxRate"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"TaxRate"> | string
    updatedById?: StringFilter<"TaxRate"> | string
    deleted?: BoolFilter<"TaxRate"> | boolean
    InvoiceDetail?: InvoiceDetailListRelationFilter
    User_TaxRate_createdByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_TaxRate_updatedByIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    Tenant?: TenantListRelationFilter
  }, "id">

  export type TaxRateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    rate?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
    _count?: TaxRateCountOrderByAggregateInput
    _avg?: TaxRateAvgOrderByAggregateInput
    _max?: TaxRateMaxOrderByAggregateInput
    _min?: TaxRateMinOrderByAggregateInput
    _sum?: TaxRateSumOrderByAggregateInput
  }

  export type TaxRateScalarWhereWithAggregatesInput = {
    AND?: TaxRateScalarWhereWithAggregatesInput | TaxRateScalarWhereWithAggregatesInput[]
    OR?: TaxRateScalarWhereWithAggregatesInput[]
    NOT?: TaxRateScalarWhereWithAggregatesInput | TaxRateScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TaxRate"> | number
    name?: StringWithAggregatesFilter<"TaxRate"> | string
    rate?: DecimalWithAggregatesFilter<"TaxRate"> | Decimal | DecimalJsLike | number | string
    createdById?: StringWithAggregatesFilter<"TaxRate"> | string
    updatedById?: StringWithAggregatesFilter<"TaxRate"> | string
    deleted?: BoolWithAggregatesFilter<"TaxRate"> | boolean
  }

  export type TenantWhereInput = {
    AND?: TenantWhereInput | TenantWhereInput[]
    OR?: TenantWhereInput[]
    NOT?: TenantWhereInput | TenantWhereInput[]
    id?: StringFilter<"Tenant"> | string
    name?: StringFilter<"Tenant"> | string
    companyName?: StringNullableFilter<"Tenant"> | string | null
    addressLine1?: StringNullableFilter<"Tenant"> | string | null
    addressLine2?: StringNullableFilter<"Tenant"> | string | null
    city?: StringNullableFilter<"Tenant"> | string | null
    state?: StringNullableFilter<"Tenant"> | string | null
    zip?: StringNullableFilter<"Tenant"> | string | null
    zipPlus4?: StringNullableFilter<"Tenant"> | string | null
    email?: StringNullableFilter<"Tenant"> | string | null
    website?: StringNullableFilter<"Tenant"> | string | null
    isUspsValidated?: BoolFilter<"Tenant"> | boolean
    createdAt?: DateTimeFilter<"Tenant"> | Date | string
    invoiceCounter?: IntFilter<"Tenant"> | number
    invoiceFormat?: StringNullableFilter<"Tenant"> | string | null
    invoicePrefix?: StringNullableFilter<"Tenant"> | string | null
    isInvoiceSetup?: BoolFilter<"Tenant"> | boolean
    autoResetYearly?: BoolFilter<"Tenant"> | boolean
    lastResetYear?: IntNullableFilter<"Tenant"> | number | null
    defaultTaxRateId?: IntNullableFilter<"Tenant"> | number | null
    deleted?: BoolFilter<"Tenant"> | boolean
    plan?: EnumPlanTierFilter<"Tenant"> | $Enums.PlanTier
    Business?: BusinessListRelationFilter
    Customer?: CustomerListRelationFilter
    Invoice?: InvoiceListRelationFilter
    InvoiceSettings?: XOR<InvoiceSettingsNullableScalarRelationFilter, InvoiceSettingsWhereInput> | null
    Order?: OrderListRelationFilter
    Product?: ProductListRelationFilter
    TaxRate?: XOR<TaxRateNullableScalarRelationFilter, TaxRateWhereInput> | null
    TenantMembership?: TenantMembershipListRelationFilter
  }

  export type TenantOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    companyName?: SortOrderInput | SortOrder
    addressLine1?: SortOrderInput | SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zip?: SortOrderInput | SortOrder
    zipPlus4?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isUspsValidated?: SortOrder
    createdAt?: SortOrder
    invoiceCounter?: SortOrder
    invoiceFormat?: SortOrderInput | SortOrder
    invoicePrefix?: SortOrderInput | SortOrder
    isInvoiceSetup?: SortOrder
    autoResetYearly?: SortOrder
    lastResetYear?: SortOrderInput | SortOrder
    defaultTaxRateId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    plan?: SortOrder
    Business?: BusinessOrderByRelationAggregateInput
    Customer?: CustomerOrderByRelationAggregateInput
    Invoice?: InvoiceOrderByRelationAggregateInput
    InvoiceSettings?: InvoiceSettingsOrderByWithRelationInput
    Order?: OrderOrderByRelationAggregateInput
    Product?: ProductOrderByRelationAggregateInput
    TaxRate?: TaxRateOrderByWithRelationInput
    TenantMembership?: TenantMembershipOrderByRelationAggregateInput
  }

  export type TenantWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TenantWhereInput | TenantWhereInput[]
    OR?: TenantWhereInput[]
    NOT?: TenantWhereInput | TenantWhereInput[]
    name?: StringFilter<"Tenant"> | string
    companyName?: StringNullableFilter<"Tenant"> | string | null
    addressLine1?: StringNullableFilter<"Tenant"> | string | null
    addressLine2?: StringNullableFilter<"Tenant"> | string | null
    city?: StringNullableFilter<"Tenant"> | string | null
    state?: StringNullableFilter<"Tenant"> | string | null
    zip?: StringNullableFilter<"Tenant"> | string | null
    zipPlus4?: StringNullableFilter<"Tenant"> | string | null
    email?: StringNullableFilter<"Tenant"> | string | null
    website?: StringNullableFilter<"Tenant"> | string | null
    isUspsValidated?: BoolFilter<"Tenant"> | boolean
    createdAt?: DateTimeFilter<"Tenant"> | Date | string
    invoiceCounter?: IntFilter<"Tenant"> | number
    invoiceFormat?: StringNullableFilter<"Tenant"> | string | null
    invoicePrefix?: StringNullableFilter<"Tenant"> | string | null
    isInvoiceSetup?: BoolFilter<"Tenant"> | boolean
    autoResetYearly?: BoolFilter<"Tenant"> | boolean
    lastResetYear?: IntNullableFilter<"Tenant"> | number | null
    defaultTaxRateId?: IntNullableFilter<"Tenant"> | number | null
    deleted?: BoolFilter<"Tenant"> | boolean
    plan?: EnumPlanTierFilter<"Tenant"> | $Enums.PlanTier
    Business?: BusinessListRelationFilter
    Customer?: CustomerListRelationFilter
    Invoice?: InvoiceListRelationFilter
    InvoiceSettings?: XOR<InvoiceSettingsNullableScalarRelationFilter, InvoiceSettingsWhereInput> | null
    Order?: OrderListRelationFilter
    Product?: ProductListRelationFilter
    TaxRate?: XOR<TaxRateNullableScalarRelationFilter, TaxRateWhereInput> | null
    TenantMembership?: TenantMembershipListRelationFilter
  }, "id">

  export type TenantOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    companyName?: SortOrderInput | SortOrder
    addressLine1?: SortOrderInput | SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zip?: SortOrderInput | SortOrder
    zipPlus4?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    isUspsValidated?: SortOrder
    createdAt?: SortOrder
    invoiceCounter?: SortOrder
    invoiceFormat?: SortOrderInput | SortOrder
    invoicePrefix?: SortOrderInput | SortOrder
    isInvoiceSetup?: SortOrder
    autoResetYearly?: SortOrder
    lastResetYear?: SortOrderInput | SortOrder
    defaultTaxRateId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    plan?: SortOrder
    _count?: TenantCountOrderByAggregateInput
    _avg?: TenantAvgOrderByAggregateInput
    _max?: TenantMaxOrderByAggregateInput
    _min?: TenantMinOrderByAggregateInput
    _sum?: TenantSumOrderByAggregateInput
  }

  export type TenantScalarWhereWithAggregatesInput = {
    AND?: TenantScalarWhereWithAggregatesInput | TenantScalarWhereWithAggregatesInput[]
    OR?: TenantScalarWhereWithAggregatesInput[]
    NOT?: TenantScalarWhereWithAggregatesInput | TenantScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Tenant"> | string
    name?: StringWithAggregatesFilter<"Tenant"> | string
    companyName?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    addressLine1?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    addressLine2?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    city?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    state?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    zip?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    zipPlus4?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    email?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    website?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    isUspsValidated?: BoolWithAggregatesFilter<"Tenant"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Tenant"> | Date | string
    invoiceCounter?: IntWithAggregatesFilter<"Tenant"> | number
    invoiceFormat?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    invoicePrefix?: StringNullableWithAggregatesFilter<"Tenant"> | string | null
    isInvoiceSetup?: BoolWithAggregatesFilter<"Tenant"> | boolean
    autoResetYearly?: BoolWithAggregatesFilter<"Tenant"> | boolean
    lastResetYear?: IntNullableWithAggregatesFilter<"Tenant"> | number | null
    defaultTaxRateId?: IntNullableWithAggregatesFilter<"Tenant"> | number | null
    deleted?: BoolWithAggregatesFilter<"Tenant"> | boolean
    plan?: EnumPlanTierWithAggregatesFilter<"Tenant"> | $Enums.PlanTier
  }

  export type TenantMembershipWhereInput = {
    AND?: TenantMembershipWhereInput | TenantMembershipWhereInput[]
    OR?: TenantMembershipWhereInput[]
    NOT?: TenantMembershipWhereInput | TenantMembershipWhereInput[]
    id?: StringFilter<"TenantMembership"> | string
    tenantId?: StringFilter<"TenantMembership"> | string
    userId?: StringFilter<"TenantMembership"> | string
    role?: EnumTenantRoleFilter<"TenantMembership"> | $Enums.TenantRole
    permissions?: EnumPermissionNullableListFilter<"TenantMembership">
    deleted?: BoolFilter<"TenantMembership"> | boolean
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TenantMembershipOrderByWithRelationInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    deleted?: SortOrder
    Tenant?: TenantOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type TenantMembershipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tenantId_userId?: TenantMembershipTenantIdUserIdCompoundUniqueInput
    AND?: TenantMembershipWhereInput | TenantMembershipWhereInput[]
    OR?: TenantMembershipWhereInput[]
    NOT?: TenantMembershipWhereInput | TenantMembershipWhereInput[]
    tenantId?: StringFilter<"TenantMembership"> | string
    userId?: StringFilter<"TenantMembership"> | string
    role?: EnumTenantRoleFilter<"TenantMembership"> | $Enums.TenantRole
    permissions?: EnumPermissionNullableListFilter<"TenantMembership">
    deleted?: BoolFilter<"TenantMembership"> | boolean
    Tenant?: XOR<TenantScalarRelationFilter, TenantWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "tenantId_userId">

  export type TenantMembershipOrderByWithAggregationInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    deleted?: SortOrder
    _count?: TenantMembershipCountOrderByAggregateInput
    _max?: TenantMembershipMaxOrderByAggregateInput
    _min?: TenantMembershipMinOrderByAggregateInput
  }

  export type TenantMembershipScalarWhereWithAggregatesInput = {
    AND?: TenantMembershipScalarWhereWithAggregatesInput | TenantMembershipScalarWhereWithAggregatesInput[]
    OR?: TenantMembershipScalarWhereWithAggregatesInput[]
    NOT?: TenantMembershipScalarWhereWithAggregatesInput | TenantMembershipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TenantMembership"> | string
    tenantId?: StringWithAggregatesFilter<"TenantMembership"> | string
    userId?: StringWithAggregatesFilter<"TenantMembership"> | string
    role?: EnumTenantRoleWithAggregatesFilter<"TenantMembership"> | $Enums.TenantRole
    permissions?: EnumPermissionNullableListFilter<"TenantMembership">
    deleted?: BoolWithAggregatesFilter<"TenantMembership"> | boolean
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    clerkId?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    createdAt?: DateTimeFilter<"User"> | Date | string
    deleted?: BoolFilter<"User"> | boolean
    AuditLog?: AuditLogListRelationFilter
    Business_Business_createdByIdToUser?: BusinessListRelationFilter
    Business_Business_updatedByIdToUser?: BusinessListRelationFilter
    Customer_Customer_createdByIdToUser?: CustomerListRelationFilter
    Customer_Customer_updatedByIdToUser?: CustomerListRelationFilter
    Discount_Discount_createdByIdToUser?: DiscountListRelationFilter
    Discount_Discount_updatedByIdToUser?: DiscountListRelationFilter
    Invoice_Invoice_createdByIdToUser?: InvoiceListRelationFilter
    Invoice_Invoice_soldByUserIdToUser?: InvoiceListRelationFilter
    Invoice_Invoice_updatedByIdToUser?: InvoiceListRelationFilter
    Payment_Payment_createdByIdToUser?: PaymentListRelationFilter
    Payment_Payment_updatedByIdToUser?: PaymentListRelationFilter
    Product_Product_createdByIdToUser?: ProductListRelationFilter
    Product_Product_updatedByIdToUser?: ProductListRelationFilter
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailListRelationFilter
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailListRelationFilter
    TaxRate_TaxRate_createdByIdToUser?: TaxRateListRelationFilter
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateListRelationFilter
    TenantMembership?: TenantMembershipListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    clerkId?: SortOrder
    name?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    deleted?: SortOrder
    AuditLog?: AuditLogOrderByRelationAggregateInput
    Business_Business_createdByIdToUser?: BusinessOrderByRelationAggregateInput
    Business_Business_updatedByIdToUser?: BusinessOrderByRelationAggregateInput
    Customer_Customer_createdByIdToUser?: CustomerOrderByRelationAggregateInput
    Customer_Customer_updatedByIdToUser?: CustomerOrderByRelationAggregateInput
    Discount_Discount_createdByIdToUser?: DiscountOrderByRelationAggregateInput
    Discount_Discount_updatedByIdToUser?: DiscountOrderByRelationAggregateInput
    Invoice_Invoice_createdByIdToUser?: InvoiceOrderByRelationAggregateInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceOrderByRelationAggregateInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceOrderByRelationAggregateInput
    Payment_Payment_createdByIdToUser?: PaymentOrderByRelationAggregateInput
    Payment_Payment_updatedByIdToUser?: PaymentOrderByRelationAggregateInput
    Product_Product_createdByIdToUser?: ProductOrderByRelationAggregateInput
    Product_Product_updatedByIdToUser?: ProductOrderByRelationAggregateInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailOrderByRelationAggregateInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailOrderByRelationAggregateInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateOrderByRelationAggregateInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateOrderByRelationAggregateInput
    TenantMembership?: TenantMembershipOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    clerkId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    createdAt?: DateTimeFilter<"User"> | Date | string
    deleted?: BoolFilter<"User"> | boolean
    AuditLog?: AuditLogListRelationFilter
    Business_Business_createdByIdToUser?: BusinessListRelationFilter
    Business_Business_updatedByIdToUser?: BusinessListRelationFilter
    Customer_Customer_createdByIdToUser?: CustomerListRelationFilter
    Customer_Customer_updatedByIdToUser?: CustomerListRelationFilter
    Discount_Discount_createdByIdToUser?: DiscountListRelationFilter
    Discount_Discount_updatedByIdToUser?: DiscountListRelationFilter
    Invoice_Invoice_createdByIdToUser?: InvoiceListRelationFilter
    Invoice_Invoice_soldByUserIdToUser?: InvoiceListRelationFilter
    Invoice_Invoice_updatedByIdToUser?: InvoiceListRelationFilter
    Payment_Payment_createdByIdToUser?: PaymentListRelationFilter
    Payment_Payment_updatedByIdToUser?: PaymentListRelationFilter
    Product_Product_createdByIdToUser?: ProductListRelationFilter
    Product_Product_updatedByIdToUser?: ProductListRelationFilter
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailListRelationFilter
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailListRelationFilter
    TaxRate_TaxRate_createdByIdToUser?: TaxRateListRelationFilter
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateListRelationFilter
    TenantMembership?: TenantMembershipListRelationFilter
  }, "id" | "email" | "clerkId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    clerkId?: SortOrder
    name?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    deleted?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    clerkId?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    deleted?: BoolWithAggregatesFilter<"User"> | boolean
  }

  export type ZipCacheWhereInput = {
    AND?: ZipCacheWhereInput | ZipCacheWhereInput[]
    OR?: ZipCacheWhereInput[]
    NOT?: ZipCacheWhereInput | ZipCacheWhereInput[]
    zip?: StringFilter<"ZipCache"> | string
    city?: StringFilter<"ZipCache"> | string
    state?: StringFilter<"ZipCache"> | string
    lat?: FloatNullableFilter<"ZipCache"> | number | null
    lng?: FloatNullableFilter<"ZipCache"> | number | null
    createdAt?: DateTimeFilter<"ZipCache"> | Date | string
    ZipCity?: ZipCityListRelationFilter
  }

  export type ZipCacheOrderByWithRelationInput = {
    zip?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    ZipCity?: ZipCityOrderByRelationAggregateInput
  }

  export type ZipCacheWhereUniqueInput = Prisma.AtLeast<{
    zip?: string
    AND?: ZipCacheWhereInput | ZipCacheWhereInput[]
    OR?: ZipCacheWhereInput[]
    NOT?: ZipCacheWhereInput | ZipCacheWhereInput[]
    city?: StringFilter<"ZipCache"> | string
    state?: StringFilter<"ZipCache"> | string
    lat?: FloatNullableFilter<"ZipCache"> | number | null
    lng?: FloatNullableFilter<"ZipCache"> | number | null
    createdAt?: DateTimeFilter<"ZipCache"> | Date | string
    ZipCity?: ZipCityListRelationFilter
  }, "zip">

  export type ZipCacheOrderByWithAggregationInput = {
    zip?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ZipCacheCountOrderByAggregateInput
    _avg?: ZipCacheAvgOrderByAggregateInput
    _max?: ZipCacheMaxOrderByAggregateInput
    _min?: ZipCacheMinOrderByAggregateInput
    _sum?: ZipCacheSumOrderByAggregateInput
  }

  export type ZipCacheScalarWhereWithAggregatesInput = {
    AND?: ZipCacheScalarWhereWithAggregatesInput | ZipCacheScalarWhereWithAggregatesInput[]
    OR?: ZipCacheScalarWhereWithAggregatesInput[]
    NOT?: ZipCacheScalarWhereWithAggregatesInput | ZipCacheScalarWhereWithAggregatesInput[]
    zip?: StringWithAggregatesFilter<"ZipCache"> | string
    city?: StringWithAggregatesFilter<"ZipCache"> | string
    state?: StringWithAggregatesFilter<"ZipCache"> | string
    lat?: FloatNullableWithAggregatesFilter<"ZipCache"> | number | null
    lng?: FloatNullableWithAggregatesFilter<"ZipCache"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"ZipCache"> | Date | string
  }

  export type ZipCityWhereInput = {
    AND?: ZipCityWhereInput | ZipCityWhereInput[]
    OR?: ZipCityWhereInput[]
    NOT?: ZipCityWhereInput | ZipCityWhereInput[]
    id?: IntFilter<"ZipCity"> | number
    name?: StringFilter<"ZipCity"> | string
    state?: StringFilter<"ZipCity"> | string
    zipCode?: StringFilter<"ZipCity"> | string
    ZipCache?: XOR<ZipCacheScalarRelationFilter, ZipCacheWhereInput>
  }

  export type ZipCityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    ZipCache?: ZipCacheOrderByWithRelationInput
  }

  export type ZipCityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ZipCityWhereInput | ZipCityWhereInput[]
    OR?: ZipCityWhereInput[]
    NOT?: ZipCityWhereInput | ZipCityWhereInput[]
    name?: StringFilter<"ZipCity"> | string
    state?: StringFilter<"ZipCity"> | string
    zipCode?: StringFilter<"ZipCity"> | string
    ZipCache?: XOR<ZipCacheScalarRelationFilter, ZipCacheWhereInput>
  }, "id">

  export type ZipCityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    _count?: ZipCityCountOrderByAggregateInput
    _avg?: ZipCityAvgOrderByAggregateInput
    _max?: ZipCityMaxOrderByAggregateInput
    _min?: ZipCityMinOrderByAggregateInput
    _sum?: ZipCitySumOrderByAggregateInput
  }

  export type ZipCityScalarWhereWithAggregatesInput = {
    AND?: ZipCityScalarWhereWithAggregatesInput | ZipCityScalarWhereWithAggregatesInput[]
    OR?: ZipCityScalarWhereWithAggregatesInput[]
    NOT?: ZipCityScalarWhereWithAggregatesInput | ZipCityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ZipCity"> | number
    name?: StringWithAggregatesFilter<"ZipCity"> | string
    state?: StringWithAggregatesFilter<"ZipCity"> | string
    zipCode?: StringWithAggregatesFilter<"ZipCity"> | string
  }

  export type AuditLogCreateInput = {
    id: string
    action: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
    User: UserCreateNestedOneWithoutAuditLogInput
  }

  export type AuditLogUncheckedCreateInput = {
    id: string
    action: string
    userId: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneRequiredWithoutAuditLogNestedInput
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AuditLogCreateManyInput = {
    id: string
    action: string
    userId: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BankDetailCreateInput = {
    bankName: string
    accountNumber: string
    iban: string
    bic: string
    deleted?: boolean
  }

  export type BankDetailUncheckedCreateInput = {
    id?: number
    bankName: string
    accountNumber: string
    iban: string
    bic: string
    deleted?: boolean
  }

  export type BankDetailUpdateInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    iban?: StringFieldUpdateOperationsInput | string
    bic?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BankDetailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    iban?: StringFieldUpdateOperationsInput | string
    bic?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BankDetailCreateManyInput = {
    id?: number
    bankName: string
    accountNumber: string
    iban: string
    bic: string
    deleted?: boolean
  }

  export type BankDetailUpdateManyMutationInput = {
    bankName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    iban?: StringFieldUpdateOperationsInput | string
    bic?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BankDetailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bankName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    iban?: StringFieldUpdateOperationsInput | string
    bic?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessCreateInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser: UserCreateNestedOneWithoutBusiness_Business_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutBusinessInput
    User_Business_updatedByIdToUser: UserCreateNestedOneWithoutBusiness_Business_updatedByIdToUserInput
  }

  export type BusinessUncheckedCreateInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    createdById: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Business_createdByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutBusinessNestedInput
    User_Business_updatedByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_updatedByIdToUserNestedInput
  }

  export type BusinessUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessCreateManyInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    createdById: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerCreateInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    User_Customer_createdByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutCustomerInput
    User_Customer_updatedByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput
    Invoice?: InvoiceCreateNestedManyWithoutCustomerInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    tenantId: string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutCustomerInput
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Customer_createdByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutCustomerNestedInput
    User_Customer_updatedByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput
    Invoice?: InvoiceUpdateManyWithoutCustomerNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    tenantId: string
    deleted?: boolean
  }

  export type CustomerUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DiscountCreateInput = {
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    User_Discount_createdByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_createdByIdToUserInput
    User_Discount_updatedByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutDiscountInput
  }

  export type DiscountUncheckedCreateInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Discount_createdByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_createdByIdToUserNestedInput
    User_Discount_updatedByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountCreateManyInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type DiscountUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DiscountUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceCreateInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceCreateManyInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type InvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceDetailCreateInput = {
    quantity: number
    lineTotal: Decimal | DecimalJsLike | number | string
    Discount?: DiscountCreateNestedOneWithoutInvoiceDetailInput
    Invoice: InvoiceCreateNestedOneWithoutInvoiceDetailInput
    Product: ProductCreateNestedOneWithoutInvoiceDetailInput
    TaxRate?: TaxRateCreateNestedOneWithoutInvoiceDetailInput
  }

  export type InvoiceDetailUncheckedCreateInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Discount?: DiscountUpdateOneWithoutInvoiceDetailNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutInvoiceDetailNestedInput
    Product?: ProductUpdateOneRequiredWithoutInvoiceDetailNestedInput
    TaxRate?: TaxRateUpdateOneWithoutInvoiceDetailNestedInput
  }

  export type InvoiceDetailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailCreateManyInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceSettingsCreateInput = {
    id: string
    layout?: string
    primaryColor?: string
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
    Tenant: TenantCreateNestedOneWithoutInvoiceSettingsInput
  }

  export type InvoiceSettingsUncheckedCreateInput = {
    id: string
    tenantId: string
    layout?: string
    primaryColor?: string
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
  }

  export type InvoiceSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceSettingsNestedInput
  }

  export type InvoiceSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceSettingsCreateManyInput = {
    id: string
    tenantId: string
    layout?: string
    primaryColor?: string
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
  }

  export type InvoiceSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceVersionCreateInput = {
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
    Invoice: InvoiceCreateNestedOneWithoutInvoiceVersionInput
  }

  export type InvoiceVersionUncheckedCreateInput = {
    id?: number
    invoiceId: string
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
  }

  export type InvoiceVersionUpdateInput = {
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
    Invoice?: InvoiceUpdateOneRequiredWithoutInvoiceVersionNestedInput
  }

  export type InvoiceVersionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceVersionCreateManyInput = {
    id?: number
    invoiceId: string
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
  }

  export type InvoiceVersionUpdateManyMutationInput = {
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceVersionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderCreateInput = {
    id: string
    orderNumber: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceCreateNestedManyWithoutOrderInput
    Customer?: CustomerCreateNestedOneWithoutOrderInput
    Tenant: TenantCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutOrderInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateManyWithoutOrderNestedInput
    Customer?: CustomerUpdateOneWithoutOrderNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutOrderNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderItemCreateInput = {
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Order: OrderCreateNestedOneWithoutOrderItemInput
    Product: ProductCreateNestedOneWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: number
    orderId: string
    productId: number
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUpdateInput = {
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Order?: OrderUpdateOneRequiredWithoutOrderItemNestedInput
    Product?: ProductUpdateOneRequiredWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemCreateManyInput = {
    id?: number
    orderId: string
    productId: number
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUpdateManyMutationInput = {
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PaymentCreateInput = {
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    deleted?: boolean
    User_Payment_createdByIdToUser: UserCreateNestedOneWithoutPayment_Payment_createdByIdToUserInput
    Invoice: InvoiceCreateNestedOneWithoutPaymentInput
    User_Payment_updatedByIdToUser: UserCreateNestedOneWithoutPayment_Payment_updatedByIdToUserInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type PaymentUpdateInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Payment_createdByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_createdByIdToUserNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutPaymentNestedInput
    User_Payment_updatedByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_updatedByIdToUserNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentCreateManyInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type PaymentUpdateManyMutationInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentLogCreateInput = {
    timestamp?: Date | string
    logMessage: string
  }

  export type PaymentLogUncheckedCreateInput = {
    id?: number
    timestamp?: Date | string
    logMessage: string
  }

  export type PaymentLogUpdateInput = {
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    logMessage?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    logMessage?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentLogCreateManyInput = {
    id?: number
    timestamp?: Date | string
    logMessage: string
  }

  export type PaymentLogUpdateManyMutationInput = {
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    logMessage?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    logMessage?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentMethodCreateInput = {
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentMethodUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentMethodUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentMethodUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentMethodCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentMethodUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentMethodUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentStatusCreateInput = {
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentStatusUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentStatusUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentStatusUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentStatusCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    deleted?: boolean
  }

  export type PaymentStatusUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentStatusUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductCreateInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
  }

  export type ProductUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductIdentifierCreateInput = {
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
    Product: ProductCreateNestedOneWithoutProductIdentifierInput
  }

  export type ProductIdentifierUncheckedCreateInput = {
    id?: number
    productId: number
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
  }

  export type ProductIdentifierUpdateInput = {
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    Product?: ProductUpdateOneRequiredWithoutProductIdentifierNestedInput
  }

  export type ProductIdentifierUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductIdentifierCreateManyInput = {
    id?: number
    productId: number
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
  }

  export type ProductIdentifierUpdateManyMutationInput = {
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductIdentifierUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductVariantCreateInput = {
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
    Product: ProductCreateNestedOneWithoutProductVariantInput
  }

  export type ProductVariantUncheckedCreateInput = {
    id?: number
    productId: number
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type ProductVariantUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Product?: ProductUpdateOneRequiredWithoutProductVariantNestedInput
  }

  export type ProductVariantUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductVariantCreateManyInput = {
    id?: number
    productId: number
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type ProductVariantUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductVariantUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailCreateInput = {
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    Invoice: InvoiceCreateNestedOneWithoutShippingDetailInput
    User_ShippingDetail_updatedByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
  }

  export type ShippingDetailUncheckedCreateInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailUpdateInput = {
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_ShippingDetail_createdByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_createdByIdToUserNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutShippingDetailNestedInput
    User_ShippingDetail_updatedByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_updatedByIdToUserNestedInput
  }

  export type ShippingDetailUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailCreateManyInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailUpdateManyMutationInput = {
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TaxRateCreateInput = {
    name: string
    rate: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutTaxRateInput
    User_TaxRate_createdByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_createdByIdToUserInput
    User_TaxRate_updatedByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_updatedByIdToUserInput
    Tenant?: TenantCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateUncheckedCreateInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutTaxRateInput
    Tenant?: TenantUncheckedCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutTaxRateNestedInput
    User_TaxRate_createdByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_createdByIdToUserNestedInput
    User_TaxRate_updatedByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_updatedByIdToUserNestedInput
    Tenant?: TenantUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutTaxRateNestedInput
    Tenant?: TenantUncheckedUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateCreateManyInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type TaxRateUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TaxRateUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantCreateInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TenantCreateManyInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
  }

  export type TenantUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
  }

  export type TenantUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
  }

  export type TenantMembershipCreateInput = {
    id: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
    Tenant: TenantCreateNestedOneWithoutTenantMembershipInput
    User: UserCreateNestedOneWithoutTenantMembershipInput
  }

  export type TenantMembershipUncheckedCreateInput = {
    id: string
    tenantId: string
    userId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type TenantMembershipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUpdateOneRequiredWithoutTenantMembershipNestedInput
    User?: UserUpdateOneRequiredWithoutTenantMembershipNestedInput
  }

  export type TenantMembershipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipCreateManyInput = {
    id: string
    tenantId: string
    userId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type TenantMembershipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ZipCacheCreateInput = {
    zip: string
    city?: string
    state: string
    lat?: number | null
    lng?: number | null
    createdAt?: Date | string
    ZipCity?: ZipCityCreateNestedManyWithoutZipCacheInput
  }

  export type ZipCacheUncheckedCreateInput = {
    zip: string
    city?: string
    state: string
    lat?: number | null
    lng?: number | null
    createdAt?: Date | string
    ZipCity?: ZipCityUncheckedCreateNestedManyWithoutZipCacheInput
  }

  export type ZipCacheUpdateInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ZipCity?: ZipCityUpdateManyWithoutZipCacheNestedInput
  }

  export type ZipCacheUncheckedUpdateInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ZipCity?: ZipCityUncheckedUpdateManyWithoutZipCacheNestedInput
  }

  export type ZipCacheCreateManyInput = {
    zip: string
    city?: string
    state: string
    lat?: number | null
    lng?: number | null
    createdAt?: Date | string
  }

  export type ZipCacheUpdateManyMutationInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ZipCacheUncheckedUpdateManyInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ZipCityCreateInput = {
    name: string
    state?: string
    ZipCache: ZipCacheCreateNestedOneWithoutZipCityInput
  }

  export type ZipCityUncheckedCreateInput = {
    id?: number
    name: string
    state?: string
    zipCode: string
  }

  export type ZipCityUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    ZipCache?: ZipCacheUpdateOneRequiredWithoutZipCityNestedInput
  }

  export type ZipCityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
  }

  export type ZipCityCreateManyInput = {
    id?: number
    name: string
    state?: string
    zipCode: string
  }

  export type ZipCityUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
  }

  export type ZipCityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    userId?: SortOrder
    after?: SortOrder
    before?: SortOrder
    entityId?: SortOrder
    entityType?: SortOrder
    performedAt?: SortOrder
    payload?: SortOrder
    deleted?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    userId?: SortOrder
    entityId?: SortOrder
    entityType?: SortOrder
    performedAt?: SortOrder
    deleted?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    userId?: SortOrder
    entityId?: SortOrder
    entityType?: SortOrder
    performedAt?: SortOrder
    deleted?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BankDetailCountOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    iban?: SortOrder
    bic?: SortOrder
    deleted?: SortOrder
  }

  export type BankDetailAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BankDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    iban?: SortOrder
    bic?: SortOrder
    deleted?: SortOrder
  }

  export type BankDetailMinOrderByAggregateInput = {
    id?: SortOrder
    bankName?: SortOrder
    accountNumber?: SortOrder
    iban?: SortOrder
    bic?: SortOrder
    deleted?: SortOrder
  }

  export type BankDetailSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type TenantScalarRelationFilter = {
    is?: TenantWhereInput
    isNot?: TenantWhereInput
  }

  export type BusinessCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    businessType?: SortOrder
    businessCategory?: SortOrder
    businessSubcategory?: SortOrder
    legalBusinessName?: SortOrder
    doingBusinessAs?: SortOrder
    ein?: SortOrder
    businessState?: SortOrder
    onlineStatus?: SortOrder
    onlineLink?: SortOrder
    businessEmail?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    zip?: SortOrder
    city?: SortOrder
    isManualEntry?: SortOrder
    deleted?: SortOrder
  }

  export type BusinessMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    businessType?: SortOrder
    businessCategory?: SortOrder
    businessSubcategory?: SortOrder
    legalBusinessName?: SortOrder
    doingBusinessAs?: SortOrder
    ein?: SortOrder
    businessState?: SortOrder
    onlineStatus?: SortOrder
    onlineLink?: SortOrder
    businessEmail?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    zip?: SortOrder
    city?: SortOrder
    isManualEntry?: SortOrder
    deleted?: SortOrder
  }

  export type BusinessMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    businessType?: SortOrder
    businessCategory?: SortOrder
    businessSubcategory?: SortOrder
    legalBusinessName?: SortOrder
    doingBusinessAs?: SortOrder
    ein?: SortOrder
    businessState?: SortOrder
    onlineStatus?: SortOrder
    onlineLink?: SortOrder
    businessEmail?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    zip?: SortOrder
    city?: SortOrder
    isManualEntry?: SortOrder
    deleted?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type InvoiceListRelationFilter = {
    every?: InvoiceWhereInput
    some?: InvoiceWhereInput
    none?: InvoiceWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type InvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerTenantIdEmailCompoundUniqueInput = {
    tenantId: string
    email: string
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    tenantId?: SortOrder
    deleted?: SortOrder
  }

  export type CustomerAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    tenantId?: SortOrder
    deleted?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    tenantId?: SortOrder
    deleted?: SortOrder
  }

  export type CustomerSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailListRelationFilter = {
    every?: InvoiceDetailWhereInput
    some?: InvoiceDetailWhereInput
    none?: InvoiceDetailWhereInput
  }

  export type InvoiceDetailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscountCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discountValue?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type DiscountAvgOrderByAggregateInput = {
    id?: SortOrder
    discountValue?: SortOrder
  }

  export type DiscountMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discountValue?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type DiscountMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    discountValue?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type DiscountSumOrderByAggregateInput = {
    id?: SortOrder
    discountValue?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type EnumPaymentTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentTypeNullableFilter<$PrismaModel> | $Enums.PaymentType | null
  }

  export type CustomerScalarRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type InvoiceNullableScalarRelationFilter = {
    is?: InvoiceWhereInput | null
    isNot?: InvoiceWhereInput | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type InvoiceVersionListRelationFilter = {
    every?: InvoiceVersionWhereInput
    some?: InvoiceVersionWhereInput
    none?: InvoiceVersionWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type ShippingDetailListRelationFilter = {
    every?: ShippingDetailWhereInput
    some?: ShippingDetailWhereInput
    none?: ShippingDetailWhereInput
  }

  export type InvoiceVersionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingDetailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    number?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    paymentType?: SortOrder
    orderId?: SortOrder
    parentInvoiceId?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    soldByUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    taxExempt?: SortOrder
    taxExemptId?: SortOrder
  }

  export type InvoiceAvgOrderByAggregateInput = {
    amount?: SortOrder
    customerId?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    number?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    paymentType?: SortOrder
    orderId?: SortOrder
    parentInvoiceId?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    soldByUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    taxExempt?: SortOrder
    taxExemptId?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    number?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    paymentType?: SortOrder
    orderId?: SortOrder
    parentInvoiceId?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    soldByUserId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    taxExempt?: SortOrder
    taxExemptId?: SortOrder
  }

  export type InvoiceSumOrderByAggregateInput = {
    amount?: SortOrder
    customerId?: SortOrder
  }

  export type EnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type EnumPaymentTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DiscountNullableScalarRelationFilter = {
    is?: DiscountWhereInput | null
    isNot?: DiscountWhereInput | null
  }

  export type InvoiceScalarRelationFilter = {
    is?: InvoiceWhereInput
    isNot?: InvoiceWhereInput
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type TaxRateNullableScalarRelationFilter = {
    is?: TaxRateWhereInput | null
    isNot?: TaxRateWhereInput | null
  }

  export type InvoiceDetailCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrder
    discountId?: SortOrder
    lineTotal?: SortOrder
  }

  export type InvoiceDetailAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrder
    discountId?: SortOrder
    lineTotal?: SortOrder
  }

  export type InvoiceDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrder
    discountId?: SortOrder
    lineTotal?: SortOrder
  }

  export type InvoiceDetailMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrder
    discountId?: SortOrder
    lineTotal?: SortOrder
  }

  export type InvoiceDetailSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    taxId?: SortOrder
    discountId?: SortOrder
    lineTotal?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type InvoiceSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    layout?: SortOrder
    primaryColor?: SortOrder
    includeCustomerInfo?: SortOrder
    includePaymentTerms?: SortOrder
    includeDueDate?: SortOrder
    includeNotes?: SortOrder
    deleted?: SortOrder
  }

  export type InvoiceSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    layout?: SortOrder
    primaryColor?: SortOrder
    includeCustomerInfo?: SortOrder
    includePaymentTerms?: SortOrder
    includeDueDate?: SortOrder
    includeNotes?: SortOrder
    deleted?: SortOrder
  }

  export type InvoiceSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    layout?: SortOrder
    primaryColor?: SortOrder
    includeCustomerInfo?: SortOrder
    includePaymentTerms?: SortOrder
    includeDueDate?: SortOrder
    includeNotes?: SortOrder
    deleted?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type InvoiceVersionCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    number?: SortOrder
    data?: SortOrder
    modifiedAt?: SortOrder
    modifiedBy?: SortOrder
  }

  export type InvoiceVersionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type InvoiceVersionMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    number?: SortOrder
    modifiedAt?: SortOrder
    modifiedBy?: SortOrder
  }

  export type InvoiceVersionMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    number?: SortOrder
    modifiedAt?: SortOrder
    modifiedBy?: SortOrder
  }

  export type InvoiceVersionSumOrderByAggregateInput = {
    id?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type CustomerNullableScalarRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    customerId?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    customerId?: SortOrder
    tenantId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    customerId?: SortOrder
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    variant?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    imageUrl?: SortOrder
    specs?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    variant?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    imageUrl?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    sku?: SortOrder
    name?: SortOrder
    description?: SortOrder
    variant?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    imageUrl?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    status?: SortOrder
    reference?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    status?: SortOrder
    reference?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    status?: SortOrder
    reference?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
  }

  export type PaymentLogCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    logMessage?: SortOrder
  }

  export type PaymentLogAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentLogMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    logMessage?: SortOrder
  }

  export type PaymentLogMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    logMessage?: SortOrder
  }

  export type PaymentLogSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentMethodCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentMethodAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentMethodMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentMethodMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentMethodSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentStatusCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentStatusAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PaymentStatusMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentStatusMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
  }

  export type PaymentStatusSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumProductIdentifierTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel> | $Enums.ProductIdentifierType | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type ProductIdentifierListRelationFilter = {
    every?: ProductIdentifierWhereInput
    some?: ProductIdentifierWhereInput
    none?: ProductIdentifierWhereInput
  }

  export type ProductVariantListRelationFilter = {
    every?: ProductVariantWhereInput
    some?: ProductVariantWhereInput
    none?: ProductVariantWhereInput
  }

  export type ProductIdentifierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductVariantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductTenantIdNameCompoundUniqueInput = {
    tenantId: string
    name: string
  }

  export type ProductTenantIdSlugCompoundUniqueInput = {
    tenantId: string
    slug: string
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    variant?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    qrCodeUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    description?: SortOrder
    tenantId?: SortOrder
    archivedAt?: SortOrder
    category?: SortOrder
    isActive?: SortOrder
    metaDesc?: SortOrder
    metaTitle?: SortOrder
    metadata?: SortOrder
    primaryIdentifierType?: SortOrder
    primaryIdentifierValue?: SortOrder
    stockAlertAt?: SortOrder
    stockQuantity?: SortOrder
    tags?: SortOrder
    unit?: SortOrder
    visibility?: SortOrder
    slug?: SortOrder
    deleted?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stockAlertAt?: SortOrder
    stockQuantity?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    variant?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    qrCodeUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    description?: SortOrder
    tenantId?: SortOrder
    archivedAt?: SortOrder
    category?: SortOrder
    isActive?: SortOrder
    metaDesc?: SortOrder
    metaTitle?: SortOrder
    primaryIdentifierType?: SortOrder
    primaryIdentifierValue?: SortOrder
    stockAlertAt?: SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    visibility?: SortOrder
    slug?: SortOrder
    deleted?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    variant?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    qrCodeUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    description?: SortOrder
    tenantId?: SortOrder
    archivedAt?: SortOrder
    category?: SortOrder
    isActive?: SortOrder
    metaDesc?: SortOrder
    metaTitle?: SortOrder
    primaryIdentifierType?: SortOrder
    primaryIdentifierValue?: SortOrder
    stockAlertAt?: SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    visibility?: SortOrder
    slug?: SortOrder
    deleted?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stockAlertAt?: SortOrder
    stockQuantity?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumProductIdentifierTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProductIdentifierTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ProductIdentifierType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel>
  }

  export type EnumProductIdentifierTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductIdentifierTypeFilter<$PrismaModel> | $Enums.ProductIdentifierType
  }

  export type ProductIdentifierCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    value?: SortOrder
    imageUrl?: SortOrder
  }

  export type ProductIdentifierAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
  }

  export type ProductIdentifierMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    value?: SortOrder
    imageUrl?: SortOrder
  }

  export type ProductIdentifierMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    type?: SortOrder
    value?: SortOrder
    imageUrl?: SortOrder
  }

  export type ProductIdentifierSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
  }

  export type EnumProductIdentifierTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductIdentifierTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductIdentifierType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductIdentifierTypeFilter<$PrismaModel>
    _max?: NestedEnumProductIdentifierTypeFilter<$PrismaModel>
  }

  export type ProductVariantCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    specs?: SortOrder
    deleted?: SortOrder
  }

  export type ProductVariantAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    price?: SortOrder
  }

  export type ProductVariantMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    deleted?: SortOrder
  }

  export type ProductVariantMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    deleted?: SortOrder
  }

  export type ProductVariantSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    price?: SortOrder
  }

  export type ShippingDetailCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    address?: SortOrder
    shippingDate?: SortOrder
    estimatedArrival?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type ShippingDetailAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ShippingDetailMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    address?: SortOrder
    shippingDate?: SortOrder
    estimatedArrival?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type ShippingDetailMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    address?: SortOrder
    shippingDate?: SortOrder
    estimatedArrival?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type ShippingDetailSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TenantListRelationFilter = {
    every?: TenantWhereInput
    some?: TenantWhereInput
    none?: TenantWhereInput
  }

  export type TenantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxRateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    rate?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type TaxRateAvgOrderByAggregateInput = {
    id?: SortOrder
    rate?: SortOrder
  }

  export type TaxRateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    rate?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type TaxRateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    rate?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deleted?: SortOrder
  }

  export type TaxRateSumOrderByAggregateInput = {
    id?: SortOrder
    rate?: SortOrder
  }

  export type EnumPlanTierFilter<$PrismaModel = never> = {
    equals?: $Enums.PlanTier | EnumPlanTierFieldRefInput<$PrismaModel>
    in?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPlanTierFilter<$PrismaModel> | $Enums.PlanTier
  }

  export type BusinessListRelationFilter = {
    every?: BusinessWhereInput
    some?: BusinessWhereInput
    none?: BusinessWhereInput
  }

  export type CustomerListRelationFilter = {
    every?: CustomerWhereInput
    some?: CustomerWhereInput
    none?: CustomerWhereInput
  }

  export type InvoiceSettingsNullableScalarRelationFilter = {
    is?: InvoiceSettingsWhereInput | null
    isNot?: InvoiceSettingsWhereInput | null
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type TenantMembershipListRelationFilter = {
    every?: TenantMembershipWhereInput
    some?: TenantMembershipWhereInput
    none?: TenantMembershipWhereInput
  }

  export type BusinessOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TenantMembershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TenantCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    companyName?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    zipPlus4?: SortOrder
    email?: SortOrder
    website?: SortOrder
    isUspsValidated?: SortOrder
    createdAt?: SortOrder
    invoiceCounter?: SortOrder
    invoiceFormat?: SortOrder
    invoicePrefix?: SortOrder
    isInvoiceSetup?: SortOrder
    autoResetYearly?: SortOrder
    lastResetYear?: SortOrder
    defaultTaxRateId?: SortOrder
    deleted?: SortOrder
    plan?: SortOrder
  }

  export type TenantAvgOrderByAggregateInput = {
    invoiceCounter?: SortOrder
    lastResetYear?: SortOrder
    defaultTaxRateId?: SortOrder
  }

  export type TenantMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    companyName?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    zipPlus4?: SortOrder
    email?: SortOrder
    website?: SortOrder
    isUspsValidated?: SortOrder
    createdAt?: SortOrder
    invoiceCounter?: SortOrder
    invoiceFormat?: SortOrder
    invoicePrefix?: SortOrder
    isInvoiceSetup?: SortOrder
    autoResetYearly?: SortOrder
    lastResetYear?: SortOrder
    defaultTaxRateId?: SortOrder
    deleted?: SortOrder
    plan?: SortOrder
  }

  export type TenantMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    companyName?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    zipPlus4?: SortOrder
    email?: SortOrder
    website?: SortOrder
    isUspsValidated?: SortOrder
    createdAt?: SortOrder
    invoiceCounter?: SortOrder
    invoiceFormat?: SortOrder
    invoicePrefix?: SortOrder
    isInvoiceSetup?: SortOrder
    autoResetYearly?: SortOrder
    lastResetYear?: SortOrder
    defaultTaxRateId?: SortOrder
    deleted?: SortOrder
    plan?: SortOrder
  }

  export type TenantSumOrderByAggregateInput = {
    invoiceCounter?: SortOrder
    lastResetYear?: SortOrder
    defaultTaxRateId?: SortOrder
  }

  export type EnumPlanTierWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PlanTier | EnumPlanTierFieldRefInput<$PrismaModel>
    in?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPlanTierWithAggregatesFilter<$PrismaModel> | $Enums.PlanTier
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPlanTierFilter<$PrismaModel>
    _max?: NestedEnumPlanTierFilter<$PrismaModel>
  }

  export type EnumTenantRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.TenantRole | EnumTenantRoleFieldRefInput<$PrismaModel>
    in?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumTenantRoleFilter<$PrismaModel> | $Enums.TenantRole
  }

  export type EnumPermissionNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel> | null
    has?: $Enums.Permission | EnumPermissionFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    hasSome?: $Enums.Permission[] | ListEnumPermissionFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type TenantMembershipTenantIdUserIdCompoundUniqueInput = {
    tenantId: string
    userId: string
  }

  export type TenantMembershipCountOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    deleted?: SortOrder
  }

  export type TenantMembershipMaxOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
  }

  export type TenantMembershipMinOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
  }

  export type EnumTenantRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TenantRole | EnumTenantRoleFieldRefInput<$PrismaModel>
    in?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumTenantRoleWithAggregatesFilter<$PrismaModel> | $Enums.TenantRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTenantRoleFilter<$PrismaModel>
    _max?: NestedEnumTenantRoleFilter<$PrismaModel>
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type AuditLogListRelationFilter = {
    every?: AuditLogWhereInput
    some?: AuditLogWhereInput
    none?: AuditLogWhereInput
  }

  export type DiscountListRelationFilter = {
    every?: DiscountWhereInput
    some?: DiscountWhereInput
    none?: DiscountWhereInput
  }

  export type TaxRateListRelationFilter = {
    every?: TaxRateWhereInput
    some?: TaxRateWhereInput
    none?: TaxRateWhereInput
  }

  export type AuditLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxRateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    clerkId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    deleted?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    clerkId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    deleted?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    clerkId?: SortOrder
    name?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    deleted?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ZipCityListRelationFilter = {
    every?: ZipCityWhereInput
    some?: ZipCityWhereInput
    none?: ZipCityWhereInput
  }

  export type ZipCityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ZipCacheCountOrderByAggregateInput = {
    zip?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    createdAt?: SortOrder
  }

  export type ZipCacheAvgOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type ZipCacheMaxOrderByAggregateInput = {
    zip?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    createdAt?: SortOrder
  }

  export type ZipCacheMinOrderByAggregateInput = {
    zip?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    createdAt?: SortOrder
  }

  export type ZipCacheSumOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ZipCacheScalarRelationFilter = {
    is?: ZipCacheWhereInput
    isNot?: ZipCacheWhereInput
  }

  export type ZipCityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
  }

  export type ZipCityAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ZipCityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
  }

  export type ZipCityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
  }

  export type ZipCitySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserCreateNestedOneWithoutAuditLogInput = {
    create?: XOR<UserCreateWithoutAuditLogInput, UserUncheckedCreateWithoutAuditLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutAuditLogNestedInput = {
    create?: XOR<UserCreateWithoutAuditLogInput, UserUncheckedCreateWithoutAuditLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogInput
    upsert?: UserUpsertWithoutAuditLogInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditLogInput, UserUpdateWithoutAuditLogInput>, UserUncheckedUpdateWithoutAuditLogInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserCreateNestedOneWithoutBusiness_Business_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutBusiness_Business_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutBusinessInput = {
    create?: XOR<TenantCreateWithoutBusinessInput, TenantUncheckedCreateWithoutBusinessInput>
    connectOrCreate?: TenantCreateOrConnectWithoutBusinessInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBusiness_Business_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutBusiness_Business_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdateOneRequiredWithoutBusiness_Business_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutBusiness_Business_createdByIdToUserInput
    upsert?: UserUpsertWithoutBusiness_Business_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBusiness_Business_createdByIdToUserInput, UserUpdateWithoutBusiness_Business_createdByIdToUserInput>, UserUncheckedUpdateWithoutBusiness_Business_createdByIdToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutBusinessNestedInput = {
    create?: XOR<TenantCreateWithoutBusinessInput, TenantUncheckedCreateWithoutBusinessInput>
    connectOrCreate?: TenantCreateOrConnectWithoutBusinessInput
    upsert?: TenantUpsertWithoutBusinessInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutBusinessInput, TenantUpdateWithoutBusinessInput>, TenantUncheckedUpdateWithoutBusinessInput>
  }

  export type UserUpdateOneRequiredWithoutBusiness_Business_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutBusiness_Business_updatedByIdToUserInput
    upsert?: UserUpsertWithoutBusiness_Business_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBusiness_Business_updatedByIdToUserInput, UserUpdateWithoutBusiness_Business_updatedByIdToUserInput>, UserUncheckedUpdateWithoutBusiness_Business_updatedByIdToUserInput>
  }

  export type UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomer_Customer_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutCustomerInput = {
    create?: XOR<TenantCreateWithoutCustomerInput, TenantUncheckedCreateWithoutCustomerInput>
    connectOrCreate?: TenantCreateOrConnectWithoutCustomerInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomer_Customer_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceCreateNestedManyWithoutCustomerInput = {
    create?: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput> | InvoiceCreateWithoutCustomerInput[] | InvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCustomerInput | InvoiceCreateOrConnectWithoutCustomerInput[]
    createMany?: InvoiceCreateManyCustomerInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput> | InvoiceCreateWithoutCustomerInput[] | InvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCustomerInput | InvoiceCreateOrConnectWithoutCustomerInput[]
    createMany?: InvoiceCreateManyCustomerInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomer_Customer_createdByIdToUserInput
    upsert?: UserUpsertWithoutCustomer_Customer_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomer_Customer_createdByIdToUserInput, UserUpdateWithoutCustomer_Customer_createdByIdToUserInput>, UserUncheckedUpdateWithoutCustomer_Customer_createdByIdToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutCustomerNestedInput = {
    create?: XOR<TenantCreateWithoutCustomerInput, TenantUncheckedCreateWithoutCustomerInput>
    connectOrCreate?: TenantCreateOrConnectWithoutCustomerInput
    upsert?: TenantUpsertWithoutCustomerInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutCustomerInput, TenantUpdateWithoutCustomerInput>, TenantUncheckedUpdateWithoutCustomerInput>
  }

  export type UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomer_Customer_updatedByIdToUserInput
    upsert?: UserUpsertWithoutCustomer_Customer_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomer_Customer_updatedByIdToUserInput, UserUpdateWithoutCustomer_Customer_updatedByIdToUserInput>, UserUncheckedUpdateWithoutCustomer_Customer_updatedByIdToUserInput>
  }

  export type InvoiceUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput> | InvoiceCreateWithoutCustomerInput[] | InvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCustomerInput | InvoiceCreateOrConnectWithoutCustomerInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutCustomerInput | InvoiceUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: InvoiceCreateManyCustomerInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutCustomerInput | InvoiceUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutCustomerInput | InvoiceUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput> | InvoiceCreateWithoutCustomerInput[] | InvoiceUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutCustomerInput | InvoiceCreateOrConnectWithoutCustomerInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutCustomerInput | InvoiceUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: InvoiceCreateManyCustomerInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutCustomerInput | InvoiceUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutCustomerInput | InvoiceUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutDiscount_Discount_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutDiscount_Discount_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDiscount_Discount_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutDiscount_Discount_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceDetailCreateNestedManyWithoutDiscountInput = {
    create?: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput> | InvoiceDetailCreateWithoutDiscountInput[] | InvoiceDetailUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutDiscountInput | InvoiceDetailCreateOrConnectWithoutDiscountInput[]
    createMany?: InvoiceDetailCreateManyDiscountInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type InvoiceDetailUncheckedCreateNestedManyWithoutDiscountInput = {
    create?: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput> | InvoiceDetailCreateWithoutDiscountInput[] | InvoiceDetailUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutDiscountInput | InvoiceDetailCreateOrConnectWithoutDiscountInput[]
    createMany?: InvoiceDetailCreateManyDiscountInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type UserUpdateOneRequiredWithoutDiscount_Discount_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutDiscount_Discount_createdByIdToUserInput
    upsert?: UserUpsertWithoutDiscount_Discount_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDiscount_Discount_createdByIdToUserInput, UserUpdateWithoutDiscount_Discount_createdByIdToUserInput>, UserUncheckedUpdateWithoutDiscount_Discount_createdByIdToUserInput>
  }

  export type UserUpdateOneRequiredWithoutDiscount_Discount_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutDiscount_Discount_updatedByIdToUserInput
    upsert?: UserUpsertWithoutDiscount_Discount_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDiscount_Discount_updatedByIdToUserInput, UserUpdateWithoutDiscount_Discount_updatedByIdToUserInput>, UserUncheckedUpdateWithoutDiscount_Discount_updatedByIdToUserInput>
  }

  export type InvoiceDetailUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput> | InvoiceDetailCreateWithoutDiscountInput[] | InvoiceDetailUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutDiscountInput | InvoiceDetailCreateOrConnectWithoutDiscountInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutDiscountInput | InvoiceDetailUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: InvoiceDetailCreateManyDiscountInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutDiscountInput | InvoiceDetailUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutDiscountInput | InvoiceDetailUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutDiscountNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput> | InvoiceDetailCreateWithoutDiscountInput[] | InvoiceDetailUncheckedCreateWithoutDiscountInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutDiscountInput | InvoiceDetailCreateOrConnectWithoutDiscountInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutDiscountInput | InvoiceDetailUpsertWithWhereUniqueWithoutDiscountInput[]
    createMany?: InvoiceDetailCreateManyDiscountInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutDiscountInput | InvoiceDetailUpdateWithWhereUniqueWithoutDiscountInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutDiscountInput | InvoiceDetailUpdateManyWithWhereWithoutDiscountInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutInvoiceInput = {
    create?: XOR<CustomerCreateWithoutInvoiceInput, CustomerUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutInvoiceInput
    connect?: CustomerWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutInvoiceInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput
    connect?: OrderWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutOther_InvoiceInput = {
    create?: XOR<InvoiceCreateWithoutOther_InvoiceInput, InvoiceUncheckedCreateWithoutOther_InvoiceInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOther_InvoiceInput
    connect?: InvoiceWhereUniqueInput
  }

  export type InvoiceCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput> | InvoiceCreateWithoutInvoiceInput[] | InvoiceUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceInput | InvoiceCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceCreateManyInvoiceInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_soldByUserIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_soldByUserIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutInvoiceInput = {
    create?: XOR<TenantCreateWithoutInvoiceInput, TenantUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: TenantCreateOrConnectWithoutInvoiceInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceDetailCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput> | InvoiceDetailCreateWithoutInvoiceInput[] | InvoiceDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutInvoiceInput | InvoiceDetailCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceDetailCreateManyInvoiceInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type InvoiceVersionCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput> | InvoiceVersionCreateWithoutInvoiceInput[] | InvoiceVersionUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceVersionCreateOrConnectWithoutInvoiceInput | InvoiceVersionCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceVersionCreateManyInvoiceInputEnvelope
    connect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ShippingDetailCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput> | ShippingDetailCreateWithoutInvoiceInput[] | ShippingDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutInvoiceInput | ShippingDetailCreateOrConnectWithoutInvoiceInput[]
    createMany?: ShippingDetailCreateManyInvoiceInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput> | InvoiceCreateWithoutInvoiceInput[] | InvoiceUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceInput | InvoiceCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceCreateManyInvoiceInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput> | InvoiceDetailCreateWithoutInvoiceInput[] | InvoiceDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutInvoiceInput | InvoiceDetailCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceDetailCreateManyInvoiceInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput> | InvoiceVersionCreateWithoutInvoiceInput[] | InvoiceVersionUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceVersionCreateOrConnectWithoutInvoiceInput | InvoiceVersionCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceVersionCreateManyInvoiceInputEnvelope
    connect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput> | ShippingDetailCreateWithoutInvoiceInput[] | ShippingDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutInvoiceInput | ShippingDetailCreateOrConnectWithoutInvoiceInput[]
    createMany?: ShippingDetailCreateManyInvoiceInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type EnumInvoiceStatusFieldUpdateOperationsInput = {
    set?: $Enums.InvoiceStatus
  }

  export type NullableEnumPaymentTypeFieldUpdateOperationsInput = {
    set?: $Enums.PaymentType | null
  }

  export type UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_createdByIdToUserInput
    upsert?: UserUpsertWithoutInvoice_Invoice_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvoice_Invoice_createdByIdToUserInput, UserUpdateWithoutInvoice_Invoice_createdByIdToUserInput>, UserUncheckedUpdateWithoutInvoice_Invoice_createdByIdToUserInput>
  }

  export type CustomerUpdateOneRequiredWithoutInvoiceNestedInput = {
    create?: XOR<CustomerCreateWithoutInvoiceInput, CustomerUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutInvoiceInput
    upsert?: CustomerUpsertWithoutInvoiceInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutInvoiceInput, CustomerUpdateWithoutInvoiceInput>, CustomerUncheckedUpdateWithoutInvoiceInput>
  }

  export type OrderUpdateOneWithoutInvoiceNestedInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput
    upsert?: OrderUpsertWithoutInvoiceInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutInvoiceInput, OrderUpdateWithoutInvoiceInput>, OrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceUpdateOneWithoutOther_InvoiceNestedInput = {
    create?: XOR<InvoiceCreateWithoutOther_InvoiceInput, InvoiceUncheckedCreateWithoutOther_InvoiceInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOther_InvoiceInput
    upsert?: InvoiceUpsertWithoutOther_InvoiceInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutOther_InvoiceInput, InvoiceUpdateWithoutOther_InvoiceInput>, InvoiceUncheckedUpdateWithoutOther_InvoiceInput>
  }

  export type InvoiceUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput> | InvoiceCreateWithoutInvoiceInput[] | InvoiceUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceInput | InvoiceCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceCreateManyInvoiceInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutInvoiceInput | InvoiceUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_soldByUserIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_soldByUserIdToUserInput
    upsert?: UserUpsertWithoutInvoice_Invoice_soldByUserIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput>, UserUncheckedUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutInvoiceNestedInput = {
    create?: XOR<TenantCreateWithoutInvoiceInput, TenantUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: TenantCreateOrConnectWithoutInvoiceInput
    upsert?: TenantUpsertWithoutInvoiceInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutInvoiceInput, TenantUpdateWithoutInvoiceInput>, TenantUncheckedUpdateWithoutInvoiceInput>
  }

  export type UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoice_Invoice_updatedByIdToUserInput
    upsert?: UserUpsertWithoutInvoice_Invoice_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvoice_Invoice_updatedByIdToUserInput, UserUpdateWithoutInvoice_Invoice_updatedByIdToUserInput>, UserUncheckedUpdateWithoutInvoice_Invoice_updatedByIdToUserInput>
  }

  export type InvoiceDetailUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput> | InvoiceDetailCreateWithoutInvoiceInput[] | InvoiceDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutInvoiceInput | InvoiceDetailCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceDetailUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceDetailCreateManyInvoiceInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceDetailUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutInvoiceInput | InvoiceDetailUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type InvoiceVersionUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput> | InvoiceVersionCreateWithoutInvoiceInput[] | InvoiceVersionUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceVersionCreateOrConnectWithoutInvoiceInput | InvoiceVersionCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceVersionUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceVersionUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceVersionCreateManyInvoiceInputEnvelope
    set?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    disconnect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    delete?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    connect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    update?: InvoiceVersionUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceVersionUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceVersionUpdateManyWithWhereWithoutInvoiceInput | InvoiceVersionUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceVersionScalarWhereInput | InvoiceVersionScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ShippingDetailUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput> | ShippingDetailCreateWithoutInvoiceInput[] | ShippingDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutInvoiceInput | ShippingDetailCreateOrConnectWithoutInvoiceInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutInvoiceInput | ShippingDetailUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: ShippingDetailCreateManyInvoiceInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutInvoiceInput | ShippingDetailUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutInvoiceInput | ShippingDetailUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput> | InvoiceCreateWithoutInvoiceInput[] | InvoiceUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceInput | InvoiceCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceCreateManyInvoiceInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutInvoiceInput | InvoiceUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput> | InvoiceDetailCreateWithoutInvoiceInput[] | InvoiceDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutInvoiceInput | InvoiceDetailCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceDetailUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceDetailCreateManyInvoiceInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceDetailUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutInvoiceInput | InvoiceDetailUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput> | InvoiceVersionCreateWithoutInvoiceInput[] | InvoiceVersionUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceVersionCreateOrConnectWithoutInvoiceInput | InvoiceVersionCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceVersionUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceVersionUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceVersionCreateManyInvoiceInputEnvelope
    set?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    disconnect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    delete?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    connect?: InvoiceVersionWhereUniqueInput | InvoiceVersionWhereUniqueInput[]
    update?: InvoiceVersionUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceVersionUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceVersionUpdateManyWithWhereWithoutInvoiceInput | InvoiceVersionUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceVersionScalarWhereInput | InvoiceVersionScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput> | ShippingDetailCreateWithoutInvoiceInput[] | ShippingDetailUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutInvoiceInput | ShippingDetailCreateOrConnectWithoutInvoiceInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutInvoiceInput | ShippingDetailUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: ShippingDetailCreateManyInvoiceInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutInvoiceInput | ShippingDetailUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutInvoiceInput | ShippingDetailUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type DiscountCreateNestedOneWithoutInvoiceDetailInput = {
    create?: XOR<DiscountCreateWithoutInvoiceDetailInput, DiscountUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: DiscountCreateOrConnectWithoutInvoiceDetailInput
    connect?: DiscountWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutInvoiceDetailInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceDetailInput, InvoiceUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceDetailInput
    connect?: InvoiceWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutInvoiceDetailInput = {
    create?: XOR<ProductCreateWithoutInvoiceDetailInput, ProductUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInvoiceDetailInput
    connect?: ProductWhereUniqueInput
  }

  export type TaxRateCreateNestedOneWithoutInvoiceDetailInput = {
    create?: XOR<TaxRateCreateWithoutInvoiceDetailInput, TaxRateUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: TaxRateCreateOrConnectWithoutInvoiceDetailInput
    connect?: TaxRateWhereUniqueInput
  }

  export type DiscountUpdateOneWithoutInvoiceDetailNestedInput = {
    create?: XOR<DiscountCreateWithoutInvoiceDetailInput, DiscountUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: DiscountCreateOrConnectWithoutInvoiceDetailInput
    upsert?: DiscountUpsertWithoutInvoiceDetailInput
    disconnect?: DiscountWhereInput | boolean
    delete?: DiscountWhereInput | boolean
    connect?: DiscountWhereUniqueInput
    update?: XOR<XOR<DiscountUpdateToOneWithWhereWithoutInvoiceDetailInput, DiscountUpdateWithoutInvoiceDetailInput>, DiscountUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type InvoiceUpdateOneRequiredWithoutInvoiceDetailNestedInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceDetailInput, InvoiceUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceDetailInput
    upsert?: InvoiceUpsertWithoutInvoiceDetailInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutInvoiceDetailInput, InvoiceUpdateWithoutInvoiceDetailInput>, InvoiceUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type ProductUpdateOneRequiredWithoutInvoiceDetailNestedInput = {
    create?: XOR<ProductCreateWithoutInvoiceDetailInput, ProductUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: ProductCreateOrConnectWithoutInvoiceDetailInput
    upsert?: ProductUpsertWithoutInvoiceDetailInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutInvoiceDetailInput, ProductUpdateWithoutInvoiceDetailInput>, ProductUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type TaxRateUpdateOneWithoutInvoiceDetailNestedInput = {
    create?: XOR<TaxRateCreateWithoutInvoiceDetailInput, TaxRateUncheckedCreateWithoutInvoiceDetailInput>
    connectOrCreate?: TaxRateCreateOrConnectWithoutInvoiceDetailInput
    upsert?: TaxRateUpsertWithoutInvoiceDetailInput
    disconnect?: TaxRateWhereInput | boolean
    delete?: TaxRateWhereInput | boolean
    connect?: TaxRateWhereUniqueInput
    update?: XOR<XOR<TaxRateUpdateToOneWithWhereWithoutInvoiceDetailInput, TaxRateUpdateWithoutInvoiceDetailInput>, TaxRateUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TenantCreateNestedOneWithoutInvoiceSettingsInput = {
    create?: XOR<TenantCreateWithoutInvoiceSettingsInput, TenantUncheckedCreateWithoutInvoiceSettingsInput>
    connectOrCreate?: TenantCreateOrConnectWithoutInvoiceSettingsInput
    connect?: TenantWhereUniqueInput
  }

  export type TenantUpdateOneRequiredWithoutInvoiceSettingsNestedInput = {
    create?: XOR<TenantCreateWithoutInvoiceSettingsInput, TenantUncheckedCreateWithoutInvoiceSettingsInput>
    connectOrCreate?: TenantCreateOrConnectWithoutInvoiceSettingsInput
    upsert?: TenantUpsertWithoutInvoiceSettingsInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutInvoiceSettingsInput, TenantUpdateWithoutInvoiceSettingsInput>, TenantUncheckedUpdateWithoutInvoiceSettingsInput>
  }

  export type InvoiceCreateNestedOneWithoutInvoiceVersionInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceVersionInput, InvoiceUncheckedCreateWithoutInvoiceVersionInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceVersionInput
    connect?: InvoiceWhereUniqueInput
  }

  export type InvoiceUpdateOneRequiredWithoutInvoiceVersionNestedInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceVersionInput, InvoiceUncheckedCreateWithoutInvoiceVersionInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceVersionInput
    upsert?: InvoiceUpsertWithoutInvoiceVersionInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutInvoiceVersionInput, InvoiceUpdateWithoutInvoiceVersionInput>, InvoiceUncheckedUpdateWithoutInvoiceVersionInput>
  }

  export type InvoiceCreateNestedManyWithoutOrderInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput> | InvoiceCreateWithoutOrderInput[] | InvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput | InvoiceCreateOrConnectWithoutOrderInput[]
    createMany?: InvoiceCreateManyOrderInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type CustomerCreateNestedOneWithoutOrderInput = {
    create?: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrderInput
    connect?: CustomerWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutOrderInput = {
    create?: XOR<TenantCreateWithoutOrderInput, TenantUncheckedCreateWithoutOrderInput>
    connectOrCreate?: TenantCreateOrConnectWithoutOrderInput
    connect?: TenantWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput> | InvoiceCreateWithoutOrderInput[] | InvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput | InvoiceCreateOrConnectWithoutOrderInput[]
    createMany?: InvoiceCreateManyOrderInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type InvoiceUpdateManyWithoutOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput> | InvoiceCreateWithoutOrderInput[] | InvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput | InvoiceCreateOrConnectWithoutOrderInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutOrderInput | InvoiceUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: InvoiceCreateManyOrderInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutOrderInput | InvoiceUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutOrderInput | InvoiceUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type CustomerUpdateOneWithoutOrderNestedInput = {
    create?: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrderInput
    upsert?: CustomerUpsertWithoutOrderInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutOrderInput, CustomerUpdateWithoutOrderInput>, CustomerUncheckedUpdateWithoutOrderInput>
  }

  export type TenantUpdateOneRequiredWithoutOrderNestedInput = {
    create?: XOR<TenantCreateWithoutOrderInput, TenantUncheckedCreateWithoutOrderInput>
    connectOrCreate?: TenantCreateOrConnectWithoutOrderInput
    upsert?: TenantUpsertWithoutOrderInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutOrderInput, TenantUpdateWithoutOrderInput>, TenantUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput> | InvoiceCreateWithoutOrderInput[] | InvoiceUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput | InvoiceCreateOrConnectWithoutOrderInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutOrderInput | InvoiceUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: InvoiceCreateManyOrderInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutOrderInput | InvoiceUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutOrderInput | InvoiceUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrderItemInput = {
    create?: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutOrderItemInput = {
    create?: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderItemNestedInput = {
    create?: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemInput
    upsert?: OrderUpsertWithoutOrderItemInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderItemInput, OrderUpdateWithoutOrderItemInput>, OrderUncheckedUpdateWithoutOrderItemInput>
  }

  export type ProductUpdateOneRequiredWithoutOrderItemNestedInput = {
    create?: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemInput
    upsert?: ProductUpsertWithoutOrderItemInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderItemInput, ProductUpdateWithoutOrderItemInput>, ProductUncheckedUpdateWithoutOrderItemInput>
  }

  export type UserCreateNestedOneWithoutPayment_Payment_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPayment_Payment_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutPaymentInput = {
    create?: XOR<InvoiceCreateWithoutPaymentInput, InvoiceUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentInput
    connect?: InvoiceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPayment_Payment_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPayment_Payment_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPayment_Payment_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPayment_Payment_createdByIdToUserInput
    upsert?: UserUpsertWithoutPayment_Payment_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPayment_Payment_createdByIdToUserInput, UserUpdateWithoutPayment_Payment_createdByIdToUserInput>, UserUncheckedUpdateWithoutPayment_Payment_createdByIdToUserInput>
  }

  export type InvoiceUpdateOneRequiredWithoutPaymentNestedInput = {
    create?: XOR<InvoiceCreateWithoutPaymentInput, InvoiceUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentInput
    upsert?: InvoiceUpsertWithoutPaymentInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutPaymentInput, InvoiceUpdateWithoutPaymentInput>, InvoiceUncheckedUpdateWithoutPaymentInput>
  }

  export type UserUpdateOneRequiredWithoutPayment_Payment_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPayment_Payment_updatedByIdToUserInput
    upsert?: UserUpsertWithoutPayment_Payment_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPayment_Payment_updatedByIdToUserInput, UserUpdateWithoutPayment_Payment_updatedByIdToUserInput>, UserUncheckedUpdateWithoutPayment_Payment_updatedByIdToUserInput>
  }

  export type ProductCreatetagsInput = {
    set: string[]
  }

  export type InvoiceDetailCreateNestedManyWithoutProductInput = {
    create?: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput> | InvoiceDetailCreateWithoutProductInput[] | InvoiceDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutProductInput | InvoiceDetailCreateOrConnectWithoutProductInput[]
    createMany?: InvoiceDetailCreateManyProductInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutProduct_Product_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutProductInput = {
    create?: XOR<TenantCreateWithoutProductInput, TenantUncheckedCreateWithoutProductInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProductInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutProduct_Product_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ProductIdentifierCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput> | ProductIdentifierCreateWithoutProductInput[] | ProductIdentifierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductIdentifierCreateOrConnectWithoutProductInput | ProductIdentifierCreateOrConnectWithoutProductInput[]
    createMany?: ProductIdentifierCreateManyProductInputEnvelope
    connect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
  }

  export type ProductVariantCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type InvoiceDetailUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput> | InvoiceDetailCreateWithoutProductInput[] | InvoiceDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutProductInput | InvoiceDetailCreateOrConnectWithoutProductInput[]
    createMany?: InvoiceDetailCreateManyProductInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductIdentifierUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput> | ProductIdentifierCreateWithoutProductInput[] | ProductIdentifierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductIdentifierCreateOrConnectWithoutProductInput | ProductIdentifierCreateOrConnectWithoutProductInput[]
    createMany?: ProductIdentifierCreateManyProductInputEnvelope
    connect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
  }

  export type ProductVariantUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumProductIdentifierTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProductIdentifierType | null
  }

  export type ProductUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type InvoiceDetailUpdateManyWithoutProductNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput> | InvoiceDetailCreateWithoutProductInput[] | InvoiceDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutProductInput | InvoiceDetailCreateOrConnectWithoutProductInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutProductInput | InvoiceDetailUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InvoiceDetailCreateManyProductInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutProductInput | InvoiceDetailUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutProductInput | InvoiceDetailUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutProduct_Product_createdByIdToUserInput
    upsert?: UserUpsertWithoutProduct_Product_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProduct_Product_createdByIdToUserInput, UserUpdateWithoutProduct_Product_createdByIdToUserInput>, UserUncheckedUpdateWithoutProduct_Product_createdByIdToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutProductNestedInput = {
    create?: XOR<TenantCreateWithoutProductInput, TenantUncheckedCreateWithoutProductInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProductInput
    upsert?: TenantUpsertWithoutProductInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutProductInput, TenantUpdateWithoutProductInput>, TenantUncheckedUpdateWithoutProductInput>
  }

  export type UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutProduct_Product_updatedByIdToUserInput
    upsert?: UserUpsertWithoutProduct_Product_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProduct_Product_updatedByIdToUserInput, UserUpdateWithoutProduct_Product_updatedByIdToUserInput>, UserUncheckedUpdateWithoutProduct_Product_updatedByIdToUserInput>
  }

  export type ProductIdentifierUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput> | ProductIdentifierCreateWithoutProductInput[] | ProductIdentifierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductIdentifierCreateOrConnectWithoutProductInput | ProductIdentifierCreateOrConnectWithoutProductInput[]
    upsert?: ProductIdentifierUpsertWithWhereUniqueWithoutProductInput | ProductIdentifierUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductIdentifierCreateManyProductInputEnvelope
    set?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    disconnect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    delete?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    connect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    update?: ProductIdentifierUpdateWithWhereUniqueWithoutProductInput | ProductIdentifierUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductIdentifierUpdateManyWithWhereWithoutProductInput | ProductIdentifierUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductIdentifierScalarWhereInput | ProductIdentifierScalarWhereInput[]
  }

  export type ProductVariantUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput> | InvoiceDetailCreateWithoutProductInput[] | InvoiceDetailUncheckedCreateWithoutProductInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutProductInput | InvoiceDetailCreateOrConnectWithoutProductInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutProductInput | InvoiceDetailUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: InvoiceDetailCreateManyProductInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutProductInput | InvoiceDetailUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutProductInput | InvoiceDetailUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput> | ProductIdentifierCreateWithoutProductInput[] | ProductIdentifierUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductIdentifierCreateOrConnectWithoutProductInput | ProductIdentifierCreateOrConnectWithoutProductInput[]
    upsert?: ProductIdentifierUpsertWithWhereUniqueWithoutProductInput | ProductIdentifierUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductIdentifierCreateManyProductInputEnvelope
    set?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    disconnect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    delete?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    connect?: ProductIdentifierWhereUniqueInput | ProductIdentifierWhereUniqueInput[]
    update?: ProductIdentifierUpdateWithWhereUniqueWithoutProductInput | ProductIdentifierUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductIdentifierUpdateManyWithWhereWithoutProductInput | ProductIdentifierUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductIdentifierScalarWhereInput | ProductIdentifierScalarWhereInput[]
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutProductIdentifierInput = {
    create?: XOR<ProductCreateWithoutProductIdentifierInput, ProductUncheckedCreateWithoutProductIdentifierInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductIdentifierInput
    connect?: ProductWhereUniqueInput
  }

  export type EnumProductIdentifierTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProductIdentifierType
  }

  export type ProductUpdateOneRequiredWithoutProductIdentifierNestedInput = {
    create?: XOR<ProductCreateWithoutProductIdentifierInput, ProductUncheckedCreateWithoutProductIdentifierInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductIdentifierInput
    upsert?: ProductUpsertWithoutProductIdentifierInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductIdentifierInput, ProductUpdateWithoutProductIdentifierInput>, ProductUncheckedUpdateWithoutProductIdentifierInput>
  }

  export type ProductCreateNestedOneWithoutProductVariantInput = {
    create?: XOR<ProductCreateWithoutProductVariantInput, ProductUncheckedCreateWithoutProductVariantInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductVariantInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutProductVariantNestedInput = {
    create?: XOR<ProductCreateWithoutProductVariantInput, ProductUncheckedCreateWithoutProductVariantInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductVariantInput
    upsert?: ProductUpsertWithoutProductVariantInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductVariantInput, ProductUpdateWithoutProductVariantInput>, ProductUncheckedUpdateWithoutProductVariantInput>
  }

  export type UserCreateNestedOneWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutShippingDetailInput = {
    create?: XOR<InvoiceCreateWithoutShippingDetailInput, InvoiceUncheckedCreateWithoutShippingDetailInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutShippingDetailInput
    connect?: InvoiceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    upsert?: UserUpsertWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
  }

  export type InvoiceUpdateOneRequiredWithoutShippingDetailNestedInput = {
    create?: XOR<InvoiceCreateWithoutShippingDetailInput, InvoiceUncheckedCreateWithoutShippingDetailInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutShippingDetailInput
    upsert?: InvoiceUpsertWithoutShippingDetailInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutShippingDetailInput, InvoiceUpdateWithoutShippingDetailInput>, InvoiceUncheckedUpdateWithoutShippingDetailInput>
  }

  export type UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
    upsert?: UserUpsertWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
  }

  export type InvoiceDetailCreateNestedManyWithoutTaxRateInput = {
    create?: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput> | InvoiceDetailCreateWithoutTaxRateInput[] | InvoiceDetailUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutTaxRateInput | InvoiceDetailCreateOrConnectWithoutTaxRateInput[]
    createMany?: InvoiceDetailCreateManyTaxRateInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaxRate_TaxRate_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaxRate_TaxRate_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedManyWithoutTaxRateInput = {
    create?: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput> | TenantCreateWithoutTaxRateInput[] | TenantUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: TenantCreateOrConnectWithoutTaxRateInput | TenantCreateOrConnectWithoutTaxRateInput[]
    createMany?: TenantCreateManyTaxRateInputEnvelope
    connect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
  }

  export type InvoiceDetailUncheckedCreateNestedManyWithoutTaxRateInput = {
    create?: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput> | InvoiceDetailCreateWithoutTaxRateInput[] | InvoiceDetailUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutTaxRateInput | InvoiceDetailCreateOrConnectWithoutTaxRateInput[]
    createMany?: InvoiceDetailCreateManyTaxRateInputEnvelope
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
  }

  export type TenantUncheckedCreateNestedManyWithoutTaxRateInput = {
    create?: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput> | TenantCreateWithoutTaxRateInput[] | TenantUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: TenantCreateOrConnectWithoutTaxRateInput | TenantCreateOrConnectWithoutTaxRateInput[]
    createMany?: TenantCreateManyTaxRateInputEnvelope
    connect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
  }

  export type InvoiceDetailUpdateManyWithoutTaxRateNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput> | InvoiceDetailCreateWithoutTaxRateInput[] | InvoiceDetailUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutTaxRateInput | InvoiceDetailCreateOrConnectWithoutTaxRateInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutTaxRateInput | InvoiceDetailUpsertWithWhereUniqueWithoutTaxRateInput[]
    createMany?: InvoiceDetailCreateManyTaxRateInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutTaxRateInput | InvoiceDetailUpdateWithWhereUniqueWithoutTaxRateInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutTaxRateInput | InvoiceDetailUpdateManyWithWhereWithoutTaxRateInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutTaxRate_TaxRate_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaxRate_TaxRate_createdByIdToUserInput
    upsert?: UserUpsertWithoutTaxRate_TaxRate_createdByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput>, UserUncheckedUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput>
  }

  export type UserUpdateOneRequiredWithoutTaxRate_TaxRate_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaxRate_TaxRate_updatedByIdToUserInput
    upsert?: UserUpsertWithoutTaxRate_TaxRate_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput>, UserUncheckedUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
  }

  export type TenantUpdateManyWithoutTaxRateNestedInput = {
    create?: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput> | TenantCreateWithoutTaxRateInput[] | TenantUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: TenantCreateOrConnectWithoutTaxRateInput | TenantCreateOrConnectWithoutTaxRateInput[]
    upsert?: TenantUpsertWithWhereUniqueWithoutTaxRateInput | TenantUpsertWithWhereUniqueWithoutTaxRateInput[]
    createMany?: TenantCreateManyTaxRateInputEnvelope
    set?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    disconnect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    delete?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    connect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    update?: TenantUpdateWithWhereUniqueWithoutTaxRateInput | TenantUpdateWithWhereUniqueWithoutTaxRateInput[]
    updateMany?: TenantUpdateManyWithWhereWithoutTaxRateInput | TenantUpdateManyWithWhereWithoutTaxRateInput[]
    deleteMany?: TenantScalarWhereInput | TenantScalarWhereInput[]
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutTaxRateNestedInput = {
    create?: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput> | InvoiceDetailCreateWithoutTaxRateInput[] | InvoiceDetailUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: InvoiceDetailCreateOrConnectWithoutTaxRateInput | InvoiceDetailCreateOrConnectWithoutTaxRateInput[]
    upsert?: InvoiceDetailUpsertWithWhereUniqueWithoutTaxRateInput | InvoiceDetailUpsertWithWhereUniqueWithoutTaxRateInput[]
    createMany?: InvoiceDetailCreateManyTaxRateInputEnvelope
    set?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    disconnect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    delete?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    connect?: InvoiceDetailWhereUniqueInput | InvoiceDetailWhereUniqueInput[]
    update?: InvoiceDetailUpdateWithWhereUniqueWithoutTaxRateInput | InvoiceDetailUpdateWithWhereUniqueWithoutTaxRateInput[]
    updateMany?: InvoiceDetailUpdateManyWithWhereWithoutTaxRateInput | InvoiceDetailUpdateManyWithWhereWithoutTaxRateInput[]
    deleteMany?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
  }

  export type TenantUncheckedUpdateManyWithoutTaxRateNestedInput = {
    create?: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput> | TenantCreateWithoutTaxRateInput[] | TenantUncheckedCreateWithoutTaxRateInput[]
    connectOrCreate?: TenantCreateOrConnectWithoutTaxRateInput | TenantCreateOrConnectWithoutTaxRateInput[]
    upsert?: TenantUpsertWithWhereUniqueWithoutTaxRateInput | TenantUpsertWithWhereUniqueWithoutTaxRateInput[]
    createMany?: TenantCreateManyTaxRateInputEnvelope
    set?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    disconnect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    delete?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    connect?: TenantWhereUniqueInput | TenantWhereUniqueInput[]
    update?: TenantUpdateWithWhereUniqueWithoutTaxRateInput | TenantUpdateWithWhereUniqueWithoutTaxRateInput[]
    updateMany?: TenantUpdateManyWithWhereWithoutTaxRateInput | TenantUpdateManyWithWhereWithoutTaxRateInput[]
    deleteMany?: TenantScalarWhereInput | TenantScalarWhereInput[]
  }

  export type BusinessCreateNestedManyWithoutTenantInput = {
    create?: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput> | BusinessCreateWithoutTenantInput[] | BusinessUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutTenantInput | BusinessCreateOrConnectWithoutTenantInput[]
    createMany?: BusinessCreateManyTenantInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutTenantInput = {
    create?: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput> | CustomerCreateWithoutTenantInput[] | CustomerUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutTenantInput | CustomerCreateOrConnectWithoutTenantInput[]
    createMany?: CustomerCreateManyTenantInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutTenantInput = {
    create?: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput> | InvoiceCreateWithoutTenantInput[] | InvoiceUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutTenantInput | InvoiceCreateOrConnectWithoutTenantInput[]
    createMany?: InvoiceCreateManyTenantInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceSettingsCreateNestedOneWithoutTenantInput = {
    create?: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutTenantInput
    connect?: InvoiceSettingsWhereUniqueInput
  }

  export type OrderCreateNestedManyWithoutTenantInput = {
    create?: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput> | OrderCreateWithoutTenantInput[] | OrderUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutTenantInput | OrderCreateOrConnectWithoutTenantInput[]
    createMany?: OrderCreateManyTenantInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutTenantInput = {
    create?: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput> | ProductCreateWithoutTenantInput[] | ProductUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutTenantInput | ProductCreateOrConnectWithoutTenantInput[]
    createMany?: ProductCreateManyTenantInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type TaxRateCreateNestedOneWithoutTenantInput = {
    create?: XOR<TaxRateCreateWithoutTenantInput, TaxRateUncheckedCreateWithoutTenantInput>
    connectOrCreate?: TaxRateCreateOrConnectWithoutTenantInput
    connect?: TaxRateWhereUniqueInput
  }

  export type TenantMembershipCreateNestedManyWithoutTenantInput = {
    create?: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput> | TenantMembershipCreateWithoutTenantInput[] | TenantMembershipUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutTenantInput | TenantMembershipCreateOrConnectWithoutTenantInput[]
    createMany?: TenantMembershipCreateManyTenantInputEnvelope
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
  }

  export type BusinessUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput> | BusinessCreateWithoutTenantInput[] | BusinessUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutTenantInput | BusinessCreateOrConnectWithoutTenantInput[]
    createMany?: BusinessCreateManyTenantInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput> | CustomerCreateWithoutTenantInput[] | CustomerUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutTenantInput | CustomerCreateOrConnectWithoutTenantInput[]
    createMany?: CustomerCreateManyTenantInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput> | InvoiceCreateWithoutTenantInput[] | InvoiceUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutTenantInput | InvoiceCreateOrConnectWithoutTenantInput[]
    createMany?: InvoiceCreateManyTenantInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput = {
    create?: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutTenantInput
    connect?: InvoiceSettingsWhereUniqueInput
  }

  export type OrderUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput> | OrderCreateWithoutTenantInput[] | OrderUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutTenantInput | OrderCreateOrConnectWithoutTenantInput[]
    createMany?: OrderCreateManyTenantInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput> | ProductCreateWithoutTenantInput[] | ProductUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutTenantInput | ProductCreateOrConnectWithoutTenantInput[]
    createMany?: ProductCreateManyTenantInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type TenantMembershipUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput> | TenantMembershipCreateWithoutTenantInput[] | TenantMembershipUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutTenantInput | TenantMembershipCreateOrConnectWithoutTenantInput[]
    createMany?: TenantMembershipCreateManyTenantInputEnvelope
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
  }

  export type EnumPlanTierFieldUpdateOperationsInput = {
    set?: $Enums.PlanTier
  }

  export type BusinessUpdateManyWithoutTenantNestedInput = {
    create?: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput> | BusinessCreateWithoutTenantInput[] | BusinessUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutTenantInput | BusinessCreateOrConnectWithoutTenantInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutTenantInput | BusinessUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: BusinessCreateManyTenantInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutTenantInput | BusinessUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutTenantInput | BusinessUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutTenantNestedInput = {
    create?: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput> | CustomerCreateWithoutTenantInput[] | CustomerUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutTenantInput | CustomerCreateOrConnectWithoutTenantInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutTenantInput | CustomerUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: CustomerCreateManyTenantInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutTenantInput | CustomerUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutTenantInput | CustomerUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutTenantNestedInput = {
    create?: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput> | InvoiceCreateWithoutTenantInput[] | InvoiceUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutTenantInput | InvoiceCreateOrConnectWithoutTenantInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutTenantInput | InvoiceUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: InvoiceCreateManyTenantInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutTenantInput | InvoiceUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutTenantInput | InvoiceUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceSettingsUpdateOneWithoutTenantNestedInput = {
    create?: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutTenantInput
    upsert?: InvoiceSettingsUpsertWithoutTenantInput
    disconnect?: InvoiceSettingsWhereInput | boolean
    delete?: InvoiceSettingsWhereInput | boolean
    connect?: InvoiceSettingsWhereUniqueInput
    update?: XOR<XOR<InvoiceSettingsUpdateToOneWithWhereWithoutTenantInput, InvoiceSettingsUpdateWithoutTenantInput>, InvoiceSettingsUncheckedUpdateWithoutTenantInput>
  }

  export type OrderUpdateManyWithoutTenantNestedInput = {
    create?: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput> | OrderCreateWithoutTenantInput[] | OrderUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutTenantInput | OrderCreateOrConnectWithoutTenantInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutTenantInput | OrderUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: OrderCreateManyTenantInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutTenantInput | OrderUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutTenantInput | OrderUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput> | ProductCreateWithoutTenantInput[] | ProductUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutTenantInput | ProductCreateOrConnectWithoutTenantInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutTenantInput | ProductUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ProductCreateManyTenantInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutTenantInput | ProductUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutTenantInput | ProductUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type TaxRateUpdateOneWithoutTenantNestedInput = {
    create?: XOR<TaxRateCreateWithoutTenantInput, TaxRateUncheckedCreateWithoutTenantInput>
    connectOrCreate?: TaxRateCreateOrConnectWithoutTenantInput
    upsert?: TaxRateUpsertWithoutTenantInput
    disconnect?: TaxRateWhereInput | boolean
    delete?: TaxRateWhereInput | boolean
    connect?: TaxRateWhereUniqueInput
    update?: XOR<XOR<TaxRateUpdateToOneWithWhereWithoutTenantInput, TaxRateUpdateWithoutTenantInput>, TaxRateUncheckedUpdateWithoutTenantInput>
  }

  export type TenantMembershipUpdateManyWithoutTenantNestedInput = {
    create?: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput> | TenantMembershipCreateWithoutTenantInput[] | TenantMembershipUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutTenantInput | TenantMembershipCreateOrConnectWithoutTenantInput[]
    upsert?: TenantMembershipUpsertWithWhereUniqueWithoutTenantInput | TenantMembershipUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: TenantMembershipCreateManyTenantInputEnvelope
    set?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    disconnect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    delete?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    update?: TenantMembershipUpdateWithWhereUniqueWithoutTenantInput | TenantMembershipUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: TenantMembershipUpdateManyWithWhereWithoutTenantInput | TenantMembershipUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
  }

  export type BusinessUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput> | BusinessCreateWithoutTenantInput[] | BusinessUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutTenantInput | BusinessCreateOrConnectWithoutTenantInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutTenantInput | BusinessUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: BusinessCreateManyTenantInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutTenantInput | BusinessUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutTenantInput | BusinessUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput> | CustomerCreateWithoutTenantInput[] | CustomerUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutTenantInput | CustomerCreateOrConnectWithoutTenantInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutTenantInput | CustomerUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: CustomerCreateManyTenantInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutTenantInput | CustomerUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutTenantInput | CustomerUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput> | InvoiceCreateWithoutTenantInput[] | InvoiceUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutTenantInput | InvoiceCreateOrConnectWithoutTenantInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutTenantInput | InvoiceUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: InvoiceCreateManyTenantInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutTenantInput | InvoiceUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutTenantInput | InvoiceUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput = {
    create?: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
    connectOrCreate?: InvoiceSettingsCreateOrConnectWithoutTenantInput
    upsert?: InvoiceSettingsUpsertWithoutTenantInput
    disconnect?: InvoiceSettingsWhereInput | boolean
    delete?: InvoiceSettingsWhereInput | boolean
    connect?: InvoiceSettingsWhereUniqueInput
    update?: XOR<XOR<InvoiceSettingsUpdateToOneWithWhereWithoutTenantInput, InvoiceSettingsUpdateWithoutTenantInput>, InvoiceSettingsUncheckedUpdateWithoutTenantInput>
  }

  export type OrderUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput> | OrderCreateWithoutTenantInput[] | OrderUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutTenantInput | OrderCreateOrConnectWithoutTenantInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutTenantInput | OrderUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: OrderCreateManyTenantInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutTenantInput | OrderUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutTenantInput | OrderUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput> | ProductCreateWithoutTenantInput[] | ProductUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutTenantInput | ProductCreateOrConnectWithoutTenantInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutTenantInput | ProductUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: ProductCreateManyTenantInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutTenantInput | ProductUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutTenantInput | ProductUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput> | TenantMembershipCreateWithoutTenantInput[] | TenantMembershipUncheckedCreateWithoutTenantInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutTenantInput | TenantMembershipCreateOrConnectWithoutTenantInput[]
    upsert?: TenantMembershipUpsertWithWhereUniqueWithoutTenantInput | TenantMembershipUpsertWithWhereUniqueWithoutTenantInput[]
    createMany?: TenantMembershipCreateManyTenantInputEnvelope
    set?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    disconnect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    delete?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    update?: TenantMembershipUpdateWithWhereUniqueWithoutTenantInput | TenantMembershipUpdateWithWhereUniqueWithoutTenantInput[]
    updateMany?: TenantMembershipUpdateManyWithWhereWithoutTenantInput | TenantMembershipUpdateManyWithWhereWithoutTenantInput[]
    deleteMany?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
  }

  export type TenantMembershipCreatepermissionsInput = {
    set: $Enums.Permission[]
  }

  export type TenantCreateNestedOneWithoutTenantMembershipInput = {
    create?: XOR<TenantCreateWithoutTenantMembershipInput, TenantUncheckedCreateWithoutTenantMembershipInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTenantMembershipInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTenantMembershipInput = {
    create?: XOR<UserCreateWithoutTenantMembershipInput, UserUncheckedCreateWithoutTenantMembershipInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantMembershipInput
    connect?: UserWhereUniqueInput
  }

  export type EnumTenantRoleFieldUpdateOperationsInput = {
    set?: $Enums.TenantRole
  }

  export type TenantMembershipUpdatepermissionsInput = {
    set?: $Enums.Permission[]
    push?: $Enums.Permission | $Enums.Permission[]
  }

  export type TenantUpdateOneRequiredWithoutTenantMembershipNestedInput = {
    create?: XOR<TenantCreateWithoutTenantMembershipInput, TenantUncheckedCreateWithoutTenantMembershipInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTenantMembershipInput
    upsert?: TenantUpsertWithoutTenantMembershipInput
    connect?: TenantWhereUniqueInput
    update?: XOR<XOR<TenantUpdateToOneWithWhereWithoutTenantMembershipInput, TenantUpdateWithoutTenantMembershipInput>, TenantUncheckedUpdateWithoutTenantMembershipInput>
  }

  export type UserUpdateOneRequiredWithoutTenantMembershipNestedInput = {
    create?: XOR<UserCreateWithoutTenantMembershipInput, UserUncheckedCreateWithoutTenantMembershipInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantMembershipInput
    upsert?: UserUpsertWithoutTenantMembershipInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTenantMembershipInput, UserUpdateWithoutTenantMembershipInput>, UserUncheckedUpdateWithoutTenantMembershipInput>
  }

  export type AuditLogCreateNestedManyWithoutUserInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput> | BusinessCreateWithoutUser_Business_createdByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_createdByIdToUserInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput> | BusinessCreateWithoutUser_Business_updatedByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_updatedByIdToUserInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput> | CustomerCreateWithoutUser_Customer_createdByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_createdByIdToUserInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput> | CustomerCreateWithoutUser_Customer_updatedByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_updatedByIdToUserInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput> | DiscountCreateWithoutUser_Discount_createdByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_createdByIdToUserInputEnvelope
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
  }

  export type DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput> | DiscountCreateWithoutUser_Discount_updatedByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_updatedByIdToUserInputEnvelope
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_createdByIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput> | InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_soldByUserIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_updatedByIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput> | PaymentCreateWithoutUser_Payment_createdByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_createdByIdToUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput> | PaymentCreateWithoutUser_Payment_updatedByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_updatedByIdToUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput = {
    create?: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput> | ProductCreateWithoutUser_Product_createdByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_createdByIdToUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput = {
    create?: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput> | ProductCreateWithoutUser_Product_updatedByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_updatedByIdToUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_createdByIdToUserInputEnvelope
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
  }

  export type TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_updatedByIdToUserInputEnvelope
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
  }

  export type TenantMembershipCreateNestedManyWithoutUserInput = {
    create?: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput> | TenantMembershipCreateWithoutUserInput[] | TenantMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutUserInput | TenantMembershipCreateOrConnectWithoutUserInput[]
    createMany?: TenantMembershipCreateManyUserInputEnvelope
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
  }

  export type AuditLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput> | BusinessCreateWithoutUser_Business_createdByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_createdByIdToUserInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput> | BusinessCreateWithoutUser_Business_updatedByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_updatedByIdToUserInputEnvelope
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput> | CustomerCreateWithoutUser_Customer_createdByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_createdByIdToUserInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput> | CustomerCreateWithoutUser_Customer_updatedByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_updatedByIdToUserInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput> | DiscountCreateWithoutUser_Discount_createdByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_createdByIdToUserInputEnvelope
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
  }

  export type DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput> | DiscountCreateWithoutUser_Discount_updatedByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_updatedByIdToUserInputEnvelope
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_createdByIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput> | InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_soldByUserIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_updatedByIdToUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput> | PaymentCreateWithoutUser_Payment_createdByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_createdByIdToUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput> | PaymentCreateWithoutUser_Payment_updatedByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_updatedByIdToUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput = {
    create?: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput> | ProductCreateWithoutUser_Product_createdByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_createdByIdToUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput = {
    create?: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput> | ProductCreateWithoutUser_Product_updatedByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_updatedByIdToUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInputEnvelope
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
  }

  export type TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_createdByIdToUserInputEnvelope
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
  }

  export type TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_updatedByIdToUserInputEnvelope
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
  }

  export type TenantMembershipUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput> | TenantMembershipCreateWithoutUserInput[] | TenantMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutUserInput | TenantMembershipCreateOrConnectWithoutUserInput[]
    createMany?: TenantMembershipCreateManyUserInputEnvelope
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type AuditLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutUserInput | AuditLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutUserInput | AuditLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutUserInput | AuditLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput> | BusinessCreateWithoutUser_Business_createdByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutUser_Business_createdByIdToUserInput | BusinessUpsertWithWhereUniqueWithoutUser_Business_createdByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_createdByIdToUserInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutUser_Business_createdByIdToUserInput | BusinessUpdateWithWhereUniqueWithoutUser_Business_createdByIdToUserInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutUser_Business_createdByIdToUserInput | BusinessUpdateManyWithWhereWithoutUser_Business_createdByIdToUserInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput> | BusinessCreateWithoutUser_Business_updatedByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput | BusinessUpsertWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_updatedByIdToUserInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput | BusinessUpdateWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutUser_Business_updatedByIdToUserInput | BusinessUpdateManyWithWhereWithoutUser_Business_updatedByIdToUserInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput> | CustomerCreateWithoutUser_Customer_createdByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput | CustomerUpsertWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_createdByIdToUserInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput | CustomerUpdateWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutUser_Customer_createdByIdToUserInput | CustomerUpdateManyWithWhereWithoutUser_Customer_createdByIdToUserInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput> | CustomerCreateWithoutUser_Customer_updatedByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput | CustomerUpsertWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_updatedByIdToUserInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput | CustomerUpdateWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutUser_Customer_updatedByIdToUserInput | CustomerUpdateManyWithWhereWithoutUser_Customer_updatedByIdToUserInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput> | DiscountCreateWithoutUser_Discount_createdByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput[]
    upsert?: DiscountUpsertWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput | DiscountUpsertWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_createdByIdToUserInputEnvelope
    set?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    disconnect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    delete?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    update?: DiscountUpdateWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput | DiscountUpdateWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput[]
    updateMany?: DiscountUpdateManyWithWhereWithoutUser_Discount_createdByIdToUserInput | DiscountUpdateManyWithWhereWithoutUser_Discount_createdByIdToUserInput[]
    deleteMany?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
  }

  export type DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput> | DiscountCreateWithoutUser_Discount_updatedByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput[]
    upsert?: DiscountUpsertWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput | DiscountUpsertWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_updatedByIdToUserInputEnvelope
    set?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    disconnect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    delete?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    update?: DiscountUpdateWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput | DiscountUpdateWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput[]
    updateMany?: DiscountUpdateManyWithWhereWithoutUser_Discount_updatedByIdToUserInput | DiscountUpdateManyWithWhereWithoutUser_Discount_updatedByIdToUserInput[]
    deleteMany?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_createdByIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_createdByIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput> | InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_soldByUserIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_soldByUserIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_updatedByIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_updatedByIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput> | PaymentCreateWithoutUser_Payment_createdByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput | PaymentUpsertWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_createdByIdToUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput | PaymentUpdateWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUser_Payment_createdByIdToUserInput | PaymentUpdateManyWithWhereWithoutUser_Payment_createdByIdToUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput> | PaymentCreateWithoutUser_Payment_updatedByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput | PaymentUpsertWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_updatedByIdToUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput | PaymentUpdateWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUser_Payment_updatedByIdToUserInput | PaymentUpdateManyWithWhereWithoutUser_Payment_updatedByIdToUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput = {
    create?: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput> | ProductCreateWithoutUser_Product_createdByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUser_Product_createdByIdToUserInput | ProductUpsertWithWhereUniqueWithoutUser_Product_createdByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_createdByIdToUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUser_Product_createdByIdToUserInput | ProductUpdateWithWhereUniqueWithoutUser_Product_createdByIdToUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUser_Product_createdByIdToUserInput | ProductUpdateManyWithWhereWithoutUser_Product_createdByIdToUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput = {
    create?: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput> | ProductCreateWithoutUser_Product_updatedByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput | ProductUpsertWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_updatedByIdToUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput | ProductUpdateWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUser_Product_updatedByIdToUserInput | ProductUpdateManyWithWhereWithoutUser_Product_updatedByIdToUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_createdByIdToUserInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput[]
    upsert?: TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_createdByIdToUserInputEnvelope
    set?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    disconnect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    delete?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    update?: TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput[]
    updateMany?: TaxRateUpdateManyWithWhereWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpdateManyWithWhereWithoutUser_TaxRate_createdByIdToUserInput[]
    deleteMany?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
  }

  export type TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput[]
    upsert?: TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_updatedByIdToUserInputEnvelope
    set?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    disconnect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    delete?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    update?: TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput[]
    updateMany?: TaxRateUpdateManyWithWhereWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpdateManyWithWhereWithoutUser_TaxRate_updatedByIdToUserInput[]
    deleteMany?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
  }

  export type TenantMembershipUpdateManyWithoutUserNestedInput = {
    create?: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput> | TenantMembershipCreateWithoutUserInput[] | TenantMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutUserInput | TenantMembershipCreateOrConnectWithoutUserInput[]
    upsert?: TenantMembershipUpsertWithWhereUniqueWithoutUserInput | TenantMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TenantMembershipCreateManyUserInputEnvelope
    set?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    disconnect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    delete?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    update?: TenantMembershipUpdateWithWhereUniqueWithoutUserInput | TenantMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TenantMembershipUpdateManyWithWhereWithoutUserInput | TenantMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
  }

  export type AuditLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutUserInput | AuditLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutUserInput | AuditLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutUserInput | AuditLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput> | BusinessCreateWithoutUser_Business_createdByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutUser_Business_createdByIdToUserInput | BusinessUpsertWithWhereUniqueWithoutUser_Business_createdByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_createdByIdToUserInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutUser_Business_createdByIdToUserInput | BusinessUpdateWithWhereUniqueWithoutUser_Business_createdByIdToUserInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutUser_Business_createdByIdToUserInput | BusinessUpdateManyWithWhereWithoutUser_Business_createdByIdToUserInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput = {
    create?: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput> | BusinessCreateWithoutUser_Business_updatedByIdToUserInput[] | BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput[]
    connectOrCreate?: BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput | BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput[]
    upsert?: BusinessUpsertWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput | BusinessUpsertWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput[]
    createMany?: BusinessCreateManyUser_Business_updatedByIdToUserInputEnvelope
    set?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    disconnect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    delete?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    connect?: BusinessWhereUniqueInput | BusinessWhereUniqueInput[]
    update?: BusinessUpdateWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput | BusinessUpdateWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput[]
    updateMany?: BusinessUpdateManyWithWhereWithoutUser_Business_updatedByIdToUserInput | BusinessUpdateManyWithWhereWithoutUser_Business_updatedByIdToUserInput[]
    deleteMany?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput> | CustomerCreateWithoutUser_Customer_createdByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput | CustomerUpsertWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_createdByIdToUserInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput | CustomerUpdateWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutUser_Customer_createdByIdToUserInput | CustomerUpdateManyWithWhereWithoutUser_Customer_createdByIdToUserInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput = {
    create?: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput> | CustomerCreateWithoutUser_Customer_updatedByIdToUserInput[] | CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput | CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput | CustomerUpsertWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput[]
    createMany?: CustomerCreateManyUser_Customer_updatedByIdToUserInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput | CustomerUpdateWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutUser_Customer_updatedByIdToUserInput | CustomerUpdateManyWithWhereWithoutUser_Customer_updatedByIdToUserInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput> | DiscountCreateWithoutUser_Discount_createdByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput[]
    upsert?: DiscountUpsertWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput | DiscountUpsertWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_createdByIdToUserInputEnvelope
    set?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    disconnect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    delete?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    update?: DiscountUpdateWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput | DiscountUpdateWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput[]
    updateMany?: DiscountUpdateManyWithWhereWithoutUser_Discount_createdByIdToUserInput | DiscountUpdateManyWithWhereWithoutUser_Discount_createdByIdToUserInput[]
    deleteMany?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
  }

  export type DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput = {
    create?: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput> | DiscountCreateWithoutUser_Discount_updatedByIdToUserInput[] | DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput[]
    connectOrCreate?: DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput | DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput[]
    upsert?: DiscountUpsertWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput | DiscountUpsertWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput[]
    createMany?: DiscountCreateManyUser_Discount_updatedByIdToUserInputEnvelope
    set?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    disconnect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    delete?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    connect?: DiscountWhereUniqueInput | DiscountWhereUniqueInput[]
    update?: DiscountUpdateWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput | DiscountUpdateWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput[]
    updateMany?: DiscountUpdateManyWithWhereWithoutUser_Discount_updatedByIdToUserInput | DiscountUpdateManyWithWhereWithoutUser_Discount_updatedByIdToUserInput[]
    deleteMany?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_createdByIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_createdByIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_createdByIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput> | InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_soldByUserIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_soldByUserIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_soldByUserIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput> | InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput[] | InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput | InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput[]
    createMany?: InvoiceCreateManyUser_Invoice_updatedByIdToUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUser_Invoice_updatedByIdToUserInput | InvoiceUpdateManyWithWhereWithoutUser_Invoice_updatedByIdToUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput> | PaymentCreateWithoutUser_Payment_createdByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput | PaymentUpsertWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_createdByIdToUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput | PaymentUpdateWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUser_Payment_createdByIdToUserInput | PaymentUpdateManyWithWhereWithoutUser_Payment_createdByIdToUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput> | PaymentCreateWithoutUser_Payment_updatedByIdToUserInput[] | PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput | PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput | PaymentUpsertWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput[]
    createMany?: PaymentCreateManyUser_Payment_updatedByIdToUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput | PaymentUpdateWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUser_Payment_updatedByIdToUserInput | PaymentUpdateManyWithWhereWithoutUser_Payment_updatedByIdToUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput = {
    create?: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput> | ProductCreateWithoutUser_Product_createdByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUser_Product_createdByIdToUserInput | ProductUpsertWithWhereUniqueWithoutUser_Product_createdByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_createdByIdToUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUser_Product_createdByIdToUserInput | ProductUpdateWithWhereUniqueWithoutUser_Product_createdByIdToUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUser_Product_createdByIdToUserInput | ProductUpdateManyWithWhereWithoutUser_Product_createdByIdToUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput = {
    create?: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput> | ProductCreateWithoutUser_Product_updatedByIdToUserInput[] | ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput | ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput | ProductUpsertWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput[]
    createMany?: ProductCreateManyUser_Product_updatedByIdToUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput | ProductUpdateWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUser_Product_updatedByIdToUserInput | ProductUpdateManyWithWhereWithoutUser_Product_updatedByIdToUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_createdByIdToUserInput | ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_createdByIdToUserInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput = {
    create?: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput> | ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[] | ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    connectOrCreate?: ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    upsert?: ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    createMany?: ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInputEnvelope
    set?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    disconnect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    delete?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    connect?: ShippingDetailWhereUniqueInput | ShippingDetailWhereUniqueInput[]
    update?: ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    updateMany?: ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_updatedByIdToUserInput[]
    deleteMany?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
  }

  export type TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput[]
    upsert?: TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_createdByIdToUserInputEnvelope
    set?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    disconnect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    delete?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    update?: TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput[]
    updateMany?: TaxRateUpdateManyWithWhereWithoutUser_TaxRate_createdByIdToUserInput | TaxRateUpdateManyWithWhereWithoutUser_TaxRate_createdByIdToUserInput[]
    deleteMany?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
  }

  export type TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput = {
    create?: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput> | TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput[] | TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput[]
    connectOrCreate?: TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput[]
    upsert?: TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput[]
    createMany?: TaxRateCreateManyUser_TaxRate_updatedByIdToUserInputEnvelope
    set?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    disconnect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    delete?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    connect?: TaxRateWhereUniqueInput | TaxRateWhereUniqueInput[]
    update?: TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput[]
    updateMany?: TaxRateUpdateManyWithWhereWithoutUser_TaxRate_updatedByIdToUserInput | TaxRateUpdateManyWithWhereWithoutUser_TaxRate_updatedByIdToUserInput[]
    deleteMany?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
  }

  export type TenantMembershipUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput> | TenantMembershipCreateWithoutUserInput[] | TenantMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: TenantMembershipCreateOrConnectWithoutUserInput | TenantMembershipCreateOrConnectWithoutUserInput[]
    upsert?: TenantMembershipUpsertWithWhereUniqueWithoutUserInput | TenantMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: TenantMembershipCreateManyUserInputEnvelope
    set?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    disconnect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    delete?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    connect?: TenantMembershipWhereUniqueInput | TenantMembershipWhereUniqueInput[]
    update?: TenantMembershipUpdateWithWhereUniqueWithoutUserInput | TenantMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: TenantMembershipUpdateManyWithWhereWithoutUserInput | TenantMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
  }

  export type ZipCityCreateNestedManyWithoutZipCacheInput = {
    create?: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput> | ZipCityCreateWithoutZipCacheInput[] | ZipCityUncheckedCreateWithoutZipCacheInput[]
    connectOrCreate?: ZipCityCreateOrConnectWithoutZipCacheInput | ZipCityCreateOrConnectWithoutZipCacheInput[]
    createMany?: ZipCityCreateManyZipCacheInputEnvelope
    connect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
  }

  export type ZipCityUncheckedCreateNestedManyWithoutZipCacheInput = {
    create?: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput> | ZipCityCreateWithoutZipCacheInput[] | ZipCityUncheckedCreateWithoutZipCacheInput[]
    connectOrCreate?: ZipCityCreateOrConnectWithoutZipCacheInput | ZipCityCreateOrConnectWithoutZipCacheInput[]
    createMany?: ZipCityCreateManyZipCacheInputEnvelope
    connect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ZipCityUpdateManyWithoutZipCacheNestedInput = {
    create?: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput> | ZipCityCreateWithoutZipCacheInput[] | ZipCityUncheckedCreateWithoutZipCacheInput[]
    connectOrCreate?: ZipCityCreateOrConnectWithoutZipCacheInput | ZipCityCreateOrConnectWithoutZipCacheInput[]
    upsert?: ZipCityUpsertWithWhereUniqueWithoutZipCacheInput | ZipCityUpsertWithWhereUniqueWithoutZipCacheInput[]
    createMany?: ZipCityCreateManyZipCacheInputEnvelope
    set?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    disconnect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    delete?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    connect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    update?: ZipCityUpdateWithWhereUniqueWithoutZipCacheInput | ZipCityUpdateWithWhereUniqueWithoutZipCacheInput[]
    updateMany?: ZipCityUpdateManyWithWhereWithoutZipCacheInput | ZipCityUpdateManyWithWhereWithoutZipCacheInput[]
    deleteMany?: ZipCityScalarWhereInput | ZipCityScalarWhereInput[]
  }

  export type ZipCityUncheckedUpdateManyWithoutZipCacheNestedInput = {
    create?: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput> | ZipCityCreateWithoutZipCacheInput[] | ZipCityUncheckedCreateWithoutZipCacheInput[]
    connectOrCreate?: ZipCityCreateOrConnectWithoutZipCacheInput | ZipCityCreateOrConnectWithoutZipCacheInput[]
    upsert?: ZipCityUpsertWithWhereUniqueWithoutZipCacheInput | ZipCityUpsertWithWhereUniqueWithoutZipCacheInput[]
    createMany?: ZipCityCreateManyZipCacheInputEnvelope
    set?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    disconnect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    delete?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    connect?: ZipCityWhereUniqueInput | ZipCityWhereUniqueInput[]
    update?: ZipCityUpdateWithWhereUniqueWithoutZipCacheInput | ZipCityUpdateWithWhereUniqueWithoutZipCacheInput[]
    updateMany?: ZipCityUpdateManyWithWhereWithoutZipCacheInput | ZipCityUpdateManyWithWhereWithoutZipCacheInput[]
    deleteMany?: ZipCityScalarWhereInput | ZipCityScalarWhereInput[]
  }

  export type ZipCacheCreateNestedOneWithoutZipCityInput = {
    create?: XOR<ZipCacheCreateWithoutZipCityInput, ZipCacheUncheckedCreateWithoutZipCityInput>
    connectOrCreate?: ZipCacheCreateOrConnectWithoutZipCityInput
    connect?: ZipCacheWhereUniqueInput
  }

  export type ZipCacheUpdateOneRequiredWithoutZipCityNestedInput = {
    create?: XOR<ZipCacheCreateWithoutZipCityInput, ZipCacheUncheckedCreateWithoutZipCityInput>
    connectOrCreate?: ZipCacheCreateOrConnectWithoutZipCityInput
    upsert?: ZipCacheUpsertWithoutZipCityInput
    connect?: ZipCacheWhereUniqueInput
    update?: XOR<XOR<ZipCacheUpdateToOneWithWhereWithoutZipCityInput, ZipCacheUpdateWithoutZipCityInput>, ZipCacheUncheckedUpdateWithoutZipCityInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type NestedEnumPaymentTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentTypeNullableFilter<$PrismaModel> | $Enums.PaymentType | null
  }

  export type NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel> | $Enums.ProductIdentifierType | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductIdentifierTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumProductIdentifierTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.ProductIdentifierType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumProductIdentifierTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductIdentifierTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductIdentifierTypeFilter<$PrismaModel> | $Enums.ProductIdentifierType
  }

  export type NestedEnumProductIdentifierTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductIdentifierType | EnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductIdentifierType[] | ListEnumProductIdentifierTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductIdentifierTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductIdentifierType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductIdentifierTypeFilter<$PrismaModel>
    _max?: NestedEnumProductIdentifierTypeFilter<$PrismaModel>
  }

  export type NestedEnumPlanTierFilter<$PrismaModel = never> = {
    equals?: $Enums.PlanTier | EnumPlanTierFieldRefInput<$PrismaModel>
    in?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPlanTierFilter<$PrismaModel> | $Enums.PlanTier
  }

  export type NestedEnumPlanTierWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PlanTier | EnumPlanTierFieldRefInput<$PrismaModel>
    in?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PlanTier[] | ListEnumPlanTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPlanTierWithAggregatesFilter<$PrismaModel> | $Enums.PlanTier
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPlanTierFilter<$PrismaModel>
    _max?: NestedEnumPlanTierFilter<$PrismaModel>
  }

  export type NestedEnumTenantRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.TenantRole | EnumTenantRoleFieldRefInput<$PrismaModel>
    in?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumTenantRoleFilter<$PrismaModel> | $Enums.TenantRole
  }

  export type NestedEnumTenantRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TenantRole | EnumTenantRoleFieldRefInput<$PrismaModel>
    in?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.TenantRole[] | ListEnumTenantRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumTenantRoleWithAggregatesFilter<$PrismaModel> | $Enums.TenantRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTenantRoleFilter<$PrismaModel>
    _max?: NestedEnumTenantRoleFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type UserCreateWithoutAuditLogInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuditLogInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuditLogInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditLogInput, UserUncheckedCreateWithoutAuditLogInput>
  }

  export type UserUpsertWithoutAuditLogInput = {
    update: XOR<UserUpdateWithoutAuditLogInput, UserUncheckedUpdateWithoutAuditLogInput>
    create: XOR<UserCreateWithoutAuditLogInput, UserUncheckedCreateWithoutAuditLogInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditLogInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditLogInput, UserUncheckedUpdateWithoutAuditLogInput>
  }

  export type UserUpdateWithoutAuditLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutBusiness_Business_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBusiness_Business_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBusiness_Business_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_createdByIdToUserInput>
  }

  export type TenantCreateWithoutBusinessInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutBusinessInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutBusinessInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutBusinessInput, TenantUncheckedCreateWithoutBusinessInput>
  }

  export type UserCreateWithoutBusiness_Business_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBusiness_Business_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBusiness_Business_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_updatedByIdToUserInput>
  }

  export type UserUpsertWithoutBusiness_Business_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedUpdateWithoutBusiness_Business_createdByIdToUserInput>
    create: XOR<UserCreateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBusiness_Business_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBusiness_Business_createdByIdToUserInput, UserUncheckedUpdateWithoutBusiness_Business_createdByIdToUserInput>
  }

  export type UserUpdateWithoutBusiness_Business_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBusiness_Business_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TenantUpsertWithoutBusinessInput = {
    update: XOR<TenantUpdateWithoutBusinessInput, TenantUncheckedUpdateWithoutBusinessInput>
    create: XOR<TenantCreateWithoutBusinessInput, TenantUncheckedCreateWithoutBusinessInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutBusinessInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutBusinessInput, TenantUncheckedUpdateWithoutBusinessInput>
  }

  export type TenantUpdateWithoutBusinessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutBusinessInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutBusiness_Business_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedUpdateWithoutBusiness_Business_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedCreateWithoutBusiness_Business_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBusiness_Business_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBusiness_Business_updatedByIdToUserInput, UserUncheckedUpdateWithoutBusiness_Business_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutBusiness_Business_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBusiness_Business_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutCustomer_Customer_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomer_Customer_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomer_Customer_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_createdByIdToUserInput>
  }

  export type TenantCreateWithoutCustomerInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutCustomerInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutCustomerInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutCustomerInput, TenantUncheckedCreateWithoutCustomerInput>
  }

  export type UserCreateWithoutCustomer_Customer_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomer_Customer_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomer_Customer_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_updatedByIdToUserInput>
  }

  export type InvoiceCreateWithoutCustomerInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutCustomerInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutCustomerInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput>
  }

  export type InvoiceCreateManyCustomerInputEnvelope = {
    data: InvoiceCreateManyCustomerInput | InvoiceCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCustomerInput = {
    id: string
    orderNumber: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceCreateNestedManyWithoutOrderInput
    Tenant: TenantCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id: string
    orderNumber: string
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutOrderInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCustomer_Customer_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedUpdateWithoutCustomer_Customer_createdByIdToUserInput>
    create: XOR<UserCreateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomer_Customer_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomer_Customer_createdByIdToUserInput, UserUncheckedUpdateWithoutCustomer_Customer_createdByIdToUserInput>
  }

  export type UserUpdateWithoutCustomer_Customer_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomer_Customer_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TenantUpsertWithoutCustomerInput = {
    update: XOR<TenantUpdateWithoutCustomerInput, TenantUncheckedUpdateWithoutCustomerInput>
    create: XOR<TenantCreateWithoutCustomerInput, TenantUncheckedCreateWithoutCustomerInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutCustomerInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutCustomerInput, TenantUncheckedUpdateWithoutCustomerInput>
  }

  export type TenantUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutCustomer_Customer_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedUpdateWithoutCustomer_Customer_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedCreateWithoutCustomer_Customer_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomer_Customer_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomer_Customer_updatedByIdToUserInput, UserUncheckedUpdateWithoutCustomer_Customer_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutCustomer_Customer_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomer_Customer_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceUpsertWithWhereUniqueWithoutCustomerInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutCustomerInput, InvoiceUncheckedUpdateWithoutCustomerInput>
    create: XOR<InvoiceCreateWithoutCustomerInput, InvoiceUncheckedCreateWithoutCustomerInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutCustomerInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutCustomerInput, InvoiceUncheckedUpdateWithoutCustomerInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutCustomerInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutCustomerInput>
  }

  export type InvoiceScalarWhereInput = {
    AND?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    OR?: InvoiceScalarWhereInput[]
    NOT?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    id?: StringFilter<"Invoice"> | string
    number?: StringNullableFilter<"Invoice"> | string | null
    amount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
    paymentType?: EnumPaymentTypeNullableFilter<"Invoice"> | $Enums.PaymentType | null
    orderId?: StringNullableFilter<"Invoice"> | string | null
    parentInvoiceId?: StringNullableFilter<"Invoice"> | string | null
    customerId?: IntFilter<"Invoice"> | number
    tenantId?: StringFilter<"Invoice"> | string
    createdById?: StringFilter<"Invoice"> | string
    updatedById?: StringFilter<"Invoice"> | string
    soldByUserId?: StringNullableFilter<"Invoice"> | string | null
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    deleted?: BoolFilter<"Invoice"> | boolean
    taxExempt?: BoolFilter<"Invoice"> | boolean
    taxExemptId?: StringNullableFilter<"Invoice"> | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    customerId?: IntNullableFilter<"Order"> | number | null
    tenantId?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    deleted?: BoolFilter<"Order"> | boolean
  }

  export type UserCreateWithoutDiscount_Discount_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutDiscount_Discount_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDiscount_Discount_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_createdByIdToUserInput>
  }

  export type UserCreateWithoutDiscount_Discount_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutDiscount_Discount_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDiscount_Discount_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_updatedByIdToUserInput>
  }

  export type InvoiceDetailCreateWithoutDiscountInput = {
    quantity: number
    lineTotal: Decimal | DecimalJsLike | number | string
    Invoice: InvoiceCreateNestedOneWithoutInvoiceDetailInput
    Product: ProductCreateNestedOneWithoutInvoiceDetailInput
    TaxRate?: TaxRateCreateNestedOneWithoutInvoiceDetailInput
  }

  export type InvoiceDetailUncheckedCreateWithoutDiscountInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    taxId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailCreateOrConnectWithoutDiscountInput = {
    where: InvoiceDetailWhereUniqueInput
    create: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput>
  }

  export type InvoiceDetailCreateManyDiscountInputEnvelope = {
    data: InvoiceDetailCreateManyDiscountInput | InvoiceDetailCreateManyDiscountInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDiscount_Discount_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedUpdateWithoutDiscount_Discount_createdByIdToUserInput>
    create: XOR<UserCreateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDiscount_Discount_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDiscount_Discount_createdByIdToUserInput, UserUncheckedUpdateWithoutDiscount_Discount_createdByIdToUserInput>
  }

  export type UserUpdateWithoutDiscount_Discount_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDiscount_Discount_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutDiscount_Discount_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedUpdateWithoutDiscount_Discount_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedCreateWithoutDiscount_Discount_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDiscount_Discount_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDiscount_Discount_updatedByIdToUserInput, UserUncheckedUpdateWithoutDiscount_Discount_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutDiscount_Discount_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDiscount_Discount_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceDetailUpsertWithWhereUniqueWithoutDiscountInput = {
    where: InvoiceDetailWhereUniqueInput
    update: XOR<InvoiceDetailUpdateWithoutDiscountInput, InvoiceDetailUncheckedUpdateWithoutDiscountInput>
    create: XOR<InvoiceDetailCreateWithoutDiscountInput, InvoiceDetailUncheckedCreateWithoutDiscountInput>
  }

  export type InvoiceDetailUpdateWithWhereUniqueWithoutDiscountInput = {
    where: InvoiceDetailWhereUniqueInput
    data: XOR<InvoiceDetailUpdateWithoutDiscountInput, InvoiceDetailUncheckedUpdateWithoutDiscountInput>
  }

  export type InvoiceDetailUpdateManyWithWhereWithoutDiscountInput = {
    where: InvoiceDetailScalarWhereInput
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyWithoutDiscountInput>
  }

  export type InvoiceDetailScalarWhereInput = {
    AND?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
    OR?: InvoiceDetailScalarWhereInput[]
    NOT?: InvoiceDetailScalarWhereInput | InvoiceDetailScalarWhereInput[]
    id?: IntFilter<"InvoiceDetail"> | number
    invoiceId?: StringFilter<"InvoiceDetail"> | string
    productId?: IntFilter<"InvoiceDetail"> | number
    quantity?: IntFilter<"InvoiceDetail"> | number
    taxId?: IntNullableFilter<"InvoiceDetail"> | number | null
    discountId?: IntNullableFilter<"InvoiceDetail"> | number | null
    lineTotal?: DecimalFilter<"InvoiceDetail"> | Decimal | DecimalJsLike | number | string
  }

  export type UserCreateWithoutInvoice_Invoice_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInvoice_Invoice_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInvoice_Invoice_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_createdByIdToUserInput>
  }

  export type CustomerCreateWithoutInvoiceInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    User_Customer_createdByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutCustomerInput
    User_Customer_updatedByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutInvoiceInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    tenantId: string
    deleted?: boolean
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutInvoiceInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutInvoiceInput, CustomerUncheckedCreateWithoutInvoiceInput>
  }

  export type OrderCreateWithoutInvoiceInput = {
    id: string
    orderNumber: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Customer?: CustomerCreateNestedOneWithoutOrderInput
    Tenant: TenantCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutInvoiceInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutInvoiceInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceCreateWithoutOther_InvoiceInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutOther_InvoiceInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutOther_InvoiceInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutOther_InvoiceInput, InvoiceUncheckedCreateWithoutOther_InvoiceInput>
  }

  export type InvoiceCreateWithoutInvoiceInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutInvoiceInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutInvoiceInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceCreateManyInvoiceInputEnvelope = {
    data: InvoiceCreateManyInvoiceInput | InvoiceCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_soldByUserIdToUserInput>
  }

  export type TenantCreateWithoutInvoiceInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutInvoiceInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutInvoiceInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutInvoiceInput, TenantUncheckedCreateWithoutInvoiceInput>
  }

  export type UserCreateWithoutInvoice_Invoice_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInvoice_Invoice_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInvoice_Invoice_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_updatedByIdToUserInput>
  }

  export type InvoiceDetailCreateWithoutInvoiceInput = {
    quantity: number
    lineTotal: Decimal | DecimalJsLike | number | string
    Discount?: DiscountCreateNestedOneWithoutInvoiceDetailInput
    Product: ProductCreateNestedOneWithoutInvoiceDetailInput
    TaxRate?: TaxRateCreateNestedOneWithoutInvoiceDetailInput
  }

  export type InvoiceDetailUncheckedCreateWithoutInvoiceInput = {
    id?: number
    productId: number
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailCreateOrConnectWithoutInvoiceInput = {
    where: InvoiceDetailWhereUniqueInput
    create: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceDetailCreateManyInvoiceInputEnvelope = {
    data: InvoiceDetailCreateManyInvoiceInput | InvoiceDetailCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceVersionCreateWithoutInvoiceInput = {
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
  }

  export type InvoiceVersionUncheckedCreateWithoutInvoiceInput = {
    id?: number
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
  }

  export type InvoiceVersionCreateOrConnectWithoutInvoiceInput = {
    where: InvoiceVersionWhereUniqueInput
    create: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceVersionCreateManyInvoiceInputEnvelope = {
    data: InvoiceVersionCreateManyInvoiceInput | InvoiceVersionCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutInvoiceInput = {
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    deleted?: boolean
    User_Payment_createdByIdToUser: UserCreateNestedOneWithoutPayment_Payment_createdByIdToUserInput
    User_Payment_updatedByIdToUser: UserCreateNestedOneWithoutPayment_Payment_updatedByIdToUserInput
  }

  export type PaymentUncheckedCreateWithoutInvoiceInput = {
    id?: number
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type PaymentCreateOrConnectWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentCreateManyInvoiceInputEnvelope = {
    data: PaymentCreateManyInvoiceInput | PaymentCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type ShippingDetailCreateWithoutInvoiceInput = {
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    User_ShippingDetail_updatedByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
  }

  export type ShippingDetailUncheckedCreateWithoutInvoiceInput = {
    id?: number
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailCreateOrConnectWithoutInvoiceInput = {
    where: ShippingDetailWhereUniqueInput
    create: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput>
  }

  export type ShippingDetailCreateManyInvoiceInputEnvelope = {
    data: ShippingDetailCreateManyInvoiceInput | ShippingDetailCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutInvoice_Invoice_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_createdByIdToUserInput>
    create: XOR<UserCreateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvoice_Invoice_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvoice_Invoice_createdByIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_createdByIdToUserInput>
  }

  export type UserUpdateWithoutInvoice_Invoice_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInvoice_Invoice_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CustomerUpsertWithoutInvoiceInput = {
    update: XOR<CustomerUpdateWithoutInvoiceInput, CustomerUncheckedUpdateWithoutInvoiceInput>
    create: XOR<CustomerCreateWithoutInvoiceInput, CustomerUncheckedCreateWithoutInvoiceInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutInvoiceInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutInvoiceInput, CustomerUncheckedUpdateWithoutInvoiceInput>
  }

  export type CustomerUpdateWithoutInvoiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Customer_createdByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutCustomerNestedInput
    User_Customer_updatedByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type OrderUpsertWithoutInvoiceInput = {
    update: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutInvoiceInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type OrderUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Customer?: CustomerUpdateOneWithoutOrderNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type InvoiceUpsertWithoutOther_InvoiceInput = {
    update: XOR<InvoiceUpdateWithoutOther_InvoiceInput, InvoiceUncheckedUpdateWithoutOther_InvoiceInput>
    create: XOR<InvoiceCreateWithoutOther_InvoiceInput, InvoiceUncheckedCreateWithoutOther_InvoiceInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutOther_InvoiceInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutOther_InvoiceInput, InvoiceUncheckedUpdateWithoutOther_InvoiceInput>
  }

  export type InvoiceUpdateWithoutOther_InvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutOther_InvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutInvoiceInput, InvoiceUncheckedUpdateWithoutInvoiceInput>
    create: XOR<InvoiceCreateWithoutInvoiceInput, InvoiceUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutInvoiceInput, InvoiceUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutInvoiceInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type UserUpsertWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    update: XOR<UserUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput>
    create: XOR<UserCreateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_soldByUserIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput>
  }

  export type UserUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInvoice_Invoice_soldByUserIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TenantUpsertWithoutInvoiceInput = {
    update: XOR<TenantUpdateWithoutInvoiceInput, TenantUncheckedUpdateWithoutInvoiceInput>
    create: XOR<TenantCreateWithoutInvoiceInput, TenantUncheckedCreateWithoutInvoiceInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutInvoiceInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutInvoiceInput, TenantUncheckedUpdateWithoutInvoiceInput>
  }

  export type TenantUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutInvoice_Invoice_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedCreateWithoutInvoice_Invoice_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvoice_Invoice_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvoice_Invoice_updatedByIdToUserInput, UserUncheckedUpdateWithoutInvoice_Invoice_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutInvoice_Invoice_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInvoice_Invoice_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceDetailUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceDetailWhereUniqueInput
    update: XOR<InvoiceDetailUpdateWithoutInvoiceInput, InvoiceDetailUncheckedUpdateWithoutInvoiceInput>
    create: XOR<InvoiceDetailCreateWithoutInvoiceInput, InvoiceDetailUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceDetailUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceDetailWhereUniqueInput
    data: XOR<InvoiceDetailUpdateWithoutInvoiceInput, InvoiceDetailUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceDetailUpdateManyWithWhereWithoutInvoiceInput = {
    where: InvoiceDetailScalarWhereInput
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type InvoiceVersionUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceVersionWhereUniqueInput
    update: XOR<InvoiceVersionUpdateWithoutInvoiceInput, InvoiceVersionUncheckedUpdateWithoutInvoiceInput>
    create: XOR<InvoiceVersionCreateWithoutInvoiceInput, InvoiceVersionUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceVersionUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceVersionWhereUniqueInput
    data: XOR<InvoiceVersionUpdateWithoutInvoiceInput, InvoiceVersionUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceVersionUpdateManyWithWhereWithoutInvoiceInput = {
    where: InvoiceVersionScalarWhereInput
    data: XOR<InvoiceVersionUpdateManyMutationInput, InvoiceVersionUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type InvoiceVersionScalarWhereInput = {
    AND?: InvoiceVersionScalarWhereInput | InvoiceVersionScalarWhereInput[]
    OR?: InvoiceVersionScalarWhereInput[]
    NOT?: InvoiceVersionScalarWhereInput | InvoiceVersionScalarWhereInput[]
    id?: IntFilter<"InvoiceVersion"> | number
    invoiceId?: StringFilter<"InvoiceVersion"> | string
    number?: StringFilter<"InvoiceVersion"> | string
    data?: JsonFilter<"InvoiceVersion">
    modifiedAt?: DateTimeFilter<"InvoiceVersion"> | Date | string
    modifiedBy?: StringFilter<"InvoiceVersion"> | string
  }

  export type PaymentUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
  }

  export type PaymentUpdateManyWithWhereWithoutInvoiceInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: IntFilter<"Payment"> | number
    invoiceId?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    date?: DateTimeFilter<"Payment"> | Date | string
    method?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    reference?: StringNullableFilter<"Payment"> | string | null
    createdById?: StringFilter<"Payment"> | string
    updatedById?: StringFilter<"Payment"> | string
    deleted?: BoolFilter<"Payment"> | boolean
  }

  export type ShippingDetailUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: ShippingDetailWhereUniqueInput
    update: XOR<ShippingDetailUpdateWithoutInvoiceInput, ShippingDetailUncheckedUpdateWithoutInvoiceInput>
    create: XOR<ShippingDetailCreateWithoutInvoiceInput, ShippingDetailUncheckedCreateWithoutInvoiceInput>
  }

  export type ShippingDetailUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: ShippingDetailWhereUniqueInput
    data: XOR<ShippingDetailUpdateWithoutInvoiceInput, ShippingDetailUncheckedUpdateWithoutInvoiceInput>
  }

  export type ShippingDetailUpdateManyWithWhereWithoutInvoiceInput = {
    where: ShippingDetailScalarWhereInput
    data: XOR<ShippingDetailUpdateManyMutationInput, ShippingDetailUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type ShippingDetailScalarWhereInput = {
    AND?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
    OR?: ShippingDetailScalarWhereInput[]
    NOT?: ShippingDetailScalarWhereInput | ShippingDetailScalarWhereInput[]
    id?: IntFilter<"ShippingDetail"> | number
    invoiceId?: StringFilter<"ShippingDetail"> | string
    address?: StringFilter<"ShippingDetail"> | string
    shippingDate?: DateTimeFilter<"ShippingDetail"> | Date | string
    estimatedArrival?: DateTimeFilter<"ShippingDetail"> | Date | string
    createdById?: StringFilter<"ShippingDetail"> | string
    updatedById?: StringFilter<"ShippingDetail"> | string
    deleted?: BoolFilter<"ShippingDetail"> | boolean
  }

  export type DiscountCreateWithoutInvoiceDetailInput = {
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    User_Discount_createdByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_createdByIdToUserInput
    User_Discount_updatedByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_updatedByIdToUserInput
  }

  export type DiscountUncheckedCreateWithoutInvoiceDetailInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type DiscountCreateOrConnectWithoutInvoiceDetailInput = {
    where: DiscountWhereUniqueInput
    create: XOR<DiscountCreateWithoutInvoiceDetailInput, DiscountUncheckedCreateWithoutInvoiceDetailInput>
  }

  export type InvoiceCreateWithoutInvoiceDetailInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutInvoiceDetailInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutInvoiceDetailInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutInvoiceDetailInput, InvoiceUncheckedCreateWithoutInvoiceDetailInput>
  }

  export type ProductCreateWithoutInvoiceDetailInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutInvoiceDetailInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutInvoiceDetailInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutInvoiceDetailInput, ProductUncheckedCreateWithoutInvoiceDetailInput>
  }

  export type TaxRateCreateWithoutInvoiceDetailInput = {
    name: string
    rate: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    User_TaxRate_createdByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_createdByIdToUserInput
    User_TaxRate_updatedByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_updatedByIdToUserInput
    Tenant?: TenantCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateUncheckedCreateWithoutInvoiceDetailInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
    Tenant?: TenantUncheckedCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateCreateOrConnectWithoutInvoiceDetailInput = {
    where: TaxRateWhereUniqueInput
    create: XOR<TaxRateCreateWithoutInvoiceDetailInput, TaxRateUncheckedCreateWithoutInvoiceDetailInput>
  }

  export type DiscountUpsertWithoutInvoiceDetailInput = {
    update: XOR<DiscountUpdateWithoutInvoiceDetailInput, DiscountUncheckedUpdateWithoutInvoiceDetailInput>
    create: XOR<DiscountCreateWithoutInvoiceDetailInput, DiscountUncheckedCreateWithoutInvoiceDetailInput>
    where?: DiscountWhereInput
  }

  export type DiscountUpdateToOneWithWhereWithoutInvoiceDetailInput = {
    where?: DiscountWhereInput
    data: XOR<DiscountUpdateWithoutInvoiceDetailInput, DiscountUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type DiscountUpdateWithoutInvoiceDetailInput = {
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Discount_createdByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_createdByIdToUserNestedInput
    User_Discount_updatedByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_updatedByIdToUserNestedInput
  }

  export type DiscountUncheckedUpdateWithoutInvoiceDetailInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceUpsertWithoutInvoiceDetailInput = {
    update: XOR<InvoiceUpdateWithoutInvoiceDetailInput, InvoiceUncheckedUpdateWithoutInvoiceDetailInput>
    create: XOR<InvoiceCreateWithoutInvoiceDetailInput, InvoiceUncheckedCreateWithoutInvoiceDetailInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutInvoiceDetailInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutInvoiceDetailInput, InvoiceUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type InvoiceUpdateWithoutInvoiceDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutInvoiceDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type ProductUpsertWithoutInvoiceDetailInput = {
    update: XOR<ProductUpdateWithoutInvoiceDetailInput, ProductUncheckedUpdateWithoutInvoiceDetailInput>
    create: XOR<ProductCreateWithoutInvoiceDetailInput, ProductUncheckedCreateWithoutInvoiceDetailInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutInvoiceDetailInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutInvoiceDetailInput, ProductUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type ProductUpdateWithoutInvoiceDetailInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutInvoiceDetailInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type TaxRateUpsertWithoutInvoiceDetailInput = {
    update: XOR<TaxRateUpdateWithoutInvoiceDetailInput, TaxRateUncheckedUpdateWithoutInvoiceDetailInput>
    create: XOR<TaxRateCreateWithoutInvoiceDetailInput, TaxRateUncheckedCreateWithoutInvoiceDetailInput>
    where?: TaxRateWhereInput
  }

  export type TaxRateUpdateToOneWithWhereWithoutInvoiceDetailInput = {
    where?: TaxRateWhereInput
    data: XOR<TaxRateUpdateWithoutInvoiceDetailInput, TaxRateUncheckedUpdateWithoutInvoiceDetailInput>
  }

  export type TaxRateUpdateWithoutInvoiceDetailInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_TaxRate_createdByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_createdByIdToUserNestedInput
    User_TaxRate_updatedByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_updatedByIdToUserNestedInput
    Tenant?: TenantUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateWithoutInvoiceDetailInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUncheckedUpdateManyWithoutTaxRateNestedInput
  }

  export type TenantCreateWithoutInvoiceSettingsInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutInvoiceSettingsInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutInvoiceSettingsInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutInvoiceSettingsInput, TenantUncheckedCreateWithoutInvoiceSettingsInput>
  }

  export type TenantUpsertWithoutInvoiceSettingsInput = {
    update: XOR<TenantUpdateWithoutInvoiceSettingsInput, TenantUncheckedUpdateWithoutInvoiceSettingsInput>
    create: XOR<TenantCreateWithoutInvoiceSettingsInput, TenantUncheckedCreateWithoutInvoiceSettingsInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutInvoiceSettingsInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutInvoiceSettingsInput, TenantUncheckedUpdateWithoutInvoiceSettingsInput>
  }

  export type TenantUpdateWithoutInvoiceSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutInvoiceSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type InvoiceCreateWithoutInvoiceVersionInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutInvoiceVersionInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutInvoiceVersionInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutInvoiceVersionInput, InvoiceUncheckedCreateWithoutInvoiceVersionInput>
  }

  export type InvoiceUpsertWithoutInvoiceVersionInput = {
    update: XOR<InvoiceUpdateWithoutInvoiceVersionInput, InvoiceUncheckedUpdateWithoutInvoiceVersionInput>
    create: XOR<InvoiceCreateWithoutInvoiceVersionInput, InvoiceUncheckedCreateWithoutInvoiceVersionInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutInvoiceVersionInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutInvoiceVersionInput, InvoiceUncheckedUpdateWithoutInvoiceVersionInput>
  }

  export type InvoiceUpdateWithoutInvoiceVersionInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutInvoiceVersionInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceCreateWithoutOrderInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutOrderInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutOrderInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
  }

  export type InvoiceCreateManyOrderInputEnvelope = {
    data: InvoiceCreateManyOrderInput | InvoiceCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutOrderInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    User_Customer_createdByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutCustomerInput
    User_Customer_updatedByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput
    Invoice?: InvoiceCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutOrderInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    tenantId: string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutOrderInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
  }

  export type TenantCreateWithoutOrderInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutOrderInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutOrderInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutOrderInput, TenantUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Product: ProductCreateNestedOneWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: number
    productId: number
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceUpsertWithWhereUniqueWithoutOrderInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutOrderInput, InvoiceUncheckedUpdateWithoutOrderInput>
    create: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutOrderInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutOrderInput, InvoiceUncheckedUpdateWithoutOrderInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutOrderInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutOrderInput>
  }

  export type CustomerUpsertWithoutOrderInput = {
    update: XOR<CustomerUpdateWithoutOrderInput, CustomerUncheckedUpdateWithoutOrderInput>
    create: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutOrderInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutOrderInput, CustomerUncheckedUpdateWithoutOrderInput>
  }

  export type CustomerUpdateWithoutOrderInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Customer_createdByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutCustomerNestedInput
    User_Customer_updatedByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput
    Invoice?: InvoiceUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type TenantUpsertWithoutOrderInput = {
    update: XOR<TenantUpdateWithoutOrderInput, TenantUncheckedUpdateWithoutOrderInput>
    create: XOR<TenantCreateWithoutOrderInput, TenantUncheckedCreateWithoutOrderInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutOrderInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutOrderInput, TenantUncheckedUpdateWithoutOrderInput>
  }

  export type TenantUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: IntFilter<"OrderItem"> | number
    orderId?: StringFilter<"OrderItem"> | string
    productId?: IntFilter<"OrderItem"> | number
    sku?: StringFilter<"OrderItem"> | string
    name?: StringFilter<"OrderItem"> | string
    description?: StringNullableFilter<"OrderItem"> | string | null
    variant?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"OrderItem"> | string | null
    specs?: JsonNullableFilter<"OrderItem">
  }

  export type OrderCreateWithoutOrderItemInput = {
    id: string
    orderNumber: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceCreateNestedManyWithoutOrderInput
    Customer?: CustomerCreateNestedOneWithoutOrderInput
    Tenant: TenantCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderItemInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderItemInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
  }

  export type ProductCreateWithoutOrderItemInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderItemInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderItemInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderUpsertWithoutOrderItemInput = {
    update: XOR<OrderUpdateWithoutOrderItemInput, OrderUncheckedUpdateWithoutOrderItemInput>
    create: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderItemInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderItemInput, OrderUncheckedUpdateWithoutOrderItemInput>
  }

  export type OrderUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateManyWithoutOrderNestedInput
    Customer?: CustomerUpdateOneWithoutOrderNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutOrderItemInput = {
    update: XOR<ProductUpdateWithoutOrderItemInput, ProductUncheckedUpdateWithoutOrderItemInput>
    create: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderItemInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderItemInput, ProductUncheckedUpdateWithoutOrderItemInput>
  }

  export type ProductUpdateWithoutOrderItemInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserCreateWithoutPayment_Payment_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPayment_Payment_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPayment_Payment_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_createdByIdToUserInput>
  }

  export type InvoiceCreateWithoutPaymentInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutPaymentInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutPaymentInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutPaymentInput, InvoiceUncheckedCreateWithoutPaymentInput>
  }

  export type UserCreateWithoutPayment_Payment_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPayment_Payment_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPayment_Payment_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_updatedByIdToUserInput>
  }

  export type UserUpsertWithoutPayment_Payment_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedUpdateWithoutPayment_Payment_createdByIdToUserInput>
    create: XOR<UserCreateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPayment_Payment_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPayment_Payment_createdByIdToUserInput, UserUncheckedUpdateWithoutPayment_Payment_createdByIdToUserInput>
  }

  export type UserUpdateWithoutPayment_Payment_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPayment_Payment_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceUpsertWithoutPaymentInput = {
    update: XOR<InvoiceUpdateWithoutPaymentInput, InvoiceUncheckedUpdateWithoutPaymentInput>
    create: XOR<InvoiceCreateWithoutPaymentInput, InvoiceUncheckedCreateWithoutPaymentInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutPaymentInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutPaymentInput, InvoiceUncheckedUpdateWithoutPaymentInput>
  }

  export type InvoiceUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type UserUpsertWithoutPayment_Payment_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedUpdateWithoutPayment_Payment_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedCreateWithoutPayment_Payment_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPayment_Payment_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPayment_Payment_updatedByIdToUserInput, UserUncheckedUpdateWithoutPayment_Payment_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutPayment_Payment_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPayment_Payment_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceDetailCreateWithoutProductInput = {
    quantity: number
    lineTotal: Decimal | DecimalJsLike | number | string
    Discount?: DiscountCreateNestedOneWithoutInvoiceDetailInput
    Invoice: InvoiceCreateNestedOneWithoutInvoiceDetailInput
    TaxRate?: TaxRateCreateNestedOneWithoutInvoiceDetailInput
  }

  export type InvoiceDetailUncheckedCreateWithoutProductInput = {
    id?: number
    invoiceId: string
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailCreateOrConnectWithoutProductInput = {
    where: InvoiceDetailWhereUniqueInput
    create: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput>
  }

  export type InvoiceDetailCreateManyProductInputEnvelope = {
    data: InvoiceDetailCreateManyProductInput | InvoiceDetailCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Order: OrderCreateNestedOneWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id?: number
    orderId: string
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutProduct_Product_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProduct_Product_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProduct_Product_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_createdByIdToUserInput>
  }

  export type TenantCreateWithoutProductInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutProductInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutProductInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutProductInput, TenantUncheckedCreateWithoutProductInput>
  }

  export type UserCreateWithoutProduct_Product_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProduct_Product_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProduct_Product_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_updatedByIdToUserInput>
  }

  export type ProductIdentifierCreateWithoutProductInput = {
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
  }

  export type ProductIdentifierUncheckedCreateWithoutProductInput = {
    id?: number
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
  }

  export type ProductIdentifierCreateOrConnectWithoutProductInput = {
    where: ProductIdentifierWhereUniqueInput
    create: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput>
  }

  export type ProductIdentifierCreateManyProductInputEnvelope = {
    data: ProductIdentifierCreateManyProductInput | ProductIdentifierCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductVariantCreateWithoutProductInput = {
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type ProductVariantUncheckedCreateWithoutProductInput = {
    id?: number
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type ProductVariantCreateOrConnectWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantCreateManyProductInputEnvelope = {
    data: ProductVariantCreateManyProductInput | ProductVariantCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceDetailUpsertWithWhereUniqueWithoutProductInput = {
    where: InvoiceDetailWhereUniqueInput
    update: XOR<InvoiceDetailUpdateWithoutProductInput, InvoiceDetailUncheckedUpdateWithoutProductInput>
    create: XOR<InvoiceDetailCreateWithoutProductInput, InvoiceDetailUncheckedCreateWithoutProductInput>
  }

  export type InvoiceDetailUpdateWithWhereUniqueWithoutProductInput = {
    where: InvoiceDetailWhereUniqueInput
    data: XOR<InvoiceDetailUpdateWithoutProductInput, InvoiceDetailUncheckedUpdateWithoutProductInput>
  }

  export type InvoiceDetailUpdateManyWithWhereWithoutProductInput = {
    where: InvoiceDetailScalarWhereInput
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type UserUpsertWithoutProduct_Product_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedUpdateWithoutProduct_Product_createdByIdToUserInput>
    create: XOR<UserCreateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProduct_Product_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProduct_Product_createdByIdToUserInput, UserUncheckedUpdateWithoutProduct_Product_createdByIdToUserInput>
  }

  export type UserUpdateWithoutProduct_Product_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProduct_Product_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TenantUpsertWithoutProductInput = {
    update: XOR<TenantUpdateWithoutProductInput, TenantUncheckedUpdateWithoutProductInput>
    create: XOR<TenantCreateWithoutProductInput, TenantUncheckedCreateWithoutProductInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutProductInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutProductInput, TenantUncheckedUpdateWithoutProductInput>
  }

  export type TenantUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutProduct_Product_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedUpdateWithoutProduct_Product_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedCreateWithoutProduct_Product_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProduct_Product_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProduct_Product_updatedByIdToUserInput, UserUncheckedUpdateWithoutProduct_Product_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutProduct_Product_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProduct_Product_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProductIdentifierUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductIdentifierWhereUniqueInput
    update: XOR<ProductIdentifierUpdateWithoutProductInput, ProductIdentifierUncheckedUpdateWithoutProductInput>
    create: XOR<ProductIdentifierCreateWithoutProductInput, ProductIdentifierUncheckedCreateWithoutProductInput>
  }

  export type ProductIdentifierUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductIdentifierWhereUniqueInput
    data: XOR<ProductIdentifierUpdateWithoutProductInput, ProductIdentifierUncheckedUpdateWithoutProductInput>
  }

  export type ProductIdentifierUpdateManyWithWhereWithoutProductInput = {
    where: ProductIdentifierScalarWhereInput
    data: XOR<ProductIdentifierUpdateManyMutationInput, ProductIdentifierUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductIdentifierScalarWhereInput = {
    AND?: ProductIdentifierScalarWhereInput | ProductIdentifierScalarWhereInput[]
    OR?: ProductIdentifierScalarWhereInput[]
    NOT?: ProductIdentifierScalarWhereInput | ProductIdentifierScalarWhereInput[]
    id?: IntFilter<"ProductIdentifier"> | number
    productId?: IntFilter<"ProductIdentifier"> | number
    type?: EnumProductIdentifierTypeFilter<"ProductIdentifier"> | $Enums.ProductIdentifierType
    value?: StringFilter<"ProductIdentifier"> | string
    imageUrl?: StringNullableFilter<"ProductIdentifier"> | string | null
  }

  export type ProductVariantUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    update: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    data: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
  }

  export type ProductVariantUpdateManyWithWhereWithoutProductInput = {
    where: ProductVariantScalarWhereInput
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductVariantScalarWhereInput = {
    AND?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    OR?: ProductVariantScalarWhereInput[]
    NOT?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    id?: IntFilter<"ProductVariant"> | number
    productId?: IntFilter<"ProductVariant"> | number
    name?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    barcode?: StringNullableFilter<"ProductVariant"> | string | null
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"ProductVariant"> | string | null
    specs?: JsonNullableFilter<"ProductVariant">
    deleted?: BoolFilter<"ProductVariant"> | boolean
  }

  export type ProductCreateWithoutProductIdentifierInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductIdentifierInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductIdentifierInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductIdentifierInput, ProductUncheckedCreateWithoutProductIdentifierInput>
  }

  export type ProductUpsertWithoutProductIdentifierInput = {
    update: XOR<ProductUpdateWithoutProductIdentifierInput, ProductUncheckedUpdateWithoutProductIdentifierInput>
    create: XOR<ProductCreateWithoutProductIdentifierInput, ProductUncheckedCreateWithoutProductIdentifierInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductIdentifierInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductIdentifierInput, ProductUncheckedUpdateWithoutProductIdentifierInput>
  }

  export type ProductUpdateWithoutProductIdentifierInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductIdentifierInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutProductVariantInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductVariantInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductVariantInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductVariantInput, ProductUncheckedCreateWithoutProductVariantInput>
  }

  export type ProductUpsertWithoutProductVariantInput = {
    update: XOR<ProductUpdateWithoutProductVariantInput, ProductUncheckedUpdateWithoutProductVariantInput>
    create: XOR<ProductCreateWithoutProductVariantInput, ProductUncheckedCreateWithoutProductVariantInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductVariantInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductVariantInput, ProductUncheckedUpdateWithoutProductVariantInput>
  }

  export type ProductUpdateWithoutProductVariantInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductVariantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
  }

  export type InvoiceCreateWithoutShippingDetailInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutShippingDetailInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutShippingDetailInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutShippingDetailInput, InvoiceUncheckedCreateWithoutShippingDetailInput>
  }

  export type UserCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
  }

  export type UserUpsertWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
    create: XOR<UserCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput>
  }

  export type UserUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceUpsertWithoutShippingDetailInput = {
    update: XOR<InvoiceUpdateWithoutShippingDetailInput, InvoiceUncheckedUpdateWithoutShippingDetailInput>
    create: XOR<InvoiceCreateWithoutShippingDetailInput, InvoiceUncheckedCreateWithoutShippingDetailInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutShippingDetailInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutShippingDetailInput, InvoiceUncheckedUpdateWithoutShippingDetailInput>
  }

  export type InvoiceUpdateWithoutShippingDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutShippingDetailInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type UserUpsertWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedCreateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput, UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceDetailCreateWithoutTaxRateInput = {
    quantity: number
    lineTotal: Decimal | DecimalJsLike | number | string
    Discount?: DiscountCreateNestedOneWithoutInvoiceDetailInput
    Invoice: InvoiceCreateNestedOneWithoutInvoiceDetailInput
    Product: ProductCreateNestedOneWithoutInvoiceDetailInput
  }

  export type InvoiceDetailUncheckedCreateWithoutTaxRateInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailCreateOrConnectWithoutTaxRateInput = {
    where: InvoiceDetailWhereUniqueInput
    create: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput>
  }

  export type InvoiceDetailCreateManyTaxRateInputEnvelope = {
    data: InvoiceDetailCreateManyTaxRateInput | InvoiceDetailCreateManyTaxRateInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_createdByIdToUserInput>
  }

  export type UserCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
  }

  export type TenantCreateWithoutTaxRateInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTaxRateInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
    TenantMembership?: TenantMembershipUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTaxRateInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput>
  }

  export type TenantCreateManyTaxRateInputEnvelope = {
    data: TenantCreateManyTaxRateInput | TenantCreateManyTaxRateInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceDetailUpsertWithWhereUniqueWithoutTaxRateInput = {
    where: InvoiceDetailWhereUniqueInput
    update: XOR<InvoiceDetailUpdateWithoutTaxRateInput, InvoiceDetailUncheckedUpdateWithoutTaxRateInput>
    create: XOR<InvoiceDetailCreateWithoutTaxRateInput, InvoiceDetailUncheckedCreateWithoutTaxRateInput>
  }

  export type InvoiceDetailUpdateWithWhereUniqueWithoutTaxRateInput = {
    where: InvoiceDetailWhereUniqueInput
    data: XOR<InvoiceDetailUpdateWithoutTaxRateInput, InvoiceDetailUncheckedUpdateWithoutTaxRateInput>
  }

  export type InvoiceDetailUpdateManyWithWhereWithoutTaxRateInput = {
    where: InvoiceDetailScalarWhereInput
    data: XOR<InvoiceDetailUpdateManyMutationInput, InvoiceDetailUncheckedUpdateManyWithoutTaxRateInput>
  }

  export type UserUpsertWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput>
    create: XOR<UserCreateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput, UserUncheckedUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput>
  }

  export type UserUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaxRate_TaxRate_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedCreateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput, UserUncheckedUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaxRate_TaxRate_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TenantUpsertWithWhereUniqueWithoutTaxRateInput = {
    where: TenantWhereUniqueInput
    update: XOR<TenantUpdateWithoutTaxRateInput, TenantUncheckedUpdateWithoutTaxRateInput>
    create: XOR<TenantCreateWithoutTaxRateInput, TenantUncheckedCreateWithoutTaxRateInput>
  }

  export type TenantUpdateWithWhereUniqueWithoutTaxRateInput = {
    where: TenantWhereUniqueInput
    data: XOR<TenantUpdateWithoutTaxRateInput, TenantUncheckedUpdateWithoutTaxRateInput>
  }

  export type TenantUpdateManyWithWhereWithoutTaxRateInput = {
    where: TenantScalarWhereInput
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyWithoutTaxRateInput>
  }

  export type TenantScalarWhereInput = {
    AND?: TenantScalarWhereInput | TenantScalarWhereInput[]
    OR?: TenantScalarWhereInput[]
    NOT?: TenantScalarWhereInput | TenantScalarWhereInput[]
    id?: StringFilter<"Tenant"> | string
    name?: StringFilter<"Tenant"> | string
    companyName?: StringNullableFilter<"Tenant"> | string | null
    addressLine1?: StringNullableFilter<"Tenant"> | string | null
    addressLine2?: StringNullableFilter<"Tenant"> | string | null
    city?: StringNullableFilter<"Tenant"> | string | null
    state?: StringNullableFilter<"Tenant"> | string | null
    zip?: StringNullableFilter<"Tenant"> | string | null
    zipPlus4?: StringNullableFilter<"Tenant"> | string | null
    email?: StringNullableFilter<"Tenant"> | string | null
    website?: StringNullableFilter<"Tenant"> | string | null
    isUspsValidated?: BoolFilter<"Tenant"> | boolean
    createdAt?: DateTimeFilter<"Tenant"> | Date | string
    invoiceCounter?: IntFilter<"Tenant"> | number
    invoiceFormat?: StringNullableFilter<"Tenant"> | string | null
    invoicePrefix?: StringNullableFilter<"Tenant"> | string | null
    isInvoiceSetup?: BoolFilter<"Tenant"> | boolean
    autoResetYearly?: BoolFilter<"Tenant"> | boolean
    lastResetYear?: IntNullableFilter<"Tenant"> | number | null
    defaultTaxRateId?: IntNullableFilter<"Tenant"> | number | null
    deleted?: BoolFilter<"Tenant"> | boolean
    plan?: EnumPlanTierFilter<"Tenant"> | $Enums.PlanTier
  }

  export type BusinessCreateWithoutTenantInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser: UserCreateNestedOneWithoutBusiness_Business_createdByIdToUserInput
    User_Business_updatedByIdToUser: UserCreateNestedOneWithoutBusiness_Business_updatedByIdToUserInput
  }

  export type BusinessUncheckedCreateWithoutTenantInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessCreateOrConnectWithoutTenantInput = {
    where: BusinessWhereUniqueInput
    create: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput>
  }

  export type BusinessCreateManyTenantInputEnvelope = {
    data: BusinessCreateManyTenantInput | BusinessCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutTenantInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    User_Customer_createdByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput
    User_Customer_updatedByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput
    Invoice?: InvoiceCreateNestedManyWithoutCustomerInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutTenantInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutCustomerInput
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutTenantInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput>
  }

  export type CustomerCreateManyTenantInputEnvelope = {
    data: CustomerCreateManyTenantInput | CustomerCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutTenantInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutTenantInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutTenantInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput>
  }

  export type InvoiceCreateManyTenantInputEnvelope = {
    data: InvoiceCreateManyTenantInput | InvoiceCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceSettingsCreateWithoutTenantInput = {
    id: string
    layout?: string
    primaryColor?: string
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
  }

  export type InvoiceSettingsUncheckedCreateWithoutTenantInput = {
    id: string
    layout?: string
    primaryColor?: string
    includeCustomerInfo?: boolean
    includePaymentTerms?: boolean
    includeDueDate?: boolean
    includeNotes?: boolean
    deleted?: boolean
  }

  export type InvoiceSettingsCreateOrConnectWithoutTenantInput = {
    where: InvoiceSettingsWhereUniqueInput
    create: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
  }

  export type OrderCreateWithoutTenantInput = {
    id: string
    orderNumber: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceCreateNestedManyWithoutOrderInput
    Customer?: CustomerCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutTenantInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutOrderInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutTenantInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput>
  }

  export type OrderCreateManyTenantInputEnvelope = {
    data: OrderCreateManyTenantInput | OrderCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutTenantInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTenantInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTenantInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput>
  }

  export type ProductCreateManyTenantInputEnvelope = {
    data: ProductCreateManyTenantInput | ProductCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type TaxRateCreateWithoutTenantInput = {
    name: string
    rate: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutTaxRateInput
    User_TaxRate_createdByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_createdByIdToUserInput
    User_TaxRate_updatedByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_updatedByIdToUserInput
  }

  export type TaxRateUncheckedCreateWithoutTenantInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    updatedById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateCreateOrConnectWithoutTenantInput = {
    where: TaxRateWhereUniqueInput
    create: XOR<TaxRateCreateWithoutTenantInput, TaxRateUncheckedCreateWithoutTenantInput>
  }

  export type TenantMembershipCreateWithoutTenantInput = {
    id: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
    User: UserCreateNestedOneWithoutTenantMembershipInput
  }

  export type TenantMembershipUncheckedCreateWithoutTenantInput = {
    id: string
    userId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type TenantMembershipCreateOrConnectWithoutTenantInput = {
    where: TenantMembershipWhereUniqueInput
    create: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput>
  }

  export type TenantMembershipCreateManyTenantInputEnvelope = {
    data: TenantMembershipCreateManyTenantInput | TenantMembershipCreateManyTenantInput[]
    skipDuplicates?: boolean
  }

  export type BusinessUpsertWithWhereUniqueWithoutTenantInput = {
    where: BusinessWhereUniqueInput
    update: XOR<BusinessUpdateWithoutTenantInput, BusinessUncheckedUpdateWithoutTenantInput>
    create: XOR<BusinessCreateWithoutTenantInput, BusinessUncheckedCreateWithoutTenantInput>
  }

  export type BusinessUpdateWithWhereUniqueWithoutTenantInput = {
    where: BusinessWhereUniqueInput
    data: XOR<BusinessUpdateWithoutTenantInput, BusinessUncheckedUpdateWithoutTenantInput>
  }

  export type BusinessUpdateManyWithWhereWithoutTenantInput = {
    where: BusinessScalarWhereInput
    data: XOR<BusinessUpdateManyMutationInput, BusinessUncheckedUpdateManyWithoutTenantInput>
  }

  export type BusinessScalarWhereInput = {
    AND?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
    OR?: BusinessScalarWhereInput[]
    NOT?: BusinessScalarWhereInput | BusinessScalarWhereInput[]
    id?: StringFilter<"Business"> | string
    createdAt?: DateTimeFilter<"Business"> | Date | string
    updatedAt?: DateTimeFilter<"Business"> | Date | string
    tenantId?: StringFilter<"Business"> | string
    createdById?: StringFilter<"Business"> | string
    updatedById?: StringFilter<"Business"> | string
    businessType?: StringFilter<"Business"> | string
    businessCategory?: StringFilter<"Business"> | string
    businessSubcategory?: StringFilter<"Business"> | string
    legalBusinessName?: StringFilter<"Business"> | string
    doingBusinessAs?: StringNullableFilter<"Business"> | string | null
    ein?: StringFilter<"Business"> | string
    businessState?: StringFilter<"Business"> | string
    onlineStatus?: StringFilter<"Business"> | string
    onlineLink?: StringNullableFilter<"Business"> | string | null
    businessEmail?: StringNullableFilter<"Business"> | string | null
    addressLine1?: StringFilter<"Business"> | string
    addressLine2?: StringNullableFilter<"Business"> | string | null
    zip?: StringFilter<"Business"> | string
    city?: StringFilter<"Business"> | string
    isManualEntry?: BoolFilter<"Business"> | boolean
    deleted?: BoolFilter<"Business"> | boolean
  }

  export type CustomerUpsertWithWhereUniqueWithoutTenantInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutTenantInput, CustomerUncheckedUpdateWithoutTenantInput>
    create: XOR<CustomerCreateWithoutTenantInput, CustomerUncheckedCreateWithoutTenantInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutTenantInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutTenantInput, CustomerUncheckedUpdateWithoutTenantInput>
  }

  export type CustomerUpdateManyWithWhereWithoutTenantInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutTenantInput>
  }

  export type CustomerScalarWhereInput = {
    AND?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    OR?: CustomerScalarWhereInput[]
    NOT?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    id?: IntFilter<"Customer"> | number
    name?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phone?: StringFilter<"Customer"> | string
    address?: StringFilter<"Customer"> | string
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    createdById?: StringFilter<"Customer"> | string
    updatedById?: StringFilter<"Customer"> | string
    tenantId?: StringFilter<"Customer"> | string
    deleted?: BoolFilter<"Customer"> | boolean
  }

  export type InvoiceUpsertWithWhereUniqueWithoutTenantInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutTenantInput, InvoiceUncheckedUpdateWithoutTenantInput>
    create: XOR<InvoiceCreateWithoutTenantInput, InvoiceUncheckedCreateWithoutTenantInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutTenantInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutTenantInput, InvoiceUncheckedUpdateWithoutTenantInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutTenantInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutTenantInput>
  }

  export type InvoiceSettingsUpsertWithoutTenantInput = {
    update: XOR<InvoiceSettingsUpdateWithoutTenantInput, InvoiceSettingsUncheckedUpdateWithoutTenantInput>
    create: XOR<InvoiceSettingsCreateWithoutTenantInput, InvoiceSettingsUncheckedCreateWithoutTenantInput>
    where?: InvoiceSettingsWhereInput
  }

  export type InvoiceSettingsUpdateToOneWithWhereWithoutTenantInput = {
    where?: InvoiceSettingsWhereInput
    data: XOR<InvoiceSettingsUpdateWithoutTenantInput, InvoiceSettingsUncheckedUpdateWithoutTenantInput>
  }

  export type InvoiceSettingsUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceSettingsUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    layout?: StringFieldUpdateOperationsInput | string
    primaryColor?: StringFieldUpdateOperationsInput | string
    includeCustomerInfo?: BoolFieldUpdateOperationsInput | boolean
    includePaymentTerms?: BoolFieldUpdateOperationsInput | boolean
    includeDueDate?: BoolFieldUpdateOperationsInput | boolean
    includeNotes?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutTenantInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutTenantInput, OrderUncheckedUpdateWithoutTenantInput>
    create: XOR<OrderCreateWithoutTenantInput, OrderUncheckedCreateWithoutTenantInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutTenantInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutTenantInput, OrderUncheckedUpdateWithoutTenantInput>
  }

  export type OrderUpdateManyWithWhereWithoutTenantInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutTenantInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutTenantInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutTenantInput, ProductUncheckedUpdateWithoutTenantInput>
    create: XOR<ProductCreateWithoutTenantInput, ProductUncheckedCreateWithoutTenantInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutTenantInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutTenantInput, ProductUncheckedUpdateWithoutTenantInput>
  }

  export type ProductUpdateManyWithWhereWithoutTenantInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutTenantInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: IntFilter<"Product"> | number
    name?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    imageUrl?: StringNullableFilter<"Product"> | string | null
    variant?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    barcode?: StringNullableFilter<"Product"> | string | null
    qrCodeUrl?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdById?: StringFilter<"Product"> | string
    updatedById?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    tenantId?: StringFilter<"Product"> | string
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    category?: StringNullableFilter<"Product"> | string | null
    isActive?: BoolFilter<"Product"> | boolean
    metaDesc?: StringNullableFilter<"Product"> | string | null
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metadata?: JsonNullableFilter<"Product">
    primaryIdentifierType?: EnumProductIdentifierTypeNullableFilter<"Product"> | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: StringNullableFilter<"Product"> | string | null
    stockAlertAt?: IntNullableFilter<"Product"> | number | null
    stockQuantity?: IntFilter<"Product"> | number
    tags?: StringNullableListFilter<"Product">
    unit?: StringNullableFilter<"Product"> | string | null
    visibility?: StringFilter<"Product"> | string
    slug?: StringNullableFilter<"Product"> | string | null
    deleted?: BoolFilter<"Product"> | boolean
  }

  export type TaxRateUpsertWithoutTenantInput = {
    update: XOR<TaxRateUpdateWithoutTenantInput, TaxRateUncheckedUpdateWithoutTenantInput>
    create: XOR<TaxRateCreateWithoutTenantInput, TaxRateUncheckedCreateWithoutTenantInput>
    where?: TaxRateWhereInput
  }

  export type TaxRateUpdateToOneWithWhereWithoutTenantInput = {
    where?: TaxRateWhereInput
    data: XOR<TaxRateUpdateWithoutTenantInput, TaxRateUncheckedUpdateWithoutTenantInput>
  }

  export type TaxRateUpdateWithoutTenantInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutTaxRateNestedInput
    User_TaxRate_createdByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_createdByIdToUserNestedInput
    User_TaxRate_updatedByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_updatedByIdToUserNestedInput
  }

  export type TaxRateUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutTaxRateNestedInput
  }

  export type TenantMembershipUpsertWithWhereUniqueWithoutTenantInput = {
    where: TenantMembershipWhereUniqueInput
    update: XOR<TenantMembershipUpdateWithoutTenantInput, TenantMembershipUncheckedUpdateWithoutTenantInput>
    create: XOR<TenantMembershipCreateWithoutTenantInput, TenantMembershipUncheckedCreateWithoutTenantInput>
  }

  export type TenantMembershipUpdateWithWhereUniqueWithoutTenantInput = {
    where: TenantMembershipWhereUniqueInput
    data: XOR<TenantMembershipUpdateWithoutTenantInput, TenantMembershipUncheckedUpdateWithoutTenantInput>
  }

  export type TenantMembershipUpdateManyWithWhereWithoutTenantInput = {
    where: TenantMembershipScalarWhereInput
    data: XOR<TenantMembershipUpdateManyMutationInput, TenantMembershipUncheckedUpdateManyWithoutTenantInput>
  }

  export type TenantMembershipScalarWhereInput = {
    AND?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
    OR?: TenantMembershipScalarWhereInput[]
    NOT?: TenantMembershipScalarWhereInput | TenantMembershipScalarWhereInput[]
    id?: StringFilter<"TenantMembership"> | string
    tenantId?: StringFilter<"TenantMembership"> | string
    userId?: StringFilter<"TenantMembership"> | string
    role?: EnumTenantRoleFilter<"TenantMembership"> | $Enums.TenantRole
    permissions?: EnumPermissionNullableListFilter<"TenantMembership">
    deleted?: BoolFilter<"TenantMembership"> | boolean
  }

  export type TenantCreateWithoutTenantMembershipInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessCreateNestedManyWithoutTenantInput
    Customer?: CustomerCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsCreateNestedOneWithoutTenantInput
    Order?: OrderCreateNestedManyWithoutTenantInput
    Product?: ProductCreateNestedManyWithoutTenantInput
    TaxRate?: TaxRateCreateNestedOneWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTenantMembershipInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    defaultTaxRateId?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
    Business?: BusinessUncheckedCreateNestedManyWithoutTenantInput
    Customer?: CustomerUncheckedCreateNestedManyWithoutTenantInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutTenantInput
    InvoiceSettings?: InvoiceSettingsUncheckedCreateNestedOneWithoutTenantInput
    Order?: OrderUncheckedCreateNestedManyWithoutTenantInput
    Product?: ProductUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTenantMembershipInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTenantMembershipInput, TenantUncheckedCreateWithoutTenantMembershipInput>
  }

  export type UserCreateWithoutTenantMembershipInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
  }

  export type UserUncheckedCreateWithoutTenantMembershipInput = {
    id: string
    email: string
    clerkId: string
    name?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    deleted?: boolean
    AuditLog?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    Business_Business_createdByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_createdByIdToUserInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedCreateNestedManyWithoutUser_Business_updatedByIdToUserInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_createdByIdToUserInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedCreateNestedManyWithoutUser_Customer_updatedByIdToUserInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_createdByIdToUserInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedCreateNestedManyWithoutUser_Discount_updatedByIdToUserInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_createdByIdToUserInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_soldByUserIdToUserInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedCreateNestedManyWithoutUser_Invoice_updatedByIdToUserInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_createdByIdToUserInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedCreateNestedManyWithoutUser_Payment_updatedByIdToUserInput
    Product_Product_createdByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_createdByIdToUserInput
    Product_Product_updatedByIdToUser?: ProductUncheckedCreateNestedManyWithoutUser_Product_updatedByIdToUserInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_createdByIdToUserInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedCreateNestedManyWithoutUser_ShippingDetail_updatedByIdToUserInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_createdByIdToUserInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedCreateNestedManyWithoutUser_TaxRate_updatedByIdToUserInput
  }

  export type UserCreateOrConnectWithoutTenantMembershipInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenantMembershipInput, UserUncheckedCreateWithoutTenantMembershipInput>
  }

  export type TenantUpsertWithoutTenantMembershipInput = {
    update: XOR<TenantUpdateWithoutTenantMembershipInput, TenantUncheckedUpdateWithoutTenantMembershipInput>
    create: XOR<TenantCreateWithoutTenantMembershipInput, TenantUncheckedCreateWithoutTenantMembershipInput>
    where?: TenantWhereInput
  }

  export type TenantUpdateToOneWithWhereWithoutTenantMembershipInput = {
    where?: TenantWhereInput
    data: XOR<TenantUpdateWithoutTenantMembershipInput, TenantUncheckedUpdateWithoutTenantMembershipInput>
  }

  export type TenantUpdateWithoutTenantMembershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TaxRate?: TaxRateUpdateOneWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTenantMembershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    defaultTaxRateId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutTenantMembershipInput = {
    update: XOR<UserUpdateWithoutTenantMembershipInput, UserUncheckedUpdateWithoutTenantMembershipInput>
    create: XOR<UserCreateWithoutTenantMembershipInput, UserUncheckedCreateWithoutTenantMembershipInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTenantMembershipInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTenantMembershipInput, UserUncheckedUpdateWithoutTenantMembershipInput>
  }

  export type UserUpdateWithoutTenantMembershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTenantMembershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    clerkId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    AuditLog?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    Business_Business_createdByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserNestedInput
    Business_Business_updatedByIdToUser?: BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserNestedInput
    Customer_Customer_createdByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserNestedInput
    Customer_Customer_updatedByIdToUser?: CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserNestedInput
    Discount_Discount_createdByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserNestedInput
    Discount_Discount_updatedByIdToUser?: DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserNestedInput
    Invoice_Invoice_createdByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserNestedInput
    Invoice_Invoice_soldByUserIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserNestedInput
    Invoice_Invoice_updatedByIdToUser?: InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserNestedInput
    Payment_Payment_createdByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserNestedInput
    Payment_Payment_updatedByIdToUser?: PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserNestedInput
    Product_Product_createdByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserNestedInput
    Product_Product_updatedByIdToUser?: ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserNestedInput
    ShippingDetail_ShippingDetail_createdByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserNestedInput
    ShippingDetail_ShippingDetail_updatedByIdToUser?: ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserNestedInput
    TaxRate_TaxRate_createdByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserNestedInput
    TaxRate_TaxRate_updatedByIdToUser?: TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserNestedInput
  }

  export type AuditLogCreateWithoutUserInput = {
    id: string
    action: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type AuditLogUncheckedCreateWithoutUserInput = {
    id: string
    action: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type AuditLogCreateOrConnectWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    create: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput>
  }

  export type AuditLogCreateManyUserInputEnvelope = {
    data: AuditLogCreateManyUserInput | AuditLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BusinessCreateWithoutUser_Business_createdByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
    Tenant: TenantCreateNestedOneWithoutBusinessInput
    User_Business_updatedByIdToUser: UserCreateNestedOneWithoutBusiness_Business_updatedByIdToUserInput
  }

  export type BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessCreateOrConnectWithoutUser_Business_createdByIdToUserInput = {
    where: BusinessWhereUniqueInput
    create: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput>
  }

  export type BusinessCreateManyUser_Business_createdByIdToUserInputEnvelope = {
    data: BusinessCreateManyUser_Business_createdByIdToUserInput | BusinessCreateManyUser_Business_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type BusinessCreateWithoutUser_Business_updatedByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
    User_Business_createdByIdToUser: UserCreateNestedOneWithoutBusiness_Business_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutBusinessInput
  }

  export type BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    createdById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessCreateOrConnectWithoutUser_Business_updatedByIdToUserInput = {
    where: BusinessWhereUniqueInput
    create: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput>
  }

  export type BusinessCreateManyUser_Business_updatedByIdToUserInputEnvelope = {
    data: BusinessCreateManyUser_Business_updatedByIdToUserInput | BusinessCreateManyUser_Business_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutUser_Customer_createdByIdToUserInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    Tenant: TenantCreateNestedOneWithoutCustomerInput
    User_Customer_updatedByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_updatedByIdToUserInput
    Invoice?: InvoiceCreateNestedManyWithoutCustomerInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    updatedById: string
    tenantId: string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutCustomerInput
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutUser_Customer_createdByIdToUserInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput>
  }

  export type CustomerCreateManyUser_Customer_createdByIdToUserInputEnvelope = {
    data: CustomerCreateManyUser_Customer_createdByIdToUserInput | CustomerCreateManyUser_Customer_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutUser_Customer_updatedByIdToUserInput = {
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    User_Customer_createdByIdToUser: UserCreateNestedOneWithoutCustomer_Customer_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutCustomerInput
    Invoice?: InvoiceCreateNestedManyWithoutCustomerInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    tenantId: string
    deleted?: boolean
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutCustomerInput
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutUser_Customer_updatedByIdToUserInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput>
  }

  export type CustomerCreateManyUser_Customer_updatedByIdToUserInputEnvelope = {
    data: CustomerCreateManyUser_Customer_updatedByIdToUserInput | CustomerCreateManyUser_Customer_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type DiscountCreateWithoutUser_Discount_createdByIdToUserInput = {
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    User_Discount_updatedByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutDiscountInput
  }

  export type DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    updatedById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountCreateOrConnectWithoutUser_Discount_createdByIdToUserInput = {
    where: DiscountWhereUniqueInput
    create: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput>
  }

  export type DiscountCreateManyUser_Discount_createdByIdToUserInputEnvelope = {
    data: DiscountCreateManyUser_Discount_createdByIdToUserInput | DiscountCreateManyUser_Discount_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type DiscountCreateWithoutUser_Discount_updatedByIdToUserInput = {
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    User_Discount_createdByIdToUser: UserCreateNestedOneWithoutDiscount_Discount_createdByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutDiscountInput
  }

  export type DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    createdById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutDiscountInput
  }

  export type DiscountCreateOrConnectWithoutUser_Discount_updatedByIdToUserInput = {
    where: DiscountWhereUniqueInput
    create: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput>
  }

  export type DiscountCreateManyUser_Discount_updatedByIdToUserInputEnvelope = {
    data: DiscountCreateManyUser_Discount_updatedByIdToUserInput | DiscountCreateManyUser_Discount_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutUser_Invoice_createdByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput>
  }

  export type InvoiceCreateManyUser_Invoice_createdByIdToUserInputEnvelope = {
    data: InvoiceCreateManyUser_Invoice_createdByIdToUserInput | InvoiceCreateManyUser_Invoice_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    User_Invoice_updatedByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_updatedByIdToUserInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutUser_Invoice_soldByUserIdToUserInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput>
  }

  export type InvoiceCreateManyUser_Invoice_soldByUserIdToUserInputEnvelope = {
    data: InvoiceCreateManyUser_Invoice_soldByUserIdToUserInput | InvoiceCreateManyUser_Invoice_soldByUserIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    User_Invoice_createdByIdToUser: UserCreateNestedOneWithoutInvoice_Invoice_createdByIdToUserInput
    Customer: CustomerCreateNestedOneWithoutInvoiceInput
    Order?: OrderCreateNestedOneWithoutInvoiceInput
    Invoice?: InvoiceCreateNestedOneWithoutOther_InvoiceInput
    other_Invoice?: InvoiceCreateNestedManyWithoutInvoiceInput
    User_Invoice_soldByUserIdToUser?: UserCreateNestedOneWithoutInvoice_Invoice_soldByUserIdToUserInput
    Tenant: TenantCreateNestedOneWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
    other_Invoice?: InvoiceUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutInvoiceInput
    InvoiceVersion?: InvoiceVersionUncheckedCreateNestedManyWithoutInvoiceInput
    Payment?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    ShippingDetail?: ShippingDetailUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutUser_Invoice_updatedByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput>
  }

  export type InvoiceCreateManyUser_Invoice_updatedByIdToUserInputEnvelope = {
    data: InvoiceCreateManyUser_Invoice_updatedByIdToUserInput | InvoiceCreateManyUser_Invoice_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUser_Payment_createdByIdToUserInput = {
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    deleted?: boolean
    Invoice: InvoiceCreateNestedOneWithoutPaymentInput
    User_Payment_updatedByIdToUser: UserCreateNestedOneWithoutPayment_Payment_updatedByIdToUserInput
  }

  export type PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    updatedById: string
    deleted?: boolean
  }

  export type PaymentCreateOrConnectWithoutUser_Payment_createdByIdToUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput>
  }

  export type PaymentCreateManyUser_Payment_createdByIdToUserInputEnvelope = {
    data: PaymentCreateManyUser_Payment_createdByIdToUserInput | PaymentCreateManyUser_Payment_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUser_Payment_updatedByIdToUserInput = {
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    deleted?: boolean
    User_Payment_createdByIdToUser: UserCreateNestedOneWithoutPayment_Payment_createdByIdToUserInput
    Invoice: InvoiceCreateNestedOneWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    deleted?: boolean
  }

  export type PaymentCreateOrConnectWithoutUser_Payment_updatedByIdToUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput>
  }

  export type PaymentCreateManyUser_Payment_updatedByIdToUserInputEnvelope = {
    data: PaymentCreateManyUser_Payment_updatedByIdToUserInput | PaymentCreateManyUser_Payment_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUser_Product_createdByIdToUserInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    User_Product_updatedByIdToUser: UserCreateNestedOneWithoutProduct_Product_updatedByIdToUserInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUser_Product_createdByIdToUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput>
  }

  export type ProductCreateManyUser_Product_createdByIdToUserInputEnvelope = {
    data: ProductCreateManyUser_Product_createdByIdToUserInput | ProductCreateManyUser_Product_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUser_Product_updatedByIdToUserInput = {
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    User_Product_createdByIdToUser: UserCreateNestedOneWithoutProduct_Product_createdByIdToUserInput
    Tenant: TenantCreateNestedOneWithoutProductInput
    ProductIdentifier?: ProductIdentifierCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductIdentifier?: ProductIdentifierUncheckedCreateNestedManyWithoutProductInput
    ProductVariant?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUser_Product_updatedByIdToUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput>
  }

  export type ProductCreateManyUser_Product_updatedByIdToUserInputEnvelope = {
    data: ProductCreateManyUser_Product_updatedByIdToUserInput | ProductCreateManyUser_Product_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput = {
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    deleted?: boolean
    Invoice: InvoiceCreateNestedOneWithoutShippingDetailInput
    User_ShippingDetail_updatedByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_updatedByIdToUserInput
  }

  export type ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_createdByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    create: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput>
  }

  export type ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInputEnvelope = {
    data: ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInput | ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    deleted?: boolean
    User_ShippingDetail_createdByIdToUser: UserCreateNestedOneWithoutShippingDetail_ShippingDetail_createdByIdToUserInput
    Invoice: InvoiceCreateNestedOneWithoutShippingDetailInput
  }

  export type ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    deleted?: boolean
  }

  export type ShippingDetailCreateOrConnectWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    create: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput>
  }

  export type ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInputEnvelope = {
    data: ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInput | ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput = {
    name: string
    rate: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutTaxRateInput
    User_TaxRate_updatedByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_updatedByIdToUserInput
    Tenant?: TenantCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    updatedById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutTaxRateInput
    Tenant?: TenantUncheckedCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateCreateOrConnectWithoutUser_TaxRate_createdByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    create: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput>
  }

  export type TaxRateCreateManyUser_TaxRate_createdByIdToUserInputEnvelope = {
    data: TaxRateCreateManyUser_TaxRate_createdByIdToUserInput | TaxRateCreateManyUser_TaxRate_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput = {
    name: string
    rate: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailCreateNestedManyWithoutTaxRateInput
    User_TaxRate_createdByIdToUser: UserCreateNestedOneWithoutTaxRate_TaxRate_createdByIdToUserInput
    Tenant?: TenantCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    deleted?: boolean
    InvoiceDetail?: InvoiceDetailUncheckedCreateNestedManyWithoutTaxRateInput
    Tenant?: TenantUncheckedCreateNestedManyWithoutTaxRateInput
  }

  export type TaxRateCreateOrConnectWithoutUser_TaxRate_updatedByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    create: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput>
  }

  export type TaxRateCreateManyUser_TaxRate_updatedByIdToUserInputEnvelope = {
    data: TaxRateCreateManyUser_TaxRate_updatedByIdToUserInput | TaxRateCreateManyUser_TaxRate_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type TenantMembershipCreateWithoutUserInput = {
    id: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
    Tenant: TenantCreateNestedOneWithoutTenantMembershipInput
  }

  export type TenantMembershipUncheckedCreateWithoutUserInput = {
    id: string
    tenantId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type TenantMembershipCreateOrConnectWithoutUserInput = {
    where: TenantMembershipWhereUniqueInput
    create: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput>
  }

  export type TenantMembershipCreateManyUserInputEnvelope = {
    data: TenantMembershipCreateManyUserInput | TenantMembershipCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AuditLogUpsertWithWhereUniqueWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    update: XOR<AuditLogUpdateWithoutUserInput, AuditLogUncheckedUpdateWithoutUserInput>
    create: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput>
  }

  export type AuditLogUpdateWithWhereUniqueWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    data: XOR<AuditLogUpdateWithoutUserInput, AuditLogUncheckedUpdateWithoutUserInput>
  }

  export type AuditLogUpdateManyWithWhereWithoutUserInput = {
    where: AuditLogScalarWhereInput
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyWithoutUserInput>
  }

  export type AuditLogScalarWhereInput = {
    AND?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    OR?: AuditLogScalarWhereInput[]
    NOT?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    userId?: StringFilter<"AuditLog"> | string
    after?: JsonNullableFilter<"AuditLog">
    before?: JsonNullableFilter<"AuditLog">
    entityId?: StringFilter<"AuditLog"> | string
    entityType?: StringFilter<"AuditLog"> | string
    performedAt?: DateTimeFilter<"AuditLog"> | Date | string
    payload?: JsonNullableFilter<"AuditLog">
    deleted?: BoolFilter<"AuditLog"> | boolean
  }

  export type BusinessUpsertWithWhereUniqueWithoutUser_Business_createdByIdToUserInput = {
    where: BusinessWhereUniqueInput
    update: XOR<BusinessUpdateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedUpdateWithoutUser_Business_createdByIdToUserInput>
    create: XOR<BusinessCreateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_createdByIdToUserInput>
  }

  export type BusinessUpdateWithWhereUniqueWithoutUser_Business_createdByIdToUserInput = {
    where: BusinessWhereUniqueInput
    data: XOR<BusinessUpdateWithoutUser_Business_createdByIdToUserInput, BusinessUncheckedUpdateWithoutUser_Business_createdByIdToUserInput>
  }

  export type BusinessUpdateManyWithWhereWithoutUser_Business_createdByIdToUserInput = {
    where: BusinessScalarWhereInput
    data: XOR<BusinessUpdateManyMutationInput, BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserInput>
  }

  export type BusinessUpsertWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput = {
    where: BusinessWhereUniqueInput
    update: XOR<BusinessUpdateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedUpdateWithoutUser_Business_updatedByIdToUserInput>
    create: XOR<BusinessCreateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedCreateWithoutUser_Business_updatedByIdToUserInput>
  }

  export type BusinessUpdateWithWhereUniqueWithoutUser_Business_updatedByIdToUserInput = {
    where: BusinessWhereUniqueInput
    data: XOR<BusinessUpdateWithoutUser_Business_updatedByIdToUserInput, BusinessUncheckedUpdateWithoutUser_Business_updatedByIdToUserInput>
  }

  export type BusinessUpdateManyWithWhereWithoutUser_Business_updatedByIdToUserInput = {
    where: BusinessScalarWhereInput
    data: XOR<BusinessUpdateManyMutationInput, BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserInput>
  }

  export type CustomerUpsertWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedUpdateWithoutUser_Customer_createdByIdToUserInput>
    create: XOR<CustomerCreateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_createdByIdToUserInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutUser_Customer_createdByIdToUserInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutUser_Customer_createdByIdToUserInput, CustomerUncheckedUpdateWithoutUser_Customer_createdByIdToUserInput>
  }

  export type CustomerUpdateManyWithWhereWithoutUser_Customer_createdByIdToUserInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserInput>
  }

  export type CustomerUpsertWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedUpdateWithoutUser_Customer_updatedByIdToUserInput>
    create: XOR<CustomerCreateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedCreateWithoutUser_Customer_updatedByIdToUserInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutUser_Customer_updatedByIdToUserInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutUser_Customer_updatedByIdToUserInput, CustomerUncheckedUpdateWithoutUser_Customer_updatedByIdToUserInput>
  }

  export type CustomerUpdateManyWithWhereWithoutUser_Customer_updatedByIdToUserInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserInput>
  }

  export type DiscountUpsertWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput = {
    where: DiscountWhereUniqueInput
    update: XOR<DiscountUpdateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedUpdateWithoutUser_Discount_createdByIdToUserInput>
    create: XOR<DiscountCreateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_createdByIdToUserInput>
  }

  export type DiscountUpdateWithWhereUniqueWithoutUser_Discount_createdByIdToUserInput = {
    where: DiscountWhereUniqueInput
    data: XOR<DiscountUpdateWithoutUser_Discount_createdByIdToUserInput, DiscountUncheckedUpdateWithoutUser_Discount_createdByIdToUserInput>
  }

  export type DiscountUpdateManyWithWhereWithoutUser_Discount_createdByIdToUserInput = {
    where: DiscountScalarWhereInput
    data: XOR<DiscountUpdateManyMutationInput, DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserInput>
  }

  export type DiscountScalarWhereInput = {
    AND?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
    OR?: DiscountScalarWhereInput[]
    NOT?: DiscountScalarWhereInput | DiscountScalarWhereInput[]
    id?: IntFilter<"Discount"> | number
    name?: StringFilter<"Discount"> | string
    discountValue?: DecimalFilter<"Discount"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"Discount"> | string
    updatedById?: StringFilter<"Discount"> | string
    deleted?: BoolFilter<"Discount"> | boolean
  }

  export type DiscountUpsertWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput = {
    where: DiscountWhereUniqueInput
    update: XOR<DiscountUpdateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedUpdateWithoutUser_Discount_updatedByIdToUserInput>
    create: XOR<DiscountCreateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedCreateWithoutUser_Discount_updatedByIdToUserInput>
  }

  export type DiscountUpdateWithWhereUniqueWithoutUser_Discount_updatedByIdToUserInput = {
    where: DiscountWhereUniqueInput
    data: XOR<DiscountUpdateWithoutUser_Discount_updatedByIdToUserInput, DiscountUncheckedUpdateWithoutUser_Discount_updatedByIdToUserInput>
  }

  export type DiscountUpdateManyWithWhereWithoutUser_Discount_updatedByIdToUserInput = {
    where: DiscountScalarWhereInput
    data: XOR<DiscountUpdateManyMutationInput, DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserInput>
  }

  export type InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_createdByIdToUserInput>
    create: XOR<InvoiceCreateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_createdByIdToUserInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_createdByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutUser_Invoice_createdByIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_createdByIdToUserInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutUser_Invoice_createdByIdToUserInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserInput>
  }

  export type InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_soldByUserIdToUserInput>
    create: XOR<InvoiceCreateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_soldByUserIdToUserInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_soldByUserIdToUserInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutUser_Invoice_soldByUserIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_soldByUserIdToUserInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutUser_Invoice_soldByUserIdToUserInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserInput>
  }

  export type InvoiceUpsertWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_updatedByIdToUserInput>
    create: XOR<InvoiceCreateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedCreateWithoutUser_Invoice_updatedByIdToUserInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutUser_Invoice_updatedByIdToUserInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutUser_Invoice_updatedByIdToUserInput, InvoiceUncheckedUpdateWithoutUser_Invoice_updatedByIdToUserInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutUser_Invoice_updatedByIdToUserInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedUpdateWithoutUser_Payment_createdByIdToUserInput>
    create: XOR<PaymentCreateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_createdByIdToUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUser_Payment_createdByIdToUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUser_Payment_createdByIdToUserInput, PaymentUncheckedUpdateWithoutUser_Payment_createdByIdToUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUser_Payment_createdByIdToUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedUpdateWithoutUser_Payment_updatedByIdToUserInput>
    create: XOR<PaymentCreateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedCreateWithoutUser_Payment_updatedByIdToUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUser_Payment_updatedByIdToUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUser_Payment_updatedByIdToUserInput, PaymentUncheckedUpdateWithoutUser_Payment_updatedByIdToUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUser_Payment_updatedByIdToUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutUser_Product_createdByIdToUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedUpdateWithoutUser_Product_createdByIdToUserInput>
    create: XOR<ProductCreateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_createdByIdToUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUser_Product_createdByIdToUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUser_Product_createdByIdToUserInput, ProductUncheckedUpdateWithoutUser_Product_createdByIdToUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutUser_Product_createdByIdToUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedUpdateWithoutUser_Product_updatedByIdToUserInput>
    create: XOR<ProductCreateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedCreateWithoutUser_Product_updatedByIdToUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUser_Product_updatedByIdToUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUser_Product_updatedByIdToUserInput, ProductUncheckedUpdateWithoutUser_Product_updatedByIdToUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutUser_Product_updatedByIdToUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserInput>
  }

  export type ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    update: XOR<ShippingDetailUpdateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_createdByIdToUserInput>
    create: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_createdByIdToUserInput>
  }

  export type ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_createdByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    data: XOR<ShippingDetailUpdateWithoutUser_ShippingDetail_createdByIdToUserInput, ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_createdByIdToUserInput>
  }

  export type ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_createdByIdToUserInput = {
    where: ShippingDetailScalarWhereInput
    data: XOR<ShippingDetailUpdateManyMutationInput, ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserInput>
  }

  export type ShippingDetailUpsertWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    update: XOR<ShippingDetailUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput>
    create: XOR<ShippingDetailCreateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedCreateWithoutUser_ShippingDetail_updatedByIdToUserInput>
  }

  export type ShippingDetailUpdateWithWhereUniqueWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    where: ShippingDetailWhereUniqueInput
    data: XOR<ShippingDetailUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput, ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput>
  }

  export type ShippingDetailUpdateManyWithWhereWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    where: ShippingDetailScalarWhereInput
    data: XOR<ShippingDetailUpdateManyMutationInput, ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserInput>
  }

  export type TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    update: XOR<TaxRateUpdateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedUpdateWithoutUser_TaxRate_createdByIdToUserInput>
    create: XOR<TaxRateCreateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_createdByIdToUserInput>
  }

  export type TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_createdByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    data: XOR<TaxRateUpdateWithoutUser_TaxRate_createdByIdToUserInput, TaxRateUncheckedUpdateWithoutUser_TaxRate_createdByIdToUserInput>
  }

  export type TaxRateUpdateManyWithWhereWithoutUser_TaxRate_createdByIdToUserInput = {
    where: TaxRateScalarWhereInput
    data: XOR<TaxRateUpdateManyMutationInput, TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserInput>
  }

  export type TaxRateScalarWhereInput = {
    AND?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
    OR?: TaxRateScalarWhereInput[]
    NOT?: TaxRateScalarWhereInput | TaxRateScalarWhereInput[]
    id?: IntFilter<"TaxRate"> | number
    name?: StringFilter<"TaxRate"> | string
    rate?: DecimalFilter<"TaxRate"> | Decimal | DecimalJsLike | number | string
    createdById?: StringFilter<"TaxRate"> | string
    updatedById?: StringFilter<"TaxRate"> | string
    deleted?: BoolFilter<"TaxRate"> | boolean
  }

  export type TaxRateUpsertWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    update: XOR<TaxRateUpdateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedUpdateWithoutUser_TaxRate_updatedByIdToUserInput>
    create: XOR<TaxRateCreateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedCreateWithoutUser_TaxRate_updatedByIdToUserInput>
  }

  export type TaxRateUpdateWithWhereUniqueWithoutUser_TaxRate_updatedByIdToUserInput = {
    where: TaxRateWhereUniqueInput
    data: XOR<TaxRateUpdateWithoutUser_TaxRate_updatedByIdToUserInput, TaxRateUncheckedUpdateWithoutUser_TaxRate_updatedByIdToUserInput>
  }

  export type TaxRateUpdateManyWithWhereWithoutUser_TaxRate_updatedByIdToUserInput = {
    where: TaxRateScalarWhereInput
    data: XOR<TaxRateUpdateManyMutationInput, TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserInput>
  }

  export type TenantMembershipUpsertWithWhereUniqueWithoutUserInput = {
    where: TenantMembershipWhereUniqueInput
    update: XOR<TenantMembershipUpdateWithoutUserInput, TenantMembershipUncheckedUpdateWithoutUserInput>
    create: XOR<TenantMembershipCreateWithoutUserInput, TenantMembershipUncheckedCreateWithoutUserInput>
  }

  export type TenantMembershipUpdateWithWhereUniqueWithoutUserInput = {
    where: TenantMembershipWhereUniqueInput
    data: XOR<TenantMembershipUpdateWithoutUserInput, TenantMembershipUncheckedUpdateWithoutUserInput>
  }

  export type TenantMembershipUpdateManyWithWhereWithoutUserInput = {
    where: TenantMembershipScalarWhereInput
    data: XOR<TenantMembershipUpdateManyMutationInput, TenantMembershipUncheckedUpdateManyWithoutUserInput>
  }

  export type ZipCityCreateWithoutZipCacheInput = {
    name: string
    state?: string
  }

  export type ZipCityUncheckedCreateWithoutZipCacheInput = {
    id?: number
    name: string
    state?: string
  }

  export type ZipCityCreateOrConnectWithoutZipCacheInput = {
    where: ZipCityWhereUniqueInput
    create: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput>
  }

  export type ZipCityCreateManyZipCacheInputEnvelope = {
    data: ZipCityCreateManyZipCacheInput | ZipCityCreateManyZipCacheInput[]
    skipDuplicates?: boolean
  }

  export type ZipCityUpsertWithWhereUniqueWithoutZipCacheInput = {
    where: ZipCityWhereUniqueInput
    update: XOR<ZipCityUpdateWithoutZipCacheInput, ZipCityUncheckedUpdateWithoutZipCacheInput>
    create: XOR<ZipCityCreateWithoutZipCacheInput, ZipCityUncheckedCreateWithoutZipCacheInput>
  }

  export type ZipCityUpdateWithWhereUniqueWithoutZipCacheInput = {
    where: ZipCityWhereUniqueInput
    data: XOR<ZipCityUpdateWithoutZipCacheInput, ZipCityUncheckedUpdateWithoutZipCacheInput>
  }

  export type ZipCityUpdateManyWithWhereWithoutZipCacheInput = {
    where: ZipCityScalarWhereInput
    data: XOR<ZipCityUpdateManyMutationInput, ZipCityUncheckedUpdateManyWithoutZipCacheInput>
  }

  export type ZipCityScalarWhereInput = {
    AND?: ZipCityScalarWhereInput | ZipCityScalarWhereInput[]
    OR?: ZipCityScalarWhereInput[]
    NOT?: ZipCityScalarWhereInput | ZipCityScalarWhereInput[]
    id?: IntFilter<"ZipCity"> | number
    name?: StringFilter<"ZipCity"> | string
    state?: StringFilter<"ZipCity"> | string
    zipCode?: StringFilter<"ZipCity"> | string
  }

  export type ZipCacheCreateWithoutZipCityInput = {
    zip: string
    city?: string
    state: string
    lat?: number | null
    lng?: number | null
    createdAt?: Date | string
  }

  export type ZipCacheUncheckedCreateWithoutZipCityInput = {
    zip: string
    city?: string
    state: string
    lat?: number | null
    lng?: number | null
    createdAt?: Date | string
  }

  export type ZipCacheCreateOrConnectWithoutZipCityInput = {
    where: ZipCacheWhereUniqueInput
    create: XOR<ZipCacheCreateWithoutZipCityInput, ZipCacheUncheckedCreateWithoutZipCityInput>
  }

  export type ZipCacheUpsertWithoutZipCityInput = {
    update: XOR<ZipCacheUpdateWithoutZipCityInput, ZipCacheUncheckedUpdateWithoutZipCityInput>
    create: XOR<ZipCacheCreateWithoutZipCityInput, ZipCacheUncheckedCreateWithoutZipCityInput>
    where?: ZipCacheWhereInput
  }

  export type ZipCacheUpdateToOneWithWhereWithoutZipCityInput = {
    where?: ZipCacheWhereInput
    data: XOR<ZipCacheUpdateWithoutZipCityInput, ZipCacheUncheckedUpdateWithoutZipCityInput>
  }

  export type ZipCacheUpdateWithoutZipCityInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ZipCacheUncheckedUpdateWithoutZipCityInput = {
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvoiceCreateManyCustomerInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type OrderCreateManyCustomerInput = {
    id: string
    orderNumber: string
    tenantId: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
  }

  export type InvoiceUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateManyWithoutOrderNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutOrderNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceDetailCreateManyDiscountInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    taxId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUpdateWithoutDiscountInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Invoice?: InvoiceUpdateOneRequiredWithoutInvoiceDetailNestedInput
    Product?: ProductUpdateOneRequiredWithoutInvoiceDetailNestedInput
    TaxRate?: TaxRateUpdateOneWithoutInvoiceDetailNestedInput
  }

  export type InvoiceDetailUncheckedUpdateWithoutDiscountInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutDiscountInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceCreateManyInvoiceInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type InvoiceDetailCreateManyInvoiceInput = {
    id?: number
    productId: number
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceVersionCreateManyInvoiceInput = {
    id?: number
    number: string
    data: JsonNullValueInput | InputJsonValue
    modifiedAt?: Date | string
    modifiedBy: string
  }

  export type PaymentCreateManyInvoiceInput = {
    id?: number
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailCreateManyInvoiceInput = {
    id?: number
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type InvoiceUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceDetailUpdateWithoutInvoiceInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Discount?: DiscountUpdateOneWithoutInvoiceDetailNestedInput
    Product?: ProductUpdateOneRequiredWithoutInvoiceDetailNestedInput
    TaxRate?: TaxRateUpdateOneWithoutInvoiceDetailNestedInput
  }

  export type InvoiceDetailUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceVersionUpdateWithoutInvoiceInput = {
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceVersionUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceVersionUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    number?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    modifiedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUpdateWithoutInvoiceInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Payment_createdByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_createdByIdToUserNestedInput
    User_Payment_updatedByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_updatedByIdToUserNestedInput
  }

  export type PaymentUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUpdateWithoutInvoiceInput = {
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_ShippingDetail_createdByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_createdByIdToUserNestedInput
    User_ShippingDetail_updatedByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_updatedByIdToUserNestedInput
  }

  export type ShippingDetailUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceCreateManyOrderInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type OrderItemCreateManyOrderInput = {
    id?: number
    productId: number
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type InvoiceUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemUpdateWithoutOrderInput = {
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Product?: ProductUpdateOneRequiredWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type InvoiceDetailCreateManyProductInput = {
    id?: number
    invoiceId: string
    quantity: number
    taxId?: number | null
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type OrderItemCreateManyProductInput = {
    id?: number
    orderId: string
    sku: string
    name: string
    description?: string | null
    variant?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductIdentifierCreateManyProductInput = {
    id?: number
    type: $Enums.ProductIdentifierType
    value: string
    imageUrl?: string | null
  }

  export type ProductVariantCreateManyProductInput = {
    id?: number
    name: string
    sku: string
    barcode?: string | null
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type InvoiceDetailUpdateWithoutProductInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Discount?: DiscountUpdateOneWithoutInvoiceDetailNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutInvoiceDetailNestedInput
    TaxRate?: TaxRateUpdateOneWithoutInvoiceDetailNestedInput
  }

  export type InvoiceDetailUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    taxId?: NullableIntFieldUpdateOperationsInput | number | null
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type OrderItemUpdateWithoutProductInput = {
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    Order?: OrderUpdateOneRequiredWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductIdentifierUpdateWithoutProductInput = {
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductIdentifierUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductIdentifierUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: EnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType
    value?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductVariantUpdateWithoutProductInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductVariantUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    specs?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceDetailCreateManyTaxRateInput = {
    id?: number
    invoiceId: string
    productId: number
    quantity: number
    discountId?: number | null
    lineTotal: Decimal | DecimalJsLike | number | string
  }

  export type TenantCreateManyTaxRateInput = {
    id: string
    name: string
    companyName?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    zipPlus4?: string | null
    email?: string | null
    website?: string | null
    isUspsValidated?: boolean
    createdAt?: Date | string
    invoiceCounter?: number
    invoiceFormat?: string | null
    invoicePrefix?: string | null
    isInvoiceSetup?: boolean
    autoResetYearly?: boolean
    lastResetYear?: number | null
    deleted?: boolean
    plan?: $Enums.PlanTier
  }

  export type InvoiceDetailUpdateWithoutTaxRateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Discount?: DiscountUpdateOneWithoutInvoiceDetailNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutInvoiceDetailNestedInput
    Product?: ProductUpdateOneRequiredWithoutInvoiceDetailNestedInput
  }

  export type InvoiceDetailUncheckedUpdateWithoutTaxRateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InvoiceDetailUncheckedUpdateManyWithoutTaxRateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    discountId?: NullableIntFieldUpdateOperationsInput | number | null
    lineTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type TenantUpdateWithoutTaxRateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUpdateOneWithoutTenantNestedInput
    Order?: OrderUpdateManyWithoutTenantNestedInput
    Product?: ProductUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTaxRateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
    Business?: BusinessUncheckedUpdateManyWithoutTenantNestedInput
    Customer?: CustomerUncheckedUpdateManyWithoutTenantNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutTenantNestedInput
    InvoiceSettings?: InvoiceSettingsUncheckedUpdateOneWithoutTenantNestedInput
    Order?: OrderUncheckedUpdateManyWithoutTenantNestedInput
    Product?: ProductUncheckedUpdateManyWithoutTenantNestedInput
    TenantMembership?: TenantMembershipUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateManyWithoutTaxRateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    zipPlus4?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    isUspsValidated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceCounter?: IntFieldUpdateOperationsInput | number
    invoiceFormat?: NullableStringFieldUpdateOperationsInput | string | null
    invoicePrefix?: NullableStringFieldUpdateOperationsInput | string | null
    isInvoiceSetup?: BoolFieldUpdateOperationsInput | boolean
    autoResetYearly?: BoolFieldUpdateOperationsInput | boolean
    lastResetYear?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    plan?: EnumPlanTierFieldUpdateOperationsInput | $Enums.PlanTier
  }

  export type BusinessCreateManyTenantInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type CustomerCreateManyTenantInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    deleted?: boolean
  }

  export type InvoiceCreateManyTenantInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    createdById: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type OrderCreateManyTenantInput = {
    id: string
    orderNumber: string
    customerId?: number | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
  }

  export type ProductCreateManyTenantInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    updatedById: string
    description?: string | null
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
  }

  export type TenantMembershipCreateManyTenantInput = {
    id: string
    userId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type BusinessUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Business_createdByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_createdByIdToUserNestedInput
    User_Business_updatedByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_updatedByIdToUserNestedInput
  }

  export type BusinessUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUncheckedUpdateManyWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerUpdateWithoutTenantInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Customer_createdByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput
    User_Customer_updatedByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput
    Invoice?: InvoiceUpdateManyWithoutCustomerNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateManyWithoutOrderNestedInput
    Customer?: CustomerUpdateOneWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutOrderNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUpdateWithoutTenantInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutTenantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneRequiredWithoutTenantMembershipNestedInput
  }

  export type TenantMembershipUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipUncheckedUpdateManyWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AuditLogCreateManyUserInput = {
    id: string
    action: string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId: string
    entityType: string
    performedAt?: Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean
  }

  export type BusinessCreateManyUser_Business_createdByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    updatedById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type BusinessCreateManyUser_Business_updatedByIdToUserInput = {
    id: string
    createdAt?: Date | string
    updatedAt: Date | string
    tenantId: string
    createdById: string
    businessType: string
    businessCategory: string
    businessSubcategory: string
    legalBusinessName: string
    doingBusinessAs?: string | null
    ein: string
    businessState: string
    onlineStatus: string
    onlineLink?: string | null
    businessEmail?: string | null
    addressLine1: string
    addressLine2?: string | null
    zip: string
    city: string
    isManualEntry?: boolean
    deleted?: boolean
  }

  export type CustomerCreateManyUser_Customer_createdByIdToUserInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    updatedById: string
    tenantId: string
    deleted?: boolean
  }

  export type CustomerCreateManyUser_Customer_updatedByIdToUserInput = {
    id?: number
    name: string
    email: string
    phone: string
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    tenantId: string
    deleted?: boolean
  }

  export type DiscountCreateManyUser_Discount_createdByIdToUserInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    updatedById: string
    deleted?: boolean
  }

  export type DiscountCreateManyUser_Discount_updatedByIdToUserInput = {
    id?: number
    name: string
    discountValue: Decimal | DecimalJsLike | number | string
    createdById: string
    deleted?: boolean
  }

  export type InvoiceCreateManyUser_Invoice_createdByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    updatedById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type InvoiceCreateManyUser_Invoice_soldByUserIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    updatedById: string
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type InvoiceCreateManyUser_Invoice_updatedByIdToUserInput = {
    id: string
    number?: string | null
    amount: Decimal | DecimalJsLike | number | string
    status?: $Enums.InvoiceStatus
    paymentType?: $Enums.PaymentType | null
    orderId?: string | null
    parentInvoiceId?: string | null
    customerId: number
    tenantId: string
    createdById: string
    soldByUserId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deleted?: boolean
    taxExempt?: boolean
    taxExemptId?: string | null
  }

  export type PaymentCreateManyUser_Payment_createdByIdToUserInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    updatedById: string
    deleted?: boolean
  }

  export type PaymentCreateManyUser_Payment_updatedByIdToUserInput = {
    id?: number
    invoiceId: string
    amount: Decimal | DecimalJsLike | number | string
    date: Date | string
    method: string
    status: string
    reference?: string | null
    createdById: string
    deleted?: boolean
  }

  export type ProductCreateManyUser_Product_createdByIdToUserInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    updatedById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
  }

  export type ProductCreateManyUser_Product_updatedByIdToUserInput = {
    id?: number
    name: string
    price: Decimal | DecimalJsLike | number | string
    imageUrl?: string | null
    variant?: string | null
    sku?: string | null
    barcode?: string | null
    qrCodeUrl?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    createdById: string
    description?: string | null
    tenantId: string
    archivedAt?: Date | string | null
    category?: string | null
    isActive?: boolean
    metaDesc?: string | null
    metaTitle?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: string | null
    stockAlertAt?: number | null
    stockQuantity?: number
    tags?: ProductCreatetagsInput | string[]
    unit?: string | null
    visibility?: string
    slug?: string | null
    deleted?: boolean
  }

  export type ShippingDetailCreateManyUser_ShippingDetail_createdByIdToUserInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    updatedById: string
    deleted?: boolean
  }

  export type ShippingDetailCreateManyUser_ShippingDetail_updatedByIdToUserInput = {
    id?: number
    invoiceId: string
    address: string
    shippingDate: Date | string
    estimatedArrival: Date | string
    createdById: string
    deleted?: boolean
  }

  export type TaxRateCreateManyUser_TaxRate_createdByIdToUserInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    updatedById: string
    deleted?: boolean
  }

  export type TaxRateCreateManyUser_TaxRate_updatedByIdToUserInput = {
    id?: number
    name: string
    rate: Decimal | DecimalJsLike | number | string
    createdById: string
    deleted?: boolean
  }

  export type TenantMembershipCreateManyUserInput = {
    id: string
    tenantId: string
    role: $Enums.TenantRole
    permissions?: TenantMembershipCreatepermissionsInput | $Enums.Permission[]
    deleted?: boolean
  }

  export type AuditLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AuditLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AuditLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    after?: NullableJsonNullValueInput | InputJsonValue
    before?: NullableJsonNullValueInput | InputJsonValue
    entityId?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    performedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUpdateWithoutUser_Business_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUpdateOneRequiredWithoutBusinessNestedInput
    User_Business_updatedByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_updatedByIdToUserNestedInput
  }

  export type BusinessUncheckedUpdateWithoutUser_Business_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUncheckedUpdateManyWithoutUser_Business_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUpdateWithoutUser_Business_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Business_createdByIdToUser?: UserUpdateOneRequiredWithoutBusiness_Business_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutBusinessNestedInput
  }

  export type BusinessUncheckedUpdateWithoutUser_Business_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BusinessUncheckedUpdateManyWithoutUser_Business_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    businessType?: StringFieldUpdateOperationsInput | string
    businessCategory?: StringFieldUpdateOperationsInput | string
    businessSubcategory?: StringFieldUpdateOperationsInput | string
    legalBusinessName?: StringFieldUpdateOperationsInput | string
    doingBusinessAs?: NullableStringFieldUpdateOperationsInput | string | null
    ein?: StringFieldUpdateOperationsInput | string
    businessState?: StringFieldUpdateOperationsInput | string
    onlineStatus?: StringFieldUpdateOperationsInput | string
    onlineLink?: NullableStringFieldUpdateOperationsInput | string | null
    businessEmail?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    isManualEntry?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerUpdateWithoutUser_Customer_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUpdateOneRequiredWithoutCustomerNestedInput
    User_Customer_updatedByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_updatedByIdToUserNestedInput
    Invoice?: InvoiceUpdateManyWithoutCustomerNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutUser_Customer_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutUser_Customer_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerUpdateWithoutUser_Customer_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Customer_createdByIdToUser?: UserUpdateOneRequiredWithoutCustomer_Customer_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutCustomerNestedInput
    Invoice?: InvoiceUpdateManyWithoutCustomerNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutUser_Customer_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUncheckedUpdateManyWithoutCustomerNestedInput
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutUser_Customer_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DiscountUpdateWithoutUser_Discount_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Discount_updatedByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountUncheckedUpdateWithoutUser_Discount_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountUncheckedUpdateManyWithoutUser_Discount_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DiscountUpdateWithoutUser_Discount_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Discount_createdByIdToUser?: UserUpdateOneRequiredWithoutDiscount_Discount_createdByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountUncheckedUpdateWithoutUser_Discount_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutDiscountNestedInput
  }

  export type DiscountUncheckedUpdateManyWithoutUser_Discount_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    discountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceUpdateWithoutUser_Invoice_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutUser_Invoice_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceUpdateWithoutUser_Invoice_soldByUserIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    User_Invoice_updatedByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_updatedByIdToUserNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutUser_Invoice_soldByUserIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_soldByUserIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceUpdateWithoutUser_Invoice_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    User_Invoice_createdByIdToUser?: UserUpdateOneRequiredWithoutInvoice_Invoice_createdByIdToUserNestedInput
    Customer?: CustomerUpdateOneRequiredWithoutInvoiceNestedInput
    Order?: OrderUpdateOneWithoutInvoiceNestedInput
    Invoice?: InvoiceUpdateOneWithoutOther_InvoiceNestedInput
    other_Invoice?: InvoiceUpdateManyWithoutInvoiceNestedInput
    User_Invoice_soldByUserIdToUser?: UserUpdateOneWithoutInvoice_Invoice_soldByUserIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutUser_Invoice_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Invoice?: InvoiceUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutInvoiceNestedInput
    InvoiceVersion?: InvoiceVersionUncheckedUpdateManyWithoutInvoiceNestedInput
    Payment?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    ShippingDetail?: ShippingDetailUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutUser_Invoice_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    number?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    paymentType?: NullableEnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    parentInvoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: IntFieldUpdateOperationsInput | number
    tenantId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    soldByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    taxExempt?: BoolFieldUpdateOperationsInput | boolean
    taxExemptId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutUser_Payment_createdByIdToUserInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateOneRequiredWithoutPaymentNestedInput
    User_Payment_updatedByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_updatedByIdToUserNestedInput
  }

  export type PaymentUncheckedUpdateWithoutUser_Payment_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUncheckedUpdateManyWithoutUser_Payment_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUpdateWithoutUser_Payment_updatedByIdToUserInput = {
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_Payment_createdByIdToUser?: UserUpdateOneRequiredWithoutPayment_Payment_createdByIdToUserNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutUser_Payment_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUncheckedUpdateManyWithoutUser_Payment_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUpdateWithoutUser_Product_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    User_Product_updatedByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_updatedByIdToUserNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutUser_Product_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUser_Product_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductUpdateWithoutUser_Product_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    User_Product_createdByIdToUser?: UserUpdateOneRequiredWithoutProduct_Product_createdByIdToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutUser_Product_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductIdentifier?: ProductIdentifierUncheckedUpdateManyWithoutProductNestedInput
    ProductVariant?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUser_Product_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    variant?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    qrCodeUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metaDesc?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    primaryIdentifierType?: NullableEnumProductIdentifierTypeFieldUpdateOperationsInput | $Enums.ProductIdentifierType | null
    primaryIdentifierValue?: NullableStringFieldUpdateOperationsInput | string | null
    stockAlertAt?: NullableIntFieldUpdateOperationsInput | number | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    tags?: ProductUpdatetagsInput | string[]
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    visibility?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUpdateWithoutUser_ShippingDetail_createdByIdToUserInput = {
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Invoice?: InvoiceUpdateOneRequiredWithoutShippingDetailNestedInput
    User_ShippingDetail_updatedByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_updatedByIdToUserNestedInput
  }

  export type ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    User_ShippingDetail_createdByIdToUser?: UserUpdateOneRequiredWithoutShippingDetail_ShippingDetail_createdByIdToUserNestedInput
    Invoice?: InvoiceUpdateOneRequiredWithoutShippingDetailNestedInput
  }

  export type ShippingDetailUncheckedUpdateWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ShippingDetailUncheckedUpdateManyWithoutUser_ShippingDetail_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    shippingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    estimatedArrival?: DateTimeFieldUpdateOperationsInput | Date | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TaxRateUpdateWithoutUser_TaxRate_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutTaxRateNestedInput
    User_TaxRate_updatedByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_updatedByIdToUserNestedInput
    Tenant?: TenantUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateWithoutUser_TaxRate_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutTaxRateNestedInput
    Tenant?: TenantUncheckedUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateManyWithoutUser_TaxRate_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    updatedById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TaxRateUpdateWithoutUser_TaxRate_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUpdateManyWithoutTaxRateNestedInput
    User_TaxRate_createdByIdToUser?: UserUpdateOneRequiredWithoutTaxRate_TaxRate_createdByIdToUserNestedInput
    Tenant?: TenantUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateWithoutUser_TaxRate_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    InvoiceDetail?: InvoiceDetailUncheckedUpdateManyWithoutTaxRateNestedInput
    Tenant?: TenantUncheckedUpdateManyWithoutTaxRateNestedInput
  }

  export type TaxRateUncheckedUpdateManyWithoutUser_TaxRate_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdById?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
    Tenant?: TenantUpdateOneRequiredWithoutTenantMembershipNestedInput
  }

  export type TenantMembershipUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TenantMembershipUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    role?: EnumTenantRoleFieldUpdateOperationsInput | $Enums.TenantRole
    permissions?: TenantMembershipUpdatepermissionsInput | $Enums.Permission[]
    deleted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ZipCityCreateManyZipCacheInput = {
    id?: number
    name: string
    state?: string
  }

  export type ZipCityUpdateWithoutZipCacheInput = {
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
  }

  export type ZipCityUncheckedUpdateWithoutZipCacheInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
  }

  export type ZipCityUncheckedUpdateManyWithoutZipCacheInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}